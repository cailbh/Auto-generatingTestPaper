{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\src\\components\\Scatter\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\src\\components\\Scatter\\index.vue","mtime":1684141770268},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"scatter\" ref=\"scatterDiv\">\r\n    <div class=\"panelHead\">Performance View</div>\r\n    <div id=\"scatterCantain\" ref=\"scatterCantain\" class=\"panelBody\">\r\n    </div>\r\n\r\n    <div class=\"scatterTooltip toolTip\">\r\n      <p>\r\n          <br /><strong class=\"name toolTipAttr\"></strong>\r\n          <br /><strong class=\"text toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr0 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr1 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr2 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr3 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr4 toolTipAttr\"></strong>\r\n        </p>\r\n    </div>\r\n    <div class=\"close\" ref=\"listen\">\r\n    </div>\r\n    <div id=\"addGroupDiv\" @click=\"addGroupClk\" ref=\"addBtn\">\r\n      <img class=\"icons\" :src=\"addGroupUrl\">\r\n    </div>\r\n    <div id=\"delGroupDiv\" @click=\"delGroupClk\" ref=\"addBtn\">\r\n      <img class=\"icons\" :src=\"delGroupUrl\">\r\n    </div>\r\n    <div id=\"confirmGroupDiv\" @click=\"confirmGroupClk\" ref=\"addBtn\">\r\n      <img class=\"icons\" :src=\"confirmGroupUrl\">\r\n    </div>\r\n    <!-- <div id=\"moveLeft\" ref=\"movescatterLeft\"></div>\r\n                    <div id=\"moveRight\" ref=\"movescatterRight\"></div> -->\r\n    <!-- <div id=\"assistscatterCantain\" class=\"panel\">\r\n        <div class=\"panelHead\"></div>\r\n      </div> -->\r\n    <!-- <div id=\"zoomInDiv\" @click=\"zoomInLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomInUrl\">\r\n    </div>\r\n    <div id=\"zoomOutDiv\" @click=\"zoomOutLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomOutUrl\">\r\n    </div>\r\n    <div id=\"editToolDiv\" @click=\"editToolClk\">\r\n      <img class=\"icons\" :src=\"editToolUrl\">\r\n    </div> -->\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\n// import TestJson from \"@/assets/json/case2_fin.json\";\r\n// import TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport tools from \"@/utils/tools.js\";\r\nimport contour from \"@/utils/contour\";\r\n\r\nexport default {\r\n  props: [\"toolsState\"],\r\n  data() {\r\n    return {\r\n      data: '',\r\n      addGroupUrl: require(\"@/assets/img/addGroup.png\"),\r\n      delGroupUrl: require(\"@/assets/img/delGroup.png\"),\r\n      confirmGroupUrl: require(\"@/assets/img/confirmGroup.png\"),\r\n      scatterHeight: 0,\r\n      selectStartX: 0,\r\n      selectStartY: 0,\r\n      selectEndX: 0,\r\n      selectEndY: 0,\r\n      selectGroupId: -1,\r\n      selectGroup: [],\r\n      stuAttrList: [],\r\n      stuAttrMaxMinList: [],\r\n      SelectStudentList: [],\r\n      groupData: [],\r\n      selectClick: 0,\r\n      problemsData: [],\r\n      proSetOriData: [],\r\n      submissionsData: [],\r\n      studentsData: [],\r\n      conceptsData: [],\r\n      conceptTree: [],\r\n      proSetData: [],\r\n      interY: 10,\r\n      attrColorList: [],\r\n      problemConceptData: [],\r\n      userProblemData: [],\r\n      MaxMinX: [],\r\n      MaxMinY: [],\r\n      proAttrList: [],\r\n      proAttrMaxMinList: [],\r\n      conMaxMinDR: [],\r\n      conMaxMinDC: [],\r\n      conAttrList: [],\r\n      conAttrMaxMinList: [],\r\n      Ent_problem: [],\r\n      Ent_concept: [],\r\n      entG: \"\",\r\n      entSetG: \"\",\r\n      entbySetG: \"\",\r\n      relG: \"\",\r\n      curProblemId: '',\r\n      curConceptId: '',\r\n      curProblemSetId: '',\r\n      selectProblemId: '',\r\n      curConceptId: '',\r\n      selectConceptId: '',\r\n      proX: 500,\r\n      proY: 0,\r\n      setX: 800,\r\n      setY: 0,\r\n      treeX: 50,\r\n      treeY: 0,\r\n      proStepY: 0,\r\n      conStepY: 0,\r\n      rootSvg: null,\r\n      rootSvgf: null,\r\n      groupsSvg: null,\r\n      arcG: null,\r\n      backG: null,\r\n      scatterZoom: null,\r\n      jgDrag: true,\r\n      curEntId: '',\r\n      minDImportance: 0,\r\n      maxDImportance: 0,\r\n      minDRelevance: 0,\r\n      maxDRelevance: 0,\r\n      maxDDuration: 0,\r\n      maxTotalDuration: 0,\r\n      videoDuration: 672,\r\n      totalDuration: 1000,\r\n      importanceColor_linear: null,\r\n      importanceCompute_color: null,\r\n      relevanceScale_linear: null,\r\n      scatterGTransformK: 1,\r\n      scatterGTransformX: 0,\r\n      scatterGTransformY: 0,\r\n      scatterSvgScale: 1,\r\n      moveTimer: null,\r\n      moveFlag: false,\r\n      stuMinColor: \"rgb(255, 255, 255)\",\r\n      stuMaxColor: \"rgb(76, 141, 5)\",\r\n      stepX: 80,\r\n      stepY: 100,\r\n      typeXMap: {\r\n        \"TRUE_OR_FALSE\": 0,\r\n        \"MULTIPLE_CHOICE\": 1,\r\n        \"FILL_IN_THE_BLANK\": 2,\r\n        \"PROGRAMMING\": 3,\r\n        \"CODE_COMPLETION\": 4,\r\n        \"MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER\": 5\r\n      },\r\n      circleInterval: 55,\r\n      width: 0,\r\n      height: 0,\r\n      curToolState: 'unEdit',\r\n      margin: { top: 1, right: 2, bottom: 0, left: 2 },\r\n      stuColorList: [],\r\n      mcolor: [\r\n        \"rgb(255,60,60)\",\r\n        \"rgb(155,20,100)\",\r\n        \"rgb(255,83,255)\",\r\n        \"rgb(200,100,50)\",\r\n        \"rgb(235,135,162)\",\r\n        \"rgb(200,200,102)\",\r\n        \"rgb(255,178,101)\",\r\n        \"rgb(63,151,134)\",\r\n        \"rgb(83,155,255)\",\r\n        \"rgb(50,200,120)\",\r\n        \"rgb(2,50,200)\",\r\n        \"rgb(0,122,244)\",\r\n        \"rgb(150,122,244)\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      mLigntcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      attrColorList:[\r\n      \"rgb(255, 77, 109)\",\r\n        \"rgb(255, 231, 32)\",\r\n        \"rgb(250, 210, 50)\",\r\n        \"rgb(255, 120, 90)\",\r\n        \"rgb(255, 159, 28)\",\r\n        \"rgb(6, 214, 160)\",\r\n        \"rgb(125, 98, 211)\",\r\n      ],\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    selectGroupId(val) {\r\n      const _this = this;\r\n      this.$refs.listen.addEventListener(\"mousedown\", _this.mouseDown);\r\n    },\r\n    groupsSvg: {\r\n      deep: true,\r\n      handler(val) {\r\n        var content = this.groupsSvg.html();\r\n        this.rootSvgf.html(content)\r\n        this.drawFigureAnnotation();\r\n      }\r\n    },\r\n    SelectStudentList: {\r\n      deep: true,\r\n      handler(val) {\r\n        let entG = this.entG;\r\n        this.updataScatter();\r\n        this.drawContour(entG);\r\n      }\r\n    },\r\n    selectGroup(val) {\r\n      const _this = this;\r\n      d3.selectAll(\".stuGroup\").remove();\r\n      let num = val.length;\r\n      let backG = _this.rootSvgf;\r\n      let colorList = _this.stuColorList;\r\n      for (let i = 0; i < num; i++) {\r\n        let cx = 20 + i * 40;\r\n        let cy = 500;\r\n        let r = 12;\r\n        let fill = colorList[i];\r\n        let opacity = 1;\r\n        let circle = _this.drawCircle(backG, cx, cy, r, \"white\", opacity, fill, 3, 'stuGroup', `stuGroup_${i}`);\r\n        circle.on(\"click\", function () {\r\n          d3.selectAll(`.stuGroup`).attr(\"opacity\", 0.1);\r\n          d3.select(this).attr(\"opacity\", 1);\r\n          let id = d3.select(this).attr(\"id\").split(\"_\")[1];\r\n          _this.selectGroupId = id;\r\n\r\n          d3.select(\".close\").classed(\"hidden\", false);\r\n        }).on(\"mouseover\", function () {\r\n          d3.selectAll(`.stuGroup`).attr(\"opacity\", 0.1);\r\n          d3.select(this).attr(\"opacity\", 1);\r\n          _this.$refs.listen.removeEventListener(\"mouseup\", _this.mouseUp);\r\n          _this.$refs.listen.removeEventListener(\"mousedown\", _this.mouseDown);\r\n          _this.jgDrag = false;\r\n        })\r\n      }\r\n    },\r\n    type(val) {\r\n    },\r\n  },\r\n  methods: {\r\n\r\n    addGroupClk() {\r\n      const _this = this;\r\n      let selectStuGroup = _this.selectGroup;\r\n      // if (selectStuGroup.length < 5)\r\n      //   selectStuGroup.push([]);\r\n      selectStuGroup = [[],[],[]]\r\n      _this.selectGroup = selectStuGroup;\r\n      // d3.select(`#addGroupDiv`)\r\n      // .attr(\"style\", function(){\r\n      //   return `right:${450-(selectStuGroup.length)*40}px`\r\n      // });\r\n    },\r\n    delGroupClk() {\r\n      const _this = this;\r\n      let selectStuGroup = _this.selectGroup;\r\n      if (selectStuGroup.length > 0)\r\n        selectStuGroup.pop();\r\n      _this.selectGroup = selectStuGroup;\r\n      // d3.select(`#addGroupDiv`)\r\n      // .attr(\"style\", function(){\r\n      //   return `right:${450-(selectStuGroup.length)*40}px`\r\n      // });\r\n    },\r\n    confirmGroupClk() {\r\n      const _this = this;\r\n      let selectStuGroup = _this.selectGroup;\r\n\r\n      this.$bus.$emit(\"SelectedStu\", _this.SelectStudentList);\r\n      // d3.select(`#addGroupDiv`)\r\n      // .attr(\"style\", function(){\r\n      //   return `right:${450-(selectStuGroup.length)*40}px`\r\n      // });\r\n    },\r\n\r\n    drawMain(svg) {\r\n      let _this = this;\r\n      let data = _this.data;\r\n      let margin = _this.margin;\r\n\r\n      let width = _this.width - margin.left - margin.right;\r\n      let height = _this.height - margin.top - margin.bottom;\r\n\r\n      let scatterGTransformX = _this.scatterGTransformX;\r\n      let scatterGTransformY = _this.scatterGTransformY;\r\n      let scatterGTransformK = _this.scatterGTransformK;\r\n\r\n      let groups = svg.append(\"g\").attr(\"id\", \"ggroups\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height)\r\n        .attr(\"transform\", \"translate(\" + scatterGTransformX + ',' + scatterGTransformY + \") scale(\" + scatterGTransformK + \")\");\r\n      this.groupsSvg = groups;\r\n\r\n      let backG = groups.append(\"g\").attr(\"id\", \"gbackG\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let arcG = groups.append(\"g\").attr(\"id\", \"garcG\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let relG = groups.append(\"g\").attr(\"id\", \"grelG\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let entSetG = groups.append(\"g\").attr(\"id\", \"gentSetG\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let entbySetG = groups.append(\"g\").attr(\"id\", \"gentbySetG\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let entG = groups.append(\"g\").attr(\"id\", \"gentG\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let frontG = groups.append(\"g\").attr(\"id\", \"gfrontG\").attr(\"class\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      let MaxMinX = _this.MaxMinX;\r\n      let MaxMinY = _this.MaxMinY;\r\n\r\n      let xSize_linear = d3.scaleLinear().domain([MaxMinX[1], MaxMinX[0]]).range([30, width - 30]);\r\n      let ySize_linear = d3.scaleLinear().domain([MaxMinY[1], MaxMinY[0]]).range([30, height - 30]);\r\n\r\n      _this.arcG = arcG;\r\n      _this.entG = entG;\r\n      _this.entSetG = entSetG;\r\n      _this.entbySetG = entbySetG;\r\n      _this.relG = relG;\r\n      _this.backG = backG;\r\n      _this.scatterZoom = scatterZoom;\r\n      let copyg = _this.rootSvgf.select(\"#ggroups\");\r\n      let interval = _this.circleInterval;\r\n\r\n\r\n\r\n      let scalePre = _this.scatterSvgScale;\r\n      let stx = 0;\r\n      let sty = 0;\r\n      let stk = 1;\r\n      var scatterZoom = d3.zoom()\r\n        .scaleExtent([0, 100])\r\n        .on(\"start\", (e) => {\r\n          if (_this.jgDrag) {\r\n            sty = e.transform.y;\r\n            stx = e.transform.x;\r\n            stk = e.transform.k;\r\n          }\r\n        })\r\n        .on('zoom', (e) => {\r\n          if (_this.jgDrag) {\r\n            scatterGTransformX = _this.scatterGTransformX + e.transform.x - stx;\r\n            scatterGTransformY = _this.scatterGTransformY + e.transform.y - sty;\r\n            scatterGTransformK = _this.scatterGTransformK + e.transform.k - stk;\r\n            groups.attr('transform', 'translate(' + (scatterGTransformX) + ',' + (scatterGTransformY) + ') scale(' + (scatterGTransformK) + ')')\r\n            _this.rootSvgf.selectAll(\".groups\").attr('transform', 'translate(' + (scatterGTransformX) + ',' + (scatterGTransformY) + ') scale(' + (scatterGTransformK) + ')')\r\n          }\r\n        })\r\n        .on('end', (e) => {\r\n          if (_this.jgDrag) {\r\n            _this.scatterGTransformX = scatterGTransformX;\r\n            _this.scatterGTransformY = scatterGTransformY;\r\n            _this.scatterGTransformK = scatterGTransformK;\r\n            groups.attr('transform', 'translate(' + (scatterGTransformX) + ',' + (scatterGTransformY) + ') scale(' + (scatterGTransformK) + ')')\r\n            _this.groupsSvg = groups;\r\n          }\r\n        });\r\n\r\n      svg.call(scatterZoom);\r\n      d3.select(\".close\").classed(\"hidden\", true);\r\n      d3.select(\".scatterTooltip\").classed(\"hidden\", true);\r\n      // svg.call(d3.zoom().on('start', null).on('zoom',null).on('end', null))\r\n\r\n      let attrList = _this.stuAttrList;\r\n      let stuAttrMaxMinList = _this.stuAttrMaxMinList;\r\n\r\n      let rSize_linear = d3.scaleLinear().domain([stuAttrMaxMinList[1][1], stuAttrMaxMinList[1][0]]).range([3, 8]);\r\n\r\n      let stuMaxColor = _this.stuMaxColor;\r\n      let stuMinColor = _this.stuMinColor;\r\n      let stuColor_linear = d3.scaleLinear().domain([stuAttrMaxMinList[1][1], stuAttrMaxMinList[1][0]]).range([0, 1]);\r\n      let stuCompute_color = d3.interpolate(stuMinColor, stuMaxColor);\r\n\r\n      let groupData = tools.deepClone(_this.groupData);\r\n      let colorList = _this.mcolor;\r\n      for (let i = 0; i < groupData.length; i++) {\r\n        let cx = xSize_linear(groupData[i]['x']);\r\n        let cy = ySize_linear(groupData[i]['y']);\r\n        let sId = groupData[i]['id']\r\n        groupData[i]['cx'] = cx;\r\n        groupData[i]['cy'] = cy;\r\n        groupData[i]['r'] = rSize_linear(groupData[i][attrList[1]]);\r\n        groupData[i]['fill'] = stuCompute_color(stuColor_linear(groupData[i][attrList[1]])) //'grey'//colorList[parseInt(groupData[i]['kmeansC'])];\r\n      }\r\n      _this.groupData = groupData;\r\n      _this.updataScatter();\r\n    },\r\n\r\n    drawTxt(svg, x, y, text, fill, fontsize = 12, idN, an = 'start') {\r\n      let txt = svg.append(\"text\")\r\n        .attr(\"y\", y)\r\n        .attr(\"x\", x)\r\n        .attr(\"id\", idN)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"font-size\", fontsize)\r\n        .style(\"text-anchor\", an)\r\n        .text(text)\r\n      return txt;\r\n    },\r\n    drawFigureAnnotation() {\r\n      const _this = this;\r\n      let frontG = _this.rootSvgf;\r\n\r\n      let stuMaxColor = _this.stuMaxColor;\r\n      let stuMinColor = _this.stuMinColor;\r\n\r\n      let len = 6;\r\n\r\n      let Color_linear = d3.scaleLinear().domain([0, len]).range([0, 1]);\r\n      let Rsize_linear = d3.scaleLinear().domain([0, len]).range([1, 6]);\r\n      let Compute_color = d3.interpolate(stuMinColor, stuMaxColor);\r\n\r\n      let textsr = _this.drawTxt(frontG, 6, 15, \"BestScoreingRate:\", \"black\", 10, `FigScater_con`);\r\n      let textat = _this.drawTxt(frontG, 6, 45, \"Attempts:\", \"black\", 10, `FigScater_con`);\r\n      let textbs = _this.drawTxt(frontG, 6, 75, \"ScoreingRate:\", \"black\", 10, `FigScater_con`);\r\n      let prex = 0;\r\n      let prerx = 0;\r\n      let colorSR = _this.attrColorList[0];\r\n      let colorBestS = _this.attrColorList[1];\r\n      let colorAttempts = _this.attrColorList[2];\r\n\r\n      _this.drawRect(frontG, 10, 58, 40, 5, 0, \"rgb(230,230,230)\", \"1\", \"grey\", \"1\", `FigScater_conRectColorB`, 'FigScater');\r\n      _this.drawRect(frontG, 10, 58, 30, 5, 0, colorAttempts, \"1\", \"grey\", \"1\", `FigScater_conRectColor`, 'FigScater');\r\n\r\n      _this.drawRect(frontG, 10, 88, 40, 5, 0, \"rgb(230,230,230)\", \"1\", \"grey\", \"1\", `FigScater_conRectB`, 'FigScater');\r\n      _this.drawRect(frontG, 10, 88, 30, 5, 0, colorSR, \"1\", \"grey\", \"1\", `FigScater_conRect`, 'FigScater');\r\n\r\n      let path1 = d3.path();\r\n      let points = [[10, 50], [10, 54], [14, 50], [10, 54], [14, 58], [10, 54], [10, 58], [10, 54], [40, 54], [40, 54], [36, 50], [40, 54], [36, 58], [40, 54], [40, 50], [40, 58]]\r\n      let points2 = [[10, 80], [10, 84], [14, 80], [10, 84], [14, 88], [10, 84], [10, 88], [10, 84], [40, 84], [40, 84], [36, 80], [40, 84], [36, 88], [40, 84], [40, 80], [40, 88]]\r\n      let curve_generator = d3.line()\r\n        .x((d) => d[0])\r\n        .y((d) => d[1])\r\n      // .curve(d3.curveBasisClosed)\r\n      _this.drawLine(frontG, curve_generator(points), \"black\", 1, '0', '1', `line1`, 'FigScater_line1', \"rgb(230,230,230)\");\r\n      _this.drawLine(frontG, curve_generator(points2), \"black\", 1, '0', '1', `line2`, 'FigScater_line1', \"rgb(230,230,230)\");\r\n      for (let i = 0; i < len * 3; i++) {\r\n      }\r\n      for (let i = 0; i < len; i++) {\r\n        let color = Compute_color(Color_linear(i));\r\n        let circle = _this.drawCircle(frontG, 15 + prex, 23, Rsize_linear(i), color, 1, \"none\", \"1\", 'FigScater', `FigScater_conColor${i}`);\r\n        prex += Rsize_linear(i) * 2 + 4;\r\n        prerx += i * 4 + 2;\r\n      }\r\n\r\n    },\r\n    drawContour(svg) {\r\n      const _this = this;\r\n      d3.selectAll(\".counter\").remove();\r\n      let groupData = tools.deepClone(_this.groupData);\r\n      let SelectStudentList = _this.SelectStudentList;\r\n      let nodesList = [\r\n        [], [], [], [], []\r\n      ]\r\n      for (let i = 0; i < SelectStudentList.length; i++) {\r\n        for (let j = 0; j < SelectStudentList[i].length; j++) {\r\n          let stuD = groupData.find(function (s) { return s['id'] == SelectStudentList[i][j] });\r\n          let stuTemp = {\r\n            x: stuD['cx'],\r\n            y: stuD['cy'],\r\n            r: stuD['r'] + 6 * 3 - 3\r\n          }\r\n          nodesList[i].push(stuTemp);\r\n        }\r\n      }\r\n      let colorList = _this.stuColorList;\r\n      // for(let i=0;i<groupData.length;i++){\r\n      //   let sId = groupData[i]['id']\r\n      //     nodesList[parseInt(groupData[i]['kmeansC'])].push({\r\n      //       x:groupData[i]['cx'],\r\n      //       y:groupData[i]['cy'],\r\n      //       r:groupData[i]['r']\r\n      //     })\r\n      // }\r\n      let k = 0;\r\n      nodesList.forEach(nodeList => {\r\n        let path = contour(nodeList, 80);\r\n        let contourData = _this.arcsToPaths(path)\r\n        contourData.forEach(contourD => {\r\n          svg.append(\"path\")\r\n            .attr(\"class\", \"counter\")\r\n            .attr(\"d\", function () { return contourD.d; })\r\n            .style(\"stroke\", colorList[parseInt(k)])\r\n            .style(\"stroke-width\", 3)\r\n            .style(\"opacity\", 1)\r\n            // .attr(\"stroke-dasharray\", \"3\")\r\n            // .attr(\"stroke-dashoffset\", \"30\")\r\n            .attr(\"transform\", function () { return contourD.transform; });\r\n        })\r\n        k++;\r\n      })\r\n\r\n    },\r\n    drawPolygon(svg, points, idName, strokeWidth, stroke, fill) {\r\n      let polygon = svg.append(\"polygon\")\r\n        .attr(\"points\", points)\r\n        .attr(\"id\", idName)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n\r\n        .attr(\"stroke-width\", strokeWidth)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"stroke\", stroke)\r\n      return polygon;\r\n    },\r\n    arcsToPaths(arcs) {\r\n      let paths = [];\r\n      let arcGen = d3.arc();\r\n\r\n      arcs.forEach(function (arc) {\r\n        let startAngleTemp = arc.startAngle;\r\n\r\n        if (startAngleTemp > arc.endAngle) {\r\n          startAngleTemp -= 2 * Math.PI;\r\n        }\r\n\r\n        paths.push({\r\n          d: arcGen({\r\n            innerRadius: arc.radius,\r\n            outerRadius: arc.radius,\r\n            startAngle: startAngleTemp,\r\n            endAngle: arc.endAngle\r\n          }),\r\n          transform: \"translate(\" + arc.center.x + \",\" + arc.center.y + \")\"\r\n        });\r\n      });\r\n\r\n      return paths;\r\n    },\r\n    drawCircle(svg, x, y, r, fill, opacity, stroke, width, className = 'entCircle', idName) {\r\n      const _this = this;\r\n\r\n      d3.select(`#${idName}`).remove();\r\n      let circle = svg.append(\"circle\")\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"cx\", x)\r\n        .attr(\"cy\", y)\r\n        .attr(\"r\", r)\r\n        .attr('stroke', stroke)\r\n        .attr('stroke-width', width)\r\n        .attr(\"fill\", fill)\r\n      return circle;\r\n    },\r\n\r\n    drawLine(svg, path, stroke, width, stroke_dasharray = \"0\", opacity, idName, className, fill = 'none') {\r\n      d3.select(`#${idName}`).remove();\r\n      let line = svg.append('path')\r\n        .attr('d', path.toString())\r\n        .attr('stroke', stroke)\r\n        .attr('class', className)\r\n        .attr('id', idName)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr('stroke-width', width)\r\n        .style(\"stroke-opacity\", opacity)\r\n        .attr('fill', fill)\r\n      return line;\r\n    },\r\n    getMaxMin(data, attrname) {\r\n      return [\r\n        Math.max.apply(Math, data.map(function (d) { return d[attrname]; })),\r\n        Math.min.apply(Math, data.map(function (d) { return d[attrname]; }))\r\n      ]\r\n    },\r\n    mouseDown(event) {\r\n      const _this = this;\r\n      _this.jgDrag = false;\r\n      let entG = _this.entG\r\n      let sx = event.layerX - _this.scatterGTransformX;\r\n      let sy = event.layerY - _this.scatterGTransformY;\r\n      _this.selectStartX = sx;\r\n      _this.selectStartY = sy;\r\n      // _this.drawRect(entG, sx, sy, 100, 100, 10, \"grey\", \"5\", \"none\",\"0.1\", `SelectRect`, 'SelectRect');\r\n      this.$refs.listen.addEventListener(\"mousemove\", _this.mouseMove);\r\n    },\r\n    mouseMove(event) {\r\n      const _this = this;\r\n      let entG = _this.entG\r\n      let tx = event.layerX - _this.scatterGTransformX;\r\n      let ty = event.layerY - _this.scatterGTransformY;\r\n\r\n      _this.selectEndX = tx;\r\n      _this.selectEndY = ty;\r\n      let sx = _this.selectStartX;\r\n      let sy = _this.selectStartY;\r\n\r\n\r\n      let minx = sx < tx ? sx : tx;\r\n      let miny = sy < ty ? sy : ty;\r\n      let maxx = sx > tx ? sx : tx;\r\n      let maxy = sy > ty ? sy : ty;\r\n      _this.drawRect(entG, minx, miny, maxx - minx, maxy - miny, 10, \"grey\", \"5\", \"none\", \"0.1\", `SelectRect`, 'SelectRect');\r\n      this.$refs.listen.addEventListener(\"mouseup\", _this.mouseUp);\r\n      // this.$refs.scatterC.addEventListener(\"mousedown\", _this.mouseDown);\r\n    },\r\n    mouseUp(event) {\r\n      const _this = this;\r\n      this.$refs.listen.removeEventListener(\"mousemove\", _this.mouseMove);\r\n      _this.jgDrag = true;\r\n\r\n      d3.select(\".close\").classed(\"hidden\", true);\r\n      this.getSelectStudentList();\r\n      // this.$refs.scatterCantain.removeEventL(\"mouseup\", _this.mouseUp);\r\n      // this.$refs.scatterC.addEventListener(\"mousedown\", _this.mouseDown);\r\n    },\r\n    getSelectStudentList() {\r\n      const _this = this;\r\n      let temp = tools.deepClone(_this.SelectStudentList);\r\n      let groupData = _this.groupData;\r\n      let sx = _this.selectStartX;\r\n      let sy = _this.selectStartY;\r\n      let tx = _this.selectEndX;\r\n      let ty = _this.selectEndY;\r\n      _this.selectStartX = 0;\r\n      _this.selectStartY = 0;\r\n      _this.selectEndX = 0;\r\n      _this.selectEndY = 0;\r\n      let minx = sx < tx ? sx : tx;\r\n      let miny = sy < ty ? sy : ty;\r\n      let maxx = sx > tx ? sx : tx;\r\n      let maxy = sy > ty ? sy : ty;\r\n      let SelectStudentList = [];\r\n      let BuSelectStudentList = [];\r\n      for (let i = 0; i < groupData.length; i++) {\r\n        let cx = groupData[i]['cx'];\r\n        let cy = groupData[i]['cy'];\r\n        let sId = groupData[i]['id'];\r\n        if (((cx > minx) && (cx < maxx)) && ((cy > miny) && (cy < maxy))) {\r\n          let jg = 0;\r\n          temp.forEach(t => {\r\n            t.forEach(s => {\r\n              if (s == sId)\r\n                jg = 1;\r\n            })\r\n          })\r\n          if (jg == 0)\r\n            SelectStudentList.push(sId);\r\n          \r\n        }\r\n        else{\r\n          let jg = 0;\r\n          temp.forEach(t => {\r\n            t.forEach(s => {\r\n              if (s == sId)\r\n                jg = 1;\r\n            })\r\n          })\r\n          if (jg == 0)\r\n            BuSelectStudentList.push(sId);\r\n        }\r\n      }\r\n      let selectGroupId = _this.selectGroupId;\r\n      temp[selectGroupId] = SelectStudentList;\r\n      if((selectGroupId == 1)){\r\n        temp[2] = BuSelectStudentList;\r\n      }\r\n      _this.SelectStudentList = temp;\r\n    },\r\n    drawRect(svg, x, y, w, h, rx, fill, strokeWidth, stroke, opacity, idName, className) {\r\n      d3.select(`#${idName}`).remove();\r\n      let rect = svg.append(\"rect\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"rx\", rx)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", strokeWidth)\r\n      return rect;\r\n    },\r\n    updataScatter() {\r\n      const _this = this;\r\n      let entG = _this.entG;\r\n      let groupData = _this.groupData;\r\n      let SelectStudentList = _this.SelectStudentList;\r\n      for (let i = 0; i < groupData.length; i++) {\r\n        let cx = groupData[i]['cx'];\r\n        let cy = groupData[i]['cy'];\r\n        let r = groupData[i]['r']\r\n        let sId = groupData[i]['id']\r\n        let fill = groupData[i]['fill'];\r\n        let opacity = 1;\r\n        // if(SelectStudentList.indexOf(sId)!=-1){\r\n        //   opacity = 1;\r\n        // }\r\n        _this.drawCircle(entG, cx, cy, r, fill, opacity, \"grey\", \"0\", 'entStu', `entStu_${sId}`);\r\n        let stuAttrList = _this.stuAttrList;\r\n        let stuAttrMaxMinList = _this.stuAttrMaxMinList;\r\n        let attrLen = stuAttrList.length;\r\n        let colorList = _this.attrColorList;\r\n        let starR = 0;//-Math.PI/2;\r\n        let stepH = 7;\r\n        let perh = r;\r\n        for (let j = 0; j < attrLen; j++) {\r\n          if (stuAttrList[j] == 'bestScore') {\r\n\r\n          }\r\n          else if (stuAttrList[j] == 'acceptedNum') {\r\n\r\n          }\r\n          else {\r\n            let Angle_linear = d3.scaleLinear().domain([0, stuAttrMaxMinList[j][0]]).range([0, Math.PI * 2]);\r\n            let h = perh + stepH;\r\n            var dataset = { startAngle: starR, endAngle: starR + Angle_linear(groupData[i][stuAttrList[j]]) }; //创建一个弧生成器\r\n            var datasetB = { startAngle: starR, endAngle: starR + Math.PI * 2 }; //创建一个弧生成器\r\n            var arcPath = d3.arc()\r\n              .innerRadius(perh)\r\n              .outerRadius(h - 1);\r\n            var arcPathBack = d3.arc()\r\n              .innerRadius(1)\r\n              .outerRadius(h + 2);\r\n            perh = h;\r\n            var pathArc = arcPath(dataset);\r\n            var pathArcB = arcPath(datasetB);\r\n            let entColor = colorList[j];//importanceCompute_color(importanceColor_linear(curEnt['scoringRate']));\r\n            // _this.drawArc(entG, 0, 0, arcPathBack(dataset), \"#000\", \"#000\", 'type', 0, 3);\r\n            _this.drawArc(entG, cx, cy, pathArcB, fill, \"rgb(230,230,230)\", 'typeB', `stuAttrB_${sId}_${j}`, 0, 0);\r\n            _this.drawArc(entG, cx, cy, pathArc, entColor, entColor, 'type', `stuAttr_${sId}_${j}`, 0, 0);\r\n          }\r\n        }\r\n\r\n        let circle = _this.drawCircle(entG, cx, cy, 25, fill, 0, \"grey\", \"0\", 'entStuF', `entStuF_${sId}_${i}`);\r\n        circle.on(\"mousemove\", function (d) {\r\n          let ts = d3.select(this);\r\n          let id = ts.attr(\"id\").split(\"_\")[1];\r\n          _this.overScatterStuId = id;\r\n\r\n          _this.$bus.$emit(\"SelectingStu\", _this.overScatterStuId);\r\n\r\n          let idod = ts.attr(\"id\").split(\"_\")[2];\r\n          let clasN = ts.attr(\"class\");\r\n          let nametext = '';\r\n          let ent = groupData.find(function (c) { return c['id'] == id });\r\n          var yPosition = d.clientY + 20;\r\n          var xPosition = d.clientX + 20;\r\n          \r\n          if(d.clientX>2100){\r\n            xPosition = d.clientX - 210;\r\n          }\r\n          let srtext = ent['scoringRate'];\r\n          let totalAttemptsTxt = ent['totalAttempts'];\r\n          let bestScore = ent['bestScore']\r\n          var scatterTooltip = d3\r\n            .select(\".scatterTooltip\")\r\n            .style(\"left\", xPosition + \"px\")\r\n            .style(\"top\", yPosition + \"px\");\r\n          // 更新浮层内容\r\n          let attr = ['scoringRate', 'totalAttempts','bestScore'];\r\n          let attrN = ['Scoring Rate', 'Attempts', 'bestScoreRate', 'Rel Count'];\r\n          // 更新浮层内容\r\n          for (let a = 0; a < attr.length; a++) {\r\n\r\n            scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]]}`)\r\n            if(attrN[a] == 'Scoring Rate')\r\n              scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]].toFixed(2)}`)\r\n          }\r\n          scatterTooltip.select(\".name\").text(`Student${i+1}`);\r\n          // 移除浮层hidden样式，展示浮层\r\n          scatterTooltip.classed(\"hidden\", false);\r\n        }).on(\"mouseleave\", function (d) {\r\n          _this.$bus.$emit(\"SelectingStu\", \"\");\r\n          d3.select(\".scatterTooltip\").classed(\"hidden\", true);\r\n        })\r\n      }\r\n    },\r\n\r\n    drawArc(svg, x, y, arcPath, stroke, fill, className, idN, stroke_dasharray = \"0\", width = 3) {\r\n      d3.select(`#${idN}`).remove();\r\n      svg.append(\"path\")\r\n        .attr(\"d\", arcPath)\r\n        .attr(\"class\", className)\r\n        .attr(\"id\", idN)\r\n        .attr(\"transform\", \"translate(\" + x + \",\" + y + \")\")\r\n        .attr(\"stroke\", stroke)\r\n        .attr('stroke-width', width)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"fill\", fill)\r\n    },\r\n    updataAll() {\r\n      var _this = this;\r\n      let margin = _this.margin\r\n      let width = _this.$refs.scatterDiv.offsetWidth - margin.left - margin.right;\r\n      let height = document.getElementById(\"scatterCantain\").clientHeight - margin.top - margin.bottom;\r\n      _this.width = width;\r\n      _this.height = height;\r\n      d3.select(\"#scatterCantain\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#scatterCantain\").append(\"svg\")\r\n        .attr(\"width\", width - 0)\r\n        .attr(\"height\", height - 50)\r\n        .attr('transform', 'translate(0,0)')\r\n        .style(\"position\", \"absolute\");\r\n\r\n      var svgf = d3.select(\"#scatterCantain\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n      _this.rootSvg = svg;\r\n      _this.rootSvgf = svgf;\r\n\r\n      _this.rootSvgFig = svg;\r\n      let data = _this.groupData;\r\n      let MaxMinX = _this.getMaxMin(data, 'x');\r\n      let MaxMinY = _this.getMaxMin(data, 'y');\r\n\r\n      let stuAttrList = ['scoringRate', 'bestScore', 'totalAttempts', 'acceptedNum']//,'time']\r\n      _this.stuAttrList = stuAttrList;\r\n      let stuAttrMaxMinList = [];\r\n\r\n      for (let i = 0; i < stuAttrList.length; i++) {\r\n        stuAttrMaxMinList.push(_this.getMaxMin(data, stuAttrList[i]));\r\n      }\r\n      _this.stuAttrMaxMinList = stuAttrMaxMinList;\r\n\r\n      _this.MaxMinX = MaxMinX;\r\n      _this.MaxMinY = MaxMinY;\r\n\r\n      _this.drawMain(svg);\r\n      // });\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n\r\n    d3.select(\".scatterTooltip\").classed(\"hidden\", true);\r\n    this.$bus.$on('groupData', (val) => {\r\n      _this.groupData = val;\r\n      this.updataAll();\r\n    });\r\n\r\n    // this.$bus.$on('attrColorList', (val) => {_this.attrColorList = val;});\r\n    this.$bus.$on('stuColorList', (val) => { _this.stuColorList = val; });\r\n    // this.$refs.scatterCantain.addEventListener(\"mousedown\", _this.mouseDown); // 监听点击事件\r\n    // this.$refs.movescatterRight.addEventListener(\"mousemove\", _this.movescatterRight); // 监听点击事件\r\n    // this.$refs.movescatterLeft.addEventListener(\"mouseleave\", _this.leavescatterMove); // 监听点击事件\r\n    // this.$refs.movescatterRight.addEventListener(\"mouseleave\", _this.leavescatterMove); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>@import './index.css';</style>\r\n"],"sourceRoot":"src/components/Scatter"}]}