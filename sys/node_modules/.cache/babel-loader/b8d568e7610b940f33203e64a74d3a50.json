{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\Indexinput\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\Indexinput\\index.vue","mtime":1703137845824},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"indexInput\" ref=\"indexInputDiv\">\r\n    <div class=\"panelHead\">组卷参数</div>\r\n    <div id=\"indexInput\" class=\"panelBody\">\r\n      <el-tree :data=\"contentTreeData\" show-checkbox node-key=\"id\" default-expand-all :expand-on-click-node=\"false\"\r\n        :render-content=\"renderContent\" \r\n        ref=\"conTree\">\r\n      </el-tree>\r\n      <el-divider></el-divider>\r\n      <el-form label-position='right' label-width=\"80px\">\r\n        <el-col :span=\"11\">\r\n        <el-form-item label=\"选择题\">\r\n          <el-input-number v-model=\"paperIndex.type1\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type1\"></el-input> -->\r\n        </el-form-item>\r\n        <el-form-item label=\"判断题\">\r\n          \r\n          <el-input-number v-model=\"paperIndex.type2\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type2\"></el-input> -->\r\n        </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"11\">\r\n        <el-form-item label=\"填空题\">\r\n          \r\n          <el-input-number v-model=\"paperIndex.type3\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type3\"></el-input> -->\r\n        </el-form-item>\r\n        <el-form-item label=\"编程题\">\r\n          <el-input-number v-model=\"paperIndex.type4\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type4\"></el-input> -->\r\n        </el-form-item>\r\n        </el-col>\r\n      </el-form>\r\n      <el-button type=\"primary\" @click=\"onSubmit\">Create</el-button>\r\n    </div>\r\n  </div>\r\n  <!-- <div id=\"moveLeft\" ref=\"moveindexInputLeft\"></div>\r\n                    <div id=\"moveRight\" ref=\"moveindexInputRight\"></div> -->\r\n  <!-- <div id=\"assistindexInputPanel\" class=\"panel\">\r\n        <div class=\"panelHead\"></div>\r\n      </div> -->\r\n  <!-- <div id=\"zoomInDiv\" @click=\"zoomInLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomInUrl\">\r\n    </div>\r\n    <div id=\"zoomOutDiv\" @click=\"zoomOutLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomOutUrl\">\r\n    </div>\r\n    <div id=\"editToolDiv\" @click=\"editToolClk\">\r\n      <img class=\"icons\" :src=\"editToolUrl\">\r\n    </div> -->\r\n</div></template>\r\n  \r\n<script>\r\n// import { param } from 'server/api';\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\n// import TestJson from \"@/assets/json/case2_fin.json\";\r\n// import TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport tools from \"@/utils/tools.js\";\r\n\r\nexport default {\r\n  props: [\"toolsState\"],\r\n  data() {\r\n    return {\r\n      proName: '',\r\n      proType: \"\",\r\n      select: '',\r\n      paperData:[],\r\n      papersNum:\"\",\r\n      proForm: {\r\n        name: \"\",\r\n        type: \"\",\r\n        content: \"\"\r\n      },\r\n      paperIndex:{\r\n        type1:0,\r\n        type2:0,\r\n        type3:0,\r\n        type4:0,\r\n        ids:[],\r\n      },\r\n      thisId: 10,\r\n      contentTreeData: [{\r\n        id: 1,\r\n        label: '基本数据类型与表达式',\r\n        indexValue: 0,\r\n        children: [{\r\n          id: 2,\r\n          label: '表达式',\r\n          indexValue: 0,\r\n          children: []\r\n        }, {\r\n          id: 3,\r\n\r\n          indexValue: 0,\r\n          label: '输入输出格式化控制',\r\n          children: []\r\n        }\r\n        ]\r\n      }, {\r\n        id: 4,\r\n\r\n        indexValue: 0,\r\n        label: '分支控制',\r\n        children: [{\r\n          id: 5,\r\n          indexValue: 0,\r\n          label: 'if-else'\r\n        }, {\r\n          id: 6,\r\n          indexValue: 0,\r\n          label: 'switch'\r\n        }]\r\n      }, {\r\n        id: 7,\r\n        indexValue: 0,\r\n        label: '循环控制',\r\n        children: [{\r\n          id: 8,\r\n          indexValue: 0,\r\n          label: 'for'\r\n        }, {\r\n          id: 9,\r\n          indexValue: 0,\r\n          label: 'while和do-while'\r\n        }, {\r\n          id: 10,\r\n          indexValue: 0,\r\n          label: '嵌套循环'\r\n        }]\r\n      }, {\r\n        id: 11,\r\n        indexValue: 0,\r\n        label: '函数与程序结构',\r\n        children: [{\r\n          id: 12,\r\n          indexValue: 0,\r\n          label: '函数定义与调用'\r\n        }, {\r\n          id: 13,\r\n          indexValue: 0,\r\n          label: '递归函数'\r\n        }, {\r\n          id: 14,\r\n          indexValue: 0,\r\n          label: '变量作用域与存储类型'\r\n        }]\r\n      }, {\r\n        id: 15,\r\n        indexValue: 0,\r\n        label: '数组',\r\n        children: [{\r\n          id: 16,\r\n          indexValue: 0,\r\n          label: '一维数组'\r\n        }, {\r\n          id: 17,\r\n          indexValue: 0,\r\n          label: '字符串'\r\n        }, {\r\n          id: 18,\r\n          indexValue: 0,\r\n          label: '二维数组'\r\n        }]\r\n      }, {\r\n        id: 19,\r\n        indexValue: 0,\r\n        label: '指针与结构',\r\n        children: [{\r\n          id: 20,\r\n          indexValue: 0,\r\n          label: '指针'\r\n        }, {\r\n          id: 21,\r\n          indexValue: 0,\r\n          label: '结构'\r\n        }, {\r\n          id: 22,\r\n          indexValue: 0,\r\n          label: '链表'\r\n        }]\r\n      }, {\r\n        id: 23,\r\n        indexValue: 0,\r\n        label: '文件',\r\n        children: [{\r\n          id: 24,\r\n          indexValue: 0,\r\n          label: '文本文件处理'\r\n        }, {\r\n          id: 25,\r\n          indexValue: 0,\r\n          label: '二进制文件处理'\r\n        }]\r\n      }]\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    toolAddRel(val) {\r\n    },\r\n    paperData(val){\r\n      const _this = this;\r\n      console.log(\"pap\",val);\r\n      let paperId = parseInt(_this.papersNum);\r\n      let len = 0;\r\n      for(let i=0;i<val.length;i++){\r\n        len+=val[i].length;\r\n      }\r\n      let curData= {\r\n        \"id\":paperId+\"\",\r\n        \"type0\":val[0],\r\n        \"type1\":val[1],\r\n        \"type2\":val[2],\r\n        \"type3\":val[3],\r\n        \"number\":len\r\n      }\r\n\r\n      this.$http\r\n        // .get(\"/api/problem/allProblem\", { params: { name: \"12345\" } }, {})\r\n        .post(\"/api/paper/addPaper\", { params: curData }, {})\r\n        .then((response) => {\r\n          _this.$bus.$emit(\"papperChange\", \"true\");\r\n        });\r\n    },\r\n    toolsState: {\r\n      deep: true,\r\n      handler(val) {\r\n        console.log(val)\r\n        this.toolAddRel = val['addRel'];\r\n        this.toolAddRelMain = val['addRelMain'];\r\n        this.toolDelRel = val['delRel'];\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    conceptTreeChecked(val){\r\n      console.log(val)\r\n    },\r\n    append(data) {\r\n      const newChild = { id: this.thisId++, label: 'testtest', children: [], indexValue: 0, };\r\n      if (!data.children) {\r\n        this.$set(data, 'children', []);\r\n      }\r\n      data.children.push(newChild);\r\n    },\r\n    remove(node, data) {\r\n      const parent = node.parent;\r\n      const children = parent.data.children || parent.data;\r\n      const index = children.findIndex(d => d.id === data.id);\r\n      children.splice(index, 1);\r\n    },\r\n\r\n    renderContent(h, { node, data, store }) {\r\n      return (\r\n        // <template>\r\n        <div class=\"custom-tree-node\">\r\n          <span>{node.label}</span>\r\n\r\n          <span>\r\n            <div class=\"treeSlider\">\r\n              {/* <el-slider value={node.indexValue} on-change={(d)=>this.changTreeSlider(d,data)}></el-slider> */}\r\n            </div>\r\n            {/* <el-progress type=\"dashboard\" percentage=\"0\" width=\"40\"></el-progress> */}\r\n            <el-button size=\"mini\" type=\"text\" on-click={() => this.append(data)}>+</el-button>\r\n            <el-button size=\"mini\" type=\"text\" on-click={() => this.remove(node, data)}>-</el-button>\r\n          </span>\r\n        </div>\r\n        // </template>\r\n      );\r\n    },\r\n\r\n    onSubmit() {\r\n      const _this = this;\r\n      let CheckedNodes = this.$refs.conTree.getCheckedNodes();\r\n      console.log(\"cc\",CheckedNodes)\r\n      let ids = []\r\n      for(let i=0;i<CheckedNodes.length;i++){\r\n        ids.push(parseInt(CheckedNodes[i]['id'])-1)\r\n      }\r\n      _this.paperIndex.ids = ids;\r\n      _this.getProblemsIds();\r\n    },\r\n    changTreeSlider(value,data) {\r\n      data.indexValue = value;\r\n      console.log(value,data)\r\n    },\r\n    getProblemsIds() {\r\n      const _this = this;\r\n      let data = [];\r\n      this.$http\r\n        // .get(\"/api/problem/allProblem\", { params: { name: \"12345\" } }, {})\r\n        .post(\"/api/FormPaper\", { params: {paperIndex: _this.paperIndex,paperId: _this.papersNum+\"\"} }, {})\r\n        .then((response) => {\r\n          // _this.$bus.$emit(\"proIdList\", response.body);\r\n          _this.paperData = response.body;\r\n        });\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n\r\n    d3.select(\".chartTooltip\").classed(\"hidden\", true);\r\n    this.$bus.$on('ConceptTree', (val) => {\r\n      _this.conceptTree = val;\r\n    });\r\n    this.$bus.$on('papersNum', (val) => {\r\n      _this.papersNum = val;\r\n    });\r\n    // this.$refs.moveindexInputLeft.addEventListener(\"mouseover\", _this.moveindexInputLeft); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"],"sourceRoot":"src/components/Indexinput"}]}