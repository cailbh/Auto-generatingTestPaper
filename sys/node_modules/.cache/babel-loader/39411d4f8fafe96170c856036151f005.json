{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConScatter\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConScatter\\index.vue","mtime":1703137967050},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"proConScatter\" ref=\"proConScatterDiv\">\r\n    <div class=\"panelHead\"></div>\r\n    <div id=\"proConScatterCantain\" class=\"panelBody\" ref=\"proConScatterCantain\">\r\n    </div>\r\n\r\n    <!-- <div class=\"close\" ref=\"listen\">\r\n    </div> -->\r\n    <!-- <el-button type=\"primary\" @click=\"onSubmit\">Create</el-button> -->\r\n    <div class=\"proConScatterTooltip toolTip\">\r\n      <p>\r\n        <br /><strong class=\"name toolTipAttr\"></strong>\r\n        <br /><strong class=\"text toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr0 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr1 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr2 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr3 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr4 toolTipAttr\"></strong>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div></template>\r\n  \r\n<script>\r\n// import { param } from 'server/api';\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\n// import TestJson from \"@/assets/json/case2_fin.json\";\r\n// import TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport Circle from '@/utils/geometry/circle';\r\nimport tools from \"@/utils/tools.js\";\r\nimport drawTools from \"@/utils/drawingTools.js\";\r\n\r\nexport default {\r\n  props: [\"toolsState\"],\r\n  data() {\r\n    return {\r\n      proName: '',\r\n      scatterData: '',\r\n      allProblems: '',\r\n      dataRady: 0,\r\n      allConcepts: '',\r\n      allProInConGPTScatterData: '',\r\n      allproConScatterData: '',\r\n      proType: \"\",\r\n      select: '',\r\n      proForm: {\r\n        name: \"\",\r\n        type: \"\",\r\n        content: \"\"\r\n      },\r\n      attrColorlist: [],\r\n      rootSvg: '',\r\n      width: 0,\r\n      height: 0,\r\n      thisId: 10,\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n\r\n    dataRady(val) {\r\n      const _this = this;\r\n      if (val == 3) {\r\n\r\n        _this.updataAll();\r\n      }\r\n    },\r\n    toolAddRel(val) {\r\n    },\r\n    toolsState: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.toolAddRel = val['addRel'];\r\n        this.toolAddRelMain = val['addRelMain'];\r\n        this.toolDelRel = val['delRel'];\r\n      }\r\n    },\r\n    scatterData(val) {\r\n      const _this = this;\r\n      _this.updataAll();\r\n    }\r\n  },\r\n  methods: {\r\n    getAllScatterData() {\r\n      const _this = this;\r\n      this.$http\r\n        .get(\"/api/problem/allProInConGPTScatterData\", { params: {} }, {})\r\n        .then((response) => {\r\n          _this.allProInConGPTScatterData = response.body;\r\n          _this.scatterData = _this.allProInConGPTScatterData;\r\n          // _this.allRelationships = response.body;\r\n          // _this.drawnetPData();\r\n        });\r\n      this.$http\r\n        .get(\"/api/concept/allproConScatterData\", { params: {} }, {})\r\n        .then((response) => {\r\n          _this.allproConScatterData = response.body;\r\n          // _this.allRelationships = response.body;\r\n          // _this.drawnetPData();\r\n        });\r\n    },\r\n    drawProConScatter(svg) {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let psvg = svg\r\n      let width = psvg.attr(\"width\");\r\n      let height = psvg.attr(\"height\");\r\n      psvg.select(\"#netPG\").remove();\r\n      // let prog = psvg.append(\"g\").attr(\"id\", \"netPG\").attr(\"width\", width).attr(\"height\", height);\r\n      let groups = svg.append(\"g\").attr(\"id\", \"proConScatterGroups\").attr(\"width\", width).attr(\"height\", height)\r\n      // .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      // this.groupsSvg = groups;\r\n\r\n      let backG = groups.append(\"g\").attr(\"id\", \"proConScatterbackG\").attr(\"width\", width).attr(\"height\", height);\r\n      let arcG = groups.append(\"g\").attr(\"id\", \"proConScatterarcG\").attr(\"width\", width).attr(\"height\", height);\r\n      let relG = groups.append(\"g\").attr(\"id\", \"proConScatterrelG\").attr(\"width\", width).attr(\"height\", height);\r\n      let entG = groups.append(\"g\").attr(\"id\", \"proConScatterentG\").attr(\"width\", width).attr(\"height\", height);\r\n      let frontG = groups.append(\"g\").attr(\"id\", \"proConScatterfrontG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      let scatterData = _this.scatterData;\r\n      let xMaxMinDR = tools.getMaxMin(scatterData, 'x');\r\n      let yMaxMinDR = tools.getMaxMin(scatterData, 'y');\r\n      let scatterxLinear = d3.scaleLinear().domain([xMaxMinDR[1], xMaxMinDR[0]]).range([0, width]);\r\n      let scatteryLinear = d3.scaleLinear().domain([yMaxMinDR[1], yMaxMinDR[0]]).range([0, height / 2]);\r\n      let colorList = _this.attrColorlist;\r\n      const allProblems = _this.allProblems;\r\n      const allConcepts = _this.allConcepts;\r\n\r\n      for (let i = 0; i < scatterData.length; i++) {\r\n        let x = scatterxLinear(scatterData[i]['x']);\r\n        let y = scatteryLinear(scatterData[i]['y']);\r\n        let type = scatterData[i]['type'];\r\n        if (type == \"kp\") {\r\n          let points = drawTools.calcRegularPolygonPoints(3, x, y, 9);\r\n          let trigal = drawTools.drawPolygon(entG, points, `scatterCircle_${scatterData[i]['type']}_${scatterData[i]['id']}`, '0px', \"grey\", colorList[parseInt(scatterData[i]['kLab'])]);\r\n          // drawTools.drawCircle(entG, x, y, 5, colorList[parseInt(scatterData[i]['kLab'])], 1, 1, 1, 'scatterCircle', `scatterCircle_${scatterData[i]['type']}_${scatterData[i]['id']}`);\r\n          trigal.on(\"mousemove\", function (d) {\r\n            let ts = d3.select(this);\r\n            let tp = ts.attr(\"id\").split(\"_\")[1]\r\n            let id = ts.attr(\"id\").split(\"_\")[2];\r\n            let ent = {}\r\n            // 更新浮层内容\r\n            let attr = ['title'];\r\n            let attrN = ['title'];\r\n            if (tp == 'pro') {\r\n              ent = allProblems.find(function (p) { return p['id'] == id });\r\n              attr = ['title'];\r\n              attrN = ['title'];\r\n              \r\n            }\r\n            else if (tp == 'kp') {\r\n              ent = allConcepts.find(function (c) { return c['id'] == id });\r\n\r\n              attr = ['name'];\r\n              attrN = ['name'];\r\n            }\r\n\r\n            let nametext = '';\r\n            // let ent = groupData.find(function (c) { return c['id'] == id });\r\n            var yPosition = d.offsetY + 2;\r\n            var xPosition = d.offsetX + 2;\r\n\r\n            // if(d.clientX>2100){\r\n            //   xPosition = d.clientX - 210;\r\n            // }\r\n            \r\n          if (d.offsetX > 200) {\r\n            xPosition = d.offsetX - 210;\r\n          }\r\n            let nameText = ent['title'];\r\n            var scatterTooltip = d3\r\n              .select(\".proConScatterTooltip\")\r\n              .style(\"left\", xPosition + \"px\")\r\n              .style(\"top\", yPosition + \"px\");\r\n            // 更新浮层内容\r\n            for (let a = 0; a < attr.length; a++) {\r\n\r\n              scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]]}`)\r\n            }\r\n            scatterTooltip.select(\".name\").text(nameText);\r\n            // 移除浮层hidden样式，展示浮层\r\n            scatterTooltip.classed(\"hidden\", false);\r\n          }).on(\"mouseleave\", function (d) {\r\n            _this.$bus.$emit(\"SelectingStu\", \"\");\r\n            d3.select(\".proConScatterTooltip\").classed(\"hidden\", true);\r\n          })\r\n        }\r\n        else {\r\n          let circle = drawTools.drawCircle(entG, x, y, 6, colorList[parseInt(scatterData[i]['kLab'])], 1, 1, 1, 'scatterCircle', `scatterCircle_${scatterData[i]['type']}_${scatterData[i]['id']}`);\r\n          circle.on(\"mousemove\", function (d) {\r\n            let ts = d3.select(this);\r\n            let tp = ts.attr(\"id\").split(\"_\")[1]\r\n            let id = ts.attr(\"id\").split(\"_\")[2];\r\n            let ent = {}\r\n            // 更新浮层内容\r\n            let attr = ['title'];\r\n            let attrN = ['title'];\r\n            if (tp == 'pro') {\r\n              ent = allProblems.find(function (p) { return p['id'] == id });\r\n              attr = ['title'];\r\n              attrN = ['title'];\r\n            }\r\n            else if (tp == 'kp') {\r\n              ent = allConcepts.find(function (c) { return c['id'] == id });\r\n\r\n              attr = ['name'];\r\n              attrN = ['name'];\r\n            }\r\n\r\n            let nametext = '';\r\n            // let ent = groupData.find(function (c) { return c['id'] == id });\r\n            var yPosition = d.offsetY + 2;\r\n            var xPosition = d.offsetX + 2;\r\n\r\n            if (d.offsetX > 200) {\r\n            xPosition = d.offsetX - 210;\r\n          }\r\n            // if(d.clientX>2100){\r\n            //   xPosition = d.clientX - 210;\r\n            // }\r\n            let nameText = ent['title'];\r\n            var scatterTooltip = d3\r\n              .select(\".proConScatterTooltip\")\r\n              .style(\"left\", xPosition + \"px\")\r\n              .style(\"top\", yPosition + \"px\");\r\n            // 更新浮层内容\r\n            for (let a = 0; a < attr.length; a++) {\r\n\r\n              scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]]}`)\r\n            }\r\n            scatterTooltip.select(\".name\").text(nameText);\r\n            // 移除浮层hidden样式，展示浮层\r\n            scatterTooltip.classed(\"hidden\", false);\r\n          }).on(\"mouseleave\", function (d) {\r\n            _this.$bus.$emit(\"SelectingStu\", \"\");\r\n            d3.select(\".proConScatterTooltip\").classed(\"hidden\", true);\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n      let scatterConData = _this.allproConScatterData;\r\n      let xconMaxMinDR = tools.getMaxMin(scatterConData, 'x');\r\n      let yconMaxMinDR = tools.getMaxMin(scatterConData, 'y');\r\n      let scatterConxLinear = d3.scaleLinear().domain([xconMaxMinDR[1], xconMaxMinDR[0]]).range([0, width]);\r\n      let scatterConyLinear = d3.scaleLinear().domain([yconMaxMinDR[1], yconMaxMinDR[0]]).range([height / 2, height - 50]);\r\n      for (let i = scatterConData.length - 1; i >= 0; i--) {\r\n        let x = scatterConxLinear(scatterConData[i]['x']);\r\n        let y = scatterConyLinear(scatterConData[i]['y']);\r\n        let color = colorList[parseInt(scatterConData[i]['kLab']) % 7]\r\n        // if(parseInt(scatterConData[i]['id'])<19){\r\n        //   color = 'red';\r\n        // }\r\n        let circles = drawTools.drawCircle(entG, x, y, 5, color, 1, 1, 1, 'scatterConCircle', `scatterConCircle_${scatterConData[i]['id']}`);\r\n        circles.on(\"mousemove\", function (d) {\r\n          let ts = d3.select(this);\r\n          // let tp = ts.attr(\"id\").split(\"_\")[1]\r\n          let id = ts.attr(\"id\").split(\"_\")[1];\r\n          let ent = {}\r\n          // 更新浮层内容\r\n          let attr = ['name',\"kLab\"];\r\n          let attrN = ['name',\"con\"];\r\n          ent = scatterConData.find(function (c) { return c['id'] == id });\r\n\r\n          let nametext = '';\r\n          // let ent = groupData.find(function (c) { return c['id'] == id });\r\n          var yPosition = d.offsetY + 2;\r\n          var xPosition = d.offsetX + 2;\r\n\r\n          if (d.offsetX > 200) {\r\n            xPosition = d.offsetX - 210;\r\n          }\r\n          if (d.offsetY > 600) {\r\n            yPosition = d.offsetY - 150;\r\n          }\r\n          console.log(ent)\r\n          let nameText = ent['name'];\r\n          var scatterTooltip = d3\r\n            .select(\".proConScatterTooltip\")\r\n            .style(\"left\", xPosition + \"px\")\r\n            .style(\"top\", yPosition + \"px\");\r\n          // 更新浮层内容\r\n          for (let a = 0; a < attr.length; a++) {\r\n\r\n            scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]]}`)\r\n          }\r\n          scatterTooltip.select(\".name\").text(nameText);\r\n          // 移除浮层hidden样式，展示浮层\r\n          scatterTooltip.classed(\"hidden\", false);\r\n        }).on(\"mouseleave\", function (d) {\r\n          _this.$bus.$emit(\"SelectingStu\", \"\");\r\n          d3.select(\".proConScatterTooltip\").classed(\"hidden\", true);\r\n        })\r\n      }\r\n    },\r\n    updataAll() {\r\n      var _this = this;\r\n      let margin = _this.margin\r\n      let width = _this.$refs.proConScatterDiv.offsetWidth - margin.left - margin.right;\r\n      let height = _this.$refs.proConScatterDiv.offsetHeight - margin.top - margin.bottom;\r\n      _this.width = width;\r\n      _this.height = height;\r\n      d3.select(\"#proConScatterCantain\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#proConScatterCantain\").append(\"svg\")\r\n        .attr(\"width\", width - 0)\r\n        .attr(\"height\", height - 0)\r\n        .attr('transform', 'translate(0,0)')\r\n        .style(\"position\", \"absolute\");\r\n\r\n      let entG = svg.append(\"g\").attr(\"id\", \"entG\").attr(\"width\", width).attr(\"height\", height);\r\n      let sonG = svg.append(\"g\").attr(\"id\", \"sonG\").attr(\"width\", width).attr(\"height\", height);\r\n      _this.rootSvg = svg;\r\n      _this.drawProConScatter(svg);\r\n      // });\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    _this.getAllScatterData();\r\n    d3.select(\".scatterTooltip\").classed(\"hidden\", true);\r\n    d3.select(\".chartTooltip\").classed(\"hidden\", true);\r\n    this.$bus.$on('ConceptTree', (val) => {\r\n      _this.dataRady = _this.dataRady + 1;\r\n      _this.conceptTree = val;\r\n    });\r\n    this.$bus.$on('allProblems', (val) => {\r\n      _this.allProblems = val;\r\n      _this.dataRady = _this.dataRady + 1;\r\n    });\r\n    this.$bus.$on('allConcepts', (val) => {\r\n      _this.allConcepts = val;\r\n      _this.dataRady = _this.dataRady + 1;\r\n    });\r\n    this.$bus.$on('attrColorlist', (val) => {\r\n      _this.dataRady = _this.dataRady + 1;\r\n      _this.attrColorlist = val;\r\n    });\r\n\r\n    // this.$refs.moveproConScatterLeft.addEventListener(\"mouseover\", _this.moveproConScatterLeft); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"],"sourceRoot":"src/components/proConScatter"}]}