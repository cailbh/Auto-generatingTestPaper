{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\utils\\contour.js","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\utils\\contour.js","mtime":1683533229030},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/Cailibuhong/auto-generatingTestPaper/Auto-generatingTestPaper/sys/src/utils/contour.js"],"names":["Arc","Circle","Vec2","nodes","curvature","circles","forEach","node","push","x","y","r","outerCircleRing","getOuterCircleRing","arcs","concat","generateCircleArcs","generateTangentArcs","arcsToPaths","FLOATINGPOINT_EPSILON","getNextClockwiseIntersection","currentCircleIndex","circleArray","direction","currentCircle","allIntersections","i","length","intersects","intersectionPoints","smallestAngle","intersectionWithSmallestAngle","undefined","intersection","angle","intersectionPoint","sub","center","circlesEnlarged","map","a","Object","assign","circle","radius","leftmostCircleIndex","index","referenceDirection","circleIndex","distance","firstIntersection","secondIntersection","centerToFirstIntersection","centerToSecondIntersection","arcStartAngle","arcEndAngle","firstCircle","secondCircle","intersectionToFirstCenter","intersectionToSecondCenter"],"mappings":"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","sourcesContent":["import Arc from \"../utils/geometry/arc\";\nimport Circle from \"../utils/geometry/circle\";\nimport Vec2 from \"../utils/geometry/vec2\";\n// import d3 from \"d3\";\nexport default function(nodes, curvature) {\n    let circles = [];\n    nodes.forEach(function (node) {\n        // Add circles with radius increased by padding. This generates the spacing between circle and contour.\n        circles.push(new Circle(node.x, node.y, node.r + 5));// node.contourPadding));\n    });\n\n    let outerCircleRing = getOuterCircleRing(circles, curvature);\n    let arcs = [];\n\n    arcs = arcs.concat(generateCircleArcs(outerCircleRing));\n    arcs = arcs.concat(generateTangentArcs(outerCircleRing, curvature));\n\n    return arcs;\n    return arcsToPaths(arcs);\n}\n\nlet FLOATINGPOINT_EPSILON = 0.00001;\n\n// Get index and intersection point of next circle on border, in counter-clockwise direction.\n// The parameter 'direction' points into the direction, where the first intersection with current circle was found.\nfunction getNextClockwiseIntersection(currentCircleIndex, circleArray, direction) {\n    let currentCircle = circleArray[currentCircleIndex];\n    let allIntersections = [];\n\n    for (let i = 0; i < circleArray.length; i++) {\n        if (!(i === currentCircleIndex)) {\n            if (circleArray[i].intersects(circleArray[currentCircleIndex])) {\n                let intersectionPoints = circleArray[i].intersectionPoints(circleArray[currentCircleIndex]);\n                // Store intersection points and index of corresponding circle\n                allIntersections.push({\n                    'intersectionPoint': intersectionPoints[0],\n                    'circleIndex': i\n                });\n                allIntersections.push({\n                    'intersectionPoint': intersectionPoints[1],\n                    'circleIndex': i\n                });\n            }\n        }\n    }\n\n    let smallestAngle = 7; // Init with max angle (> 2*PI).\n    let intersectionWithSmallestAngle = undefined; // Init as undefined.\n    allIntersections.forEach(function (intersection) {\n        let angle = direction.angle(intersection.intersectionPoint.sub(currentCircle.center));\n\n        if (angle > FLOATINGPOINT_EPSILON && angle < smallestAngle) {\n            smallestAngle = angle;\n            intersectionWithSmallestAngle = intersection;\n        }\n    });\n\n    return intersectionWithSmallestAngle;\n}\n\n// Get ring of circles that defines the outer border, together with the corresponding intersection points.\nfunction getOuterCircleRing(circles, curvature) {\n    // Create deep copy of circles, as they are modified in the next steps.\n    //let circlesEnlarged = circles.map(a = > Object.assign({}, a));\n    let circlesEnlarged = circles.map(function (a) {\n        return Object.assign({}, a)\n    });\n\n    // Add the radius s of the tangent circles to avoid self-intersections.\n    circlesEnlarged.forEach(function (circle) {\n        circle.radius += curvature;\n    });\n\n    // Find index of the leftmost circle.\n    let leftmostCircleIndex = 0;\n    for (let i = 1; i < circlesEnlarged.length; i++) {\n        if (circlesEnlarged[i].center.x - circlesEnlarged[i].radius < circlesEnlarged[leftmostCircleIndex].center.x - circlesEnlarged[leftmostCircleIndex].radius) {\n            leftmostCircleIndex = i;\n        }\n    }\n\n    // Get the outer ring of circles.\n    let outerCircleRing = [];\n    let index = leftmostCircleIndex;\n    let referenceDirection = new Vec2(-1, 0);\n    while (true) {\n        let intersection = getNextClockwiseIntersection(index, circlesEnlarged, referenceDirection);\n        if (intersection === undefined)\n            break;\n\n        index = intersection.circleIndex;\n        let circle = circles[index];\n        referenceDirection = intersection.intersectionPoint.sub(circle.center);\n\n        if (outerCircleRing[0] && index === outerCircleRing[0].circleIndex && intersection.intersectionPoint.distance(outerCircleRing[0].intersectionPoint) < FLOATINGPOINT_EPSILON) {\n            break;\n        }\n\n        outerCircleRing.push({\n            'circle': circle,\n            'intersectionPoint': intersection.intersectionPoint,\n            'circleIndex': index\n        });\n    }\n\n    return outerCircleRing;\n}\n\n// Generate arcs that describe the outer border of circles.\nfunction generateCircleArcs(outerCircleRing) {\n    let arcs = [];\n\n    for (let i = 0; i < outerCircleRing.length; i++) {\n        let circle = outerCircleRing[i].circle;\n        let firstIntersection = outerCircleRing[i].intersectionPoint;\n        let secondIntersection = outerCircleRing[(i + 1) % outerCircleRing.length].intersectionPoint;\n\n        let centerToFirstIntersection = firstIntersection.sub(circle.center);\n        let centerToSecondIntersection = secondIntersection.sub(circle.center);\n        let arcStartAngle = new Vec2(0, -1).angle(centerToFirstIntersection);\n        let arcEndAngle = new Vec2(0, -1).angle(centerToSecondIntersection);\n\n        arcs.push(new Arc(circle.center.x, circle.center.y, arcStartAngle, arcEndAngle, circle.radius));\n    }\n\n    return arcs;\n}\n\n// Generate tangent arcs that fill the space between circle arcs.\nfunction generateTangentArcs(outerCircleRing, curvature) {\n    let arcs = [];\n\n    for (let i = 0; i < outerCircleRing.length; i++) {\n        let intersection = outerCircleRing[i].intersectionPoint;\n        let firstCircle = outerCircleRing[(i > 0) ? i - 1 : outerCircleRing.length - 1].circle;\n        let secondCircle = outerCircleRing[i].circle;\n\n        let intersectionToFirstCenter = firstCircle.center.sub(intersection);\n        let intersectionToSecondCenter = secondCircle.center.sub(intersection);\n        let arcEndAngle = new Vec2(0, -1).angle(intersectionToFirstCenter);\n        let arcStartAngle = new Vec2(0, -1).angle(intersectionToSecondCenter);\n\n        arcs.push(new Arc(intersection.x, intersection.y, arcStartAngle, arcEndAngle, curvature));\n    }\n\n    return arcs;\n}\n\n// function arcsToPaths(arcs) {\n//     let paths = [];\n//     let arcGen = d3.arc();\n\n//     arcs.forEach(function (arc) {\n//         let startAngleTemp = arc.startAngle;\n\n//         if (startAngleTemp > arc.endAngle) {\n//             startAngleTemp -= 2 * Math.PI;\n//         }\n\n//         paths.push({\n//             d: arcGen({\n//                 innerRadius: arc.radius,\n//                 outerRadius: arc.radius,\n//                 startAngle: startAngleTemp,\n//                 endAngle: arc.endAngle\n//             }),\n//             transform: \"translate(\" + arc.center.x + \",\" + arc.center.y + \")\"\n//         });\n//     });\n\n//     return paths;\n// }\n"]}]}