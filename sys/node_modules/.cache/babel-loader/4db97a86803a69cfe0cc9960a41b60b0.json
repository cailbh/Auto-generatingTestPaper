{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\ProblemContentPanel\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\ProblemContentPanel\\index.vue","mtime":1697344365095},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"procPanel\">\r\n    <div class=\"panelHead\">Content View </div>\r\n      <!-- //SupportPanel</div> -->\r\n    <div id=\"procPanelDiv\" class=\"panelBody\" ref=\"procPanelDiv\">\r\n      <div id=\"questionSer\" ref=\"questionSer\"></div>\r\n      \r\n        <el-table stripe  :data=\"tableData\" style=\"width: 100%;height:80%;overflow-y: scroll;scrollbar-width: none;\"         \r\n        :row-style=\"iRowStyle\"\r\n        :cell-style=\"iCellStyle\"\r\n        :header-row-style=\"iHeaderRowStyle\"\r\n        :header-cell-style=\"iHeaderCellStyle\">\r\n          <!-- <el-table-column prop=\"key\" label=\"\" width=\"190\">\r\n          </el-table-column> -->\r\n          <!-- eslint-disable -->\r\n          <el-table-column prop=\"value\" label=\"\" width=\"480\">\r\n            <template slot-scope=\"scope\">\r\n              <div v-if=\"scope.row.key == 'Title'\">\r\n                <div style=\"float: left;height: 40px;font-size: 24px;color: rgb(103, 103, 103);\">\r\n                {{ scope.row.value }}</div>\r\n\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'Type'\">\r\n                <!-- <div style=\"float: left;height:15px;font-size: 17px;\"> -->\r\n                <div style=\"float: left;height: auto;;font-size: 20px;color: rgb(103, 103, 103);\">\r\n                  {{ `${scope.row.value}` }}</div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'ContentT'\">\r\n                <div style=\"float: left;height: auto;;font-size: 22px;color: rgb(103, 103, 103);\">\r\n                {{ scope.row.value }}</div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'Content'\">\r\n                <div style=\"float: left;height: auto;\">\r\n                  &nbsp;&nbsp;{{ `&nbsp;&nbsp;${scope.row.value}` }}</div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'InputT'\">\r\n                <div style=\"float: left;height: auto;;font-size: 22px;color: rgb(103, 103, 103);\">\r\n                {{ scope.row.value }}</div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'Input'\">\r\n                <div style=\"float: left;height: auto;\">\r\n                  &nbsp;&nbsp;{{ `&nbsp;&nbsp;${scope.row.value}` }}</div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'OutT'\">\r\n                <div style=\"float: left;height: auto;;font-size: 22px;color: rgb(103, 103, 103);\">\r\n                {{ scope.row.value }}</div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'Out'\">\r\n                <div style=\"float: left;height: auto;\">\r\n                  &nbsp;&nbsp;{{ `&nbsp;&nbsp;${scope.row.value}` }}</div>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- eslint-enable -->\r\n        </el-table>\r\n      <!-- <div id=\"connectCon\" ref=\"connectCon\">\r\n      </div> -->\r\n      <div id=\"procData\" ref=\"procData\">\r\n\r\n      </div>\r\n    </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as d3 from 'd3'\r\nimport tools from \"@/utils/tools.js\";\r\n\r\nexport default {\r\n  props: [],\r\n  data() {\r\n    return {\r\n      typeRadio: \"cell State\",\r\n      treeData: null,\r\n      toolsState: '',\r\n      problemsData:[],\r\n      problemConceptData:[],\r\n      conceptTree:[],\r\n      // confirmUrl: require(\"@/assets/img/confirm.svg\"),\r\n      // cancelUrl: require(\"@/assets/img/cancel.svg\"),\r\n      // toolsButsUrl: require(\"@/assets/img/toolsButs.png\"),\r\n      // addNodeSonUrl: require(\"@/assets/img/addNode1.png\"),\r\n      // addNodePerUrl: require(\"@/assets/img/addNode2.png\"),\r\n      // addLinkBasicUrl: require(\"@/assets/img/addLink.png\"),\r\n      // nameinput: \"Random Variables\",\r\n      nameinput: \"Fundamental Graphs\",\r\n      // nameinput: \"Trees\",\r\n      lectureStyleValue: [0, 80],\r\n      tableData: [{\r\n        key: 'Title',\r\n        value: '',\r\n      },{\r\n        key: 'Type',\r\n        value: '',\r\n      }, {\r\n        key: 'ContentT',\r\n        value: '',\r\n      }, {\r\n        key: 'Content',\r\n        value: '',\r\n      }, {\r\n        key: 'InputT',\r\n        value: '',\r\n      }, {\r\n        key: 'Input',\r\n        value: '',\r\n      },{\r\n        key: 'OutT',\r\n        value: '',\r\n      },{\r\n        key: 'Out',\r\n        value: '',\r\n      }\r\n      ],\r\n      \r\n      graphGTransformK: 1,\r\n      graphGTransformX: 0,\r\n      graphGTransformY: 10,\r\n      curEntId: \"\",\r\n      insertEntId: \"\",\r\n      insertSourceEntId: \"-1\",\r\n      insertTargetEntId: \"-1\",\r\n      sonList: [],\r\n      minDImportance: 0,\r\n      maxDImportance: 0,\r\n      minDRelevance: 0,\r\n      maxDRelevance: 0,\r\n      maxDDuration: 0,\r\n      maxTotalDuration: 0,\r\n      importanceMinColor: \"rgb(203, 230, 209)\",\r\n      importanceMaxColor: \"rgb(22, 144, 207)\",\r\n      totalDuration: 1000,\r\n      importanceColor_linear: null,\r\n      importanceCompute_color: null,\r\n      relevanceScale_linear: null,\r\n      totalDurationScale_linear: null,\r\n      DivisionDataList: [],\r\n      rootDivisionDataList: [],\r\n      entDivisionDataList: [],\r\n      colorMap: {},\r\n      rootColorMap:{},\r\n      videoDuration: 570,\r\n      selectRectId: \"\",\r\n      selectRectClass: \"\",\r\n      topicLineWidth: 1000,\r\n      topicLineHeight: 1000,\r\n      moveLineWidth: 1000,\r\n      entLineWidth: 1000,\r\n      totalSonDuration: 0,\r\n      treeGTransformK:1,\r\n      treeGTransformX:10,\r\n      treeGTransformY:100,\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n    };\r\n  },\r\n  watch: {\r\n    typeRadio(val) {\r\n    },\r\n    lectureStyleValue(val){\r\n      console.log(val);\r\n      let mid = (val[0]+val[1])/2;\r\n      d3.select(\"#procData .el-slider__runway\")\r\n      .attr(\"style\",\"background: linear-gradient(90deg, #ff9c9c \"+mid+\"%,#6f8be0 \"+mid+\"%) !important\")\r\n    },\r\n    type(val) {\r\n    },\r\n    // selectEnt(val){\r\n    //   console.log(val);\r\n    // },\r\n    curEntId(curEntId) {\r\n    }\r\n  },\r\n  methods: {\r\n    selectType(v) {\r\n      // console.log(v)\r\n    },\r\n    \r\n\r\n    iRowStyle:function ({row, rowIndex}) {\r\n        return 'height:35px';\r\n    },\r\n    iHeaderRowStyle:function ({row, rowIndex}) {\r\n        return 'height:35px';\r\n    },\r\n    iCellStyle:function ({row, column, rowIndex, columnIndex}) {\r\n        return 'padding:2px'\r\n    },\r\n    iHeaderCellStyle:function ({row, column, rowIndex, columnIndex}) {\r\n        return 'padding:0px' \r\n    },\r\n    drawQuestionSurface(svg){\r\n      const _this = this;\r\n      let psvg =svg\r\n      let w = psvg.attr(\"width\");\r\n      let h = psvg.attr(\"height\");\r\n      psvg.select(\"#procG\").remove();\r\n      let backg = psvg.append(\"g\").attr(\"id\", \"backG\").attr(\"width\", w).attr(\"height\", h);\r\n      let prog = psvg.append(\"g\").attr(\"id\", \"procG\").attr(\"width\", w).attr(\"height\", h);\r\n      let proData = _this.problemsData;\r\n      let problemConceptData = _this.problemConceptData;\r\n      let conceptTree = _this.conceptTree;\r\n\r\n      console.log(conceptTree,problemConceptData);\r\n      let proId = _this.curEntId;\r\n      if(proId == \"\"){return;}\r\n      let curPro = proData.find(function(p){return (p['id']).toString() == (proId).toString()})\r\n      let title = curPro['title'];\r\n      let type = curPro['type'];\r\n      let tx=10;\r\n      let ty = 20;\r\n      // ty = _this.drawTxt(prog,tx,ty,w,`Title:${title}`,\"black\",22,'title');\r\n      let content = curPro['content'].split(\"###\");\r\n\r\n      let input =\" \";\r\n      let output =\"\";\r\n      if(proId == '1568086661408161798'){\r\n        title = \"ASCII\";\r\n        content = [\"已知字符 'a' 的ASCII码为 97，执行下列语句的输出是_______。 `printf ('%d, %c', 'b', 'b'+1 )` ;\"];\r\n        _this.tableData.find(function(t){return t['key'] == 'InputT'})['value'] = \"\";\r\n        input = \"A.98, b   B.错误 C. 98, 99   D. 98, c\"\r\n        _this.tableData.find(function(t){return t['key'] == 'OutT'})['value'] = \"\";\r\n        // output = \"C. 98, 99   D. 98, c\"\r\n      }\r\n      else if(proId == '1568086661408161798'){\r\n        title = \"ASCII\";\r\n        content = [\"已知字符 'a' 的ASCII码为 97，执行下列语句的输出是_______。 `printf ('%d, %c', 'b', 'b'+1 )` ;\"];\r\n        _this.tableData.find(function(t){return t['key'] == 'InputT'})['value'] = \"\";\r\n        input = \"A.98, b   B.错误 C. 98, 99   D. 98, c\"\r\n        _this.tableData.find(function(t){return t['key'] == 'OutT'})['value'] = \"\";\r\n        // output = \"C. 98, 99   D. 98, c\"\r\n      }\r\n      else if(type == 'PROGRAMMING'){\r\n        input =\" \"+ content[1].split(\"输入格式:\")[1];\r\n        output =\"\"+ content[2].split(\"输出格式:\")[1];\r\n        title = `Title: ${' '} ${title}`;\r\n        _this.tableData.find(function(t){return t['key'] == 'ContentT'})['value'] = \"Description:\";\r\n        _this.tableData.find(function(t){return t['key'] == 'InputT'})['value'] = \"Input Format:\";\r\n        _this.tableData.find(function(t){return t['key'] == 'OutT'})['value'] = \"Output Format:\";\r\n      }\r\n      else{\r\n        title = \"\";\r\n\r\n        _this.tableData.find(function(t){return t['key'] == 'InputT'})['value'] = \"\";\r\n        _this.tableData.find(function(t){return t['key'] == 'OutT'})['value'] = \"\";\r\n      }\r\n      _this.tableData.find(function(t){return t['key'] == 'Title'})['value'] = `${' '} ${title}`;\r\n      _this.tableData.find(function(t){return t['key'] == 'Type'})['value'] = `Type: ${type}`;\r\n      _this.tableData.find(function(t){return t['key'] == 'Content'})['value'] = content[0];\r\n      _this.tableData.find(function(t){return t['key'] == 'Input'})['value'] = ` ${input}`;\r\n      _this.tableData.find(function(t){return t['key'] == 'Out'})['value'] = ` ${output}`;\r\n      console.log(_this.tableData)\r\n      let conMap = {}\r\n      let conName = []\r\n      for(let i=0;i<conceptTree.length;i++){\r\n        conMap[conceptTree[i]['id']] = -1;\r\n        conName.push(conceptTree[i]['id'])\r\n      }\r\n      // var compare = function (x, y) {//比较函数\r\n      //   let lenx = x.length;\r\n      //   let leny = y.length;\r\n      //   if(lenx!=leny)return lenx>leny;\r\n      //   return x[\"problemSetId\"] > y[\"problemSetId\"] \r\n      // };\r\n      // conName.sort(compare)\r\n\r\n      for (let i = 0; i < problemConceptData.length; i++) {\r\n        let conceptId = problemConceptData[i]['conceptId'];\r\n        let problemId = problemConceptData[i]['problem'];\r\n        let type = problemConceptData[i]['type'];\r\n        if(problemId == proId){\r\n          conMap[conceptId] = type;\r\n        }\r\n      }\r\n      let prex = 30;\r\n      let prey = 60;\r\n      let textWidth = _this.drawTxt(prog, 14, 20, \"Related concepts：\", \"rgb(103, 103, 103)\", 22, `kd`);\r\n      conceptTree.forEach(con=>{\r\n        let jg = conMap[con['id']];\r\n        if(jg!=-1){\r\n          let recColor = \"rgb(218, 127, 136)\";\r\n          if(jg==0)\r\n            recColor = \"grey\"\r\n          let textWidth = _this.drawTxt(prog, prex, prey, con['name'], \"white\", 16, `ProSur_con${con['id']}`);\r\n          _this.drawRect(backg, prex-4, prey-20, textWidth+8,28,  10, recColor, \"1\", \"none\", \"1\", `ProSur_coRect${con['id']}`, 'ProSur');\r\n        // prey+=10;\r\n          prex+=textWidth+20;\r\n          if(prex>270){\r\n            prex = 30;\r\n            prey+=30\r\n          }\r\n        }\r\n        // let textWidth = _this.drawTxt(prog, prex, prey, con['id']+''+conMap[con['id']], \"black\", 10, `FigNet_con`);\r\n\r\n          // _this.drawTxt(prog,prex,prey,w,`Title:${content}`,\"black\",16,'title');\r\n      })\r\n      // _this.drawTxt(prog,tx,ty+25,w,`Title:${content}`,\"black\",16,'title');\r\n    },    \r\n    \r\n    drawprocData() {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let width = this.$refs.procData.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.procData.offsetHeight - margin.top - margin.bottom;\r\n      d3.select(\"#procData\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#procData\").append(\"svg\")\r\n        .attr(\"id\", \"procEnt\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n        let graphGTransformX = _this.graphGTransformX;\r\n      let graphGTransformY = _this.graphGTransformY;\r\n      let graphGTransformK = _this.graphGTransformK;\r\n      \r\n      let stx = 0;\r\n      let sty = 0;\r\n      let stk = 1;\r\n      let entG = svg.append(\"g\").attr(\"id\", \"entG\").attr(\"width\", width).attr(\"height\", height);\r\n      let sonG = svg.append(\"g\").attr(\"id\", \"sonG\").attr(\"width\", width).attr(\"height\", height).attr(\"transform\", \"translate(1,320)\");\r\n        var graphZoom = d3.zoom()\r\n        .scaleExtent([0, 100])\r\n        .on(\"start\", (e) => {\r\n          sty = e.transform.y;\r\n          stx = e.transform.x;\r\n          stk = e.transform.k;\r\n        })\r\n        .on('zoom', (e) => {\r\n          graphGTransformX = _this.graphGTransformX //+ e.transform.x - stx;\r\n          graphGTransformY = _this.graphGTransformY + e.transform.y - sty;\r\n          graphGTransformK = _this.graphGTransformK //+ e.transform.k - stk;\r\n          entG.attr('transform', 'translate(' + (graphGTransformX) + ',' + (graphGTransformY) + ') scale(' + (graphGTransformK) + ')')\r\n        })\r\n        .on('end', (e) => {\r\n          _this.graphGTransformX = graphGTransformX;\r\n          _this.graphGTransformY = graphGTransformY;\r\n          _this.graphGTransformK = graphGTransformK;\r\n          entG.attr('transform', 'translate(' + (graphGTransformX) + ',' + (graphGTransformY) + ') scale(' + (graphGTransformK) + ')')\r\n        });\r\n\r\n      svg.call(graphZoom);\r\n      // _this.entG = entG;\r\n      // _this.sonG = sonG;\r\n      _this.drawQuestionSurface(entG);\r\n      // _this.drawSonLine(_this.data[1]);\r\n    },\r\n    updata() {\r\n      \r\n    const _this = this;\r\n      _this.drawprocData();\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    const _this = this;\r\n    this.$nextTick(() => {\r\n      _this.updata();\r\n\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this\r\n    // _this.tableData.find(function (d) { return d['key'] == 'name' })['value'] = 'Computer Network';\r\n    this.$bus.$on('selectEnt', (val) => {\r\n     _this.curEntId = val;\r\n     _this.updata();\r\n    });\r\n    this.$bus.$on('allProblem', (val) => {\r\n     _this.problemsData = val;\r\n      // _this.updata();\r\n    });\r\n  },\r\n  // beforeDestroy() {\r\n  //   clearInterval(this.moveTimer);\r\n  // },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"],"sourceRoot":"src/components/ProblemContentPanel"}]}