{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConSankey\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConSankey\\index.vue","mtime":1703081770003},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"proConSankey\" ref=\"proConSankeyDiv\">\r\n    <div class=\"panelHead\"></div>\r\n    <div id=\"proConSankeyCantain\" class=\"panelBody\" ref=\"proConSankeyCantain\">\r\n    </div>\r\n\r\n    <!-- <div class=\"close\" ref=\"listen\">\r\n    </div> -->\r\n    <!-- <el-button type=\"primary\" @click=\"onSubmit\">Create</el-button> -->\r\n    <!-- <div class=\"proConSankeyTooltip toolTip\">\r\n      <p>\r\n        <br /><strong class=\"name toolTipAttr\"></strong>\r\n        <br /><strong class=\"text toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr0 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr1 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr2 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr3 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr4 toolTipAttr\"></strong>\r\n      </p>\r\n    </div> -->\r\n  </div>\r\n</div></template>\r\n<script>\r\n// import { param } from 'server/api';\r\nimport * as d3 from 'd3'\r\nimport * as d3Sankey from 'd3-sankey'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\n// import TestJson from \"@/assets/json/case2_fin.json\";\r\n// import TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport Circle from '@/utils/geometry/circle';\r\nimport tools from \"@/utils/tools.js\";\r\n// import \"@/utils/sankey.js\";\r\nimport drawTools from \"@/utils/drawingTools.js\";\r\n\r\nexport default {\r\n  props: [\"toolsState\"],\r\n  data() {\r\n    return {\r\n      proName: '',\r\n      ConceptOri:'',\r\n      sankeyNodeData:'',\r\n      sankeyLinkData:'',\r\n      curPaperSankeyData:\"\",\r\n      sankeyData: '',\r\n      allProblems: '',\r\n      allConcepts: '',\r\n      allProInConGPTSankeyData: '',\r\n      allproConSankeyData: '',\r\n      proType: \"\",\r\n      select: '',\r\n      proForm: {\r\n        name: \"\",\r\n        type: \"\",\r\n        content: \"\"\r\n      },\r\n      attrColorlist: [],\r\n      rootSvg: '',\r\n      width: 0,\r\n      height: 0,\r\n      thisId: 10,\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    toolAddRel(val) {\r\n    },\r\n    toolsState: {\r\n      deep: true,\r\n      handler(val) {\r\n        console.log(val)\r\n        this.toolAddRel = val['addRel'];\r\n        this.toolAddRelMain = val['addRelMain'];\r\n        this.toolDelRel = val['delRel'];\r\n      }\r\n    },\r\n    // sankeyData: {\r\n    //   deep: true,\r\n    //   handler(val) {\r\n    //     console.log(val)\r\n    //     this.updataAll();\r\n    //   }\r\n    // },\r\n    sankeyNodeData(){\r\n      \r\n        this.updataAll();\r\n    }\r\n  },\r\n  methods: {\r\n    getAllSankeyData() {\r\n      const _this = this;\r\n    //   _this.sankeyData ={\r\n    //     \"nodes\": [\r\n    //       { \"name\": \"A\" },\r\n    //       { \"name\": \"B\" },\r\n    //       { \"name\": \"C\" },\r\n    //       { \"name\": \"D\" },\r\n    //       ],\r\n    //   \"links\": [\r\n    //     {'source':0,'target':2,'value':\"110\"},\r\n    //     {'source':0,'target':3,'value':\"5\"},\r\n    //     {'source':1,'target':2,'value':\"4\"},\r\n    //     {'source':1,'target':3,'value':\"2\"},\r\n\r\n    //   ]\r\n    // }\r\n      this.$http\r\n        .get(\"/api/sankeyData\", { params: {} }, {})\r\n        .then((response) => {\r\n          _this.sankeyLinkData = response.body;\r\n          _this.getAllSankeyNodeData();\r\n        });\r\n      // this.$http\r\n      //   .get(\"/api/concept/allproConSankeyData\", { params: {} }, {})\r\n      //   .then((response) => {\r\n      //     _this.allproConSankeyData = response.body;\r\n      //     console.log(\"allproConSankeyData\",response.body);\r\n      //     // _this.allRelationships = response.body;\r\n      //     // _this.drawnetPData();\r\n      //   });\r\n    },\r\n    \r\n    getAllSankeyNodeData() {\r\n      const _this = this;\r\n      let nodes = [];\r\n      let conOri = _this.ConceptOri;\r\n      let sankeyLinkData = _this.sankeyLinkData;\r\n      let j = 0;\r\n      let max = 0;\r\n      for(let i=0;i<conOri.length;i++){\r\n        nodes.push(conOri[i]);\r\n        j++;\r\n      }\r\n      for(let i=0;i<sankeyLinkData.length;i++){\r\n        let target = sankeyLinkData[i]['target'];\r\n        if(target>max){max=target;}\r\n      }\r\n      let i=0;\r\n      console.log(conOri, 2131313,j,max,nodes)\r\n      while(j<=max){\r\n        nodes.push({\"name\":`con${i}`});\r\n        i++;\r\n        j++\r\n      }\r\n      _this.sankeyNodeData = nodes;\r\n\r\n    },\r\n    drawProConSankey(svg) {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let psvg = svg\r\n      let width = psvg.attr(\"width\");\r\n      let height = psvg.attr(\"height\");\r\n      psvg.select(\"#netPG\").remove();\r\n      // let prog = psvg.append(\"g\").attr(\"id\", \"netPG\").attr(\"width\", width).attr(\"height\", height);\r\n      let groups = svg.append(\"g\").attr(\"id\", \"proConSankeyGroups\").attr(\"width\", width).attr(\"height\", height)\r\n      // .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      // this.groupsSvg = groups;\r\n\r\n      let backG = groups.append(\"g\").attr(\"id\", \"proConSankeybackG\").attr(\"width\", width).attr(\"height\", height);\r\n      let arcG = groups.append(\"g\").attr(\"id\", \"proConSankeyarcG\").attr(\"width\", width).attr(\"height\", height);\r\n      let relG = groups.append(\"g\").attr(\"id\", \"proConSankeyrelG\").attr(\"width\", width).attr(\"height\", height);\r\n      let entG = groups.append(\"g\").attr(\"id\", \"proConSankeyentG\").attr(\"width\", width).attr(\"height\", height);\r\n      let frontG = groups.append(\"g\").attr(\"id\", \"proConSankeyfrontG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      // let scatterData = _this.scatterData;\r\n      // let xMaxMinDR = tools.getMaxMin(scatterData, 'x');\r\n      // let yMaxMinDR = tools.getMaxMin(scatterData, 'y');\r\n      // let scatterxLinear = d3.scaleLinear().domain([xMaxMinDR[1], xMaxMinDR[0]]).range([0, width]);\r\n      // let scatteryLinear = d3.scaleLinear().domain([yMaxMinDR[1], yMaxMinDR[0]]).range([0, height / 2]);\r\n      let colorList = _this.attrColorlist;\r\n      var node = _this.sankeyNodeData\r\n      var lk = _this.sankeyLinkData;\r\n      let marge = _this.margin;\r\n\r\n      const nodeSort = function(a,b){\r\n        return 0;\r\n      }\r\n\r\n      var sankey = d3Sankey.sankey()\r\n        .nodeWidth(50)//每个资源块的水平像素宽度\r\n        .nodePadding(0)//资源块间的纵向间距\r\n        // .nodeAlign(d3Sankey.sankeyLeft) \r\n        .nodeSort(nodeSort)\r\n        .size([width, height * 0.95]);\r\n      let { nodes, links } = sankey({\r\n        nodes: node.map(d => Object.assign({}, d)),\r\n        links: lk.map(d => Object.assign({}, d))\r\n            });\r\n      // var path = sankey.link();\r\n      var link = svg.append(\"g\").selectAll(\".link\")\r\n        .data(links)\r\n        .enter().append(\"path\")\r\n        .attr(\"class\", \"link\")\r\n        .attr(\"id\", \"san\")\r\n        .attr(\"fill\",\"rgba(255, 0, 0,0)\")\r\n        .attr(\"stroke\", \"rgba(132, 132, 132,0.3)\")\r\n        .attr(\"stroke-width\", d => d.width)\r\n        .style(\"mix-blend-mode\", \"multiply\")\r\n        .attr(\"d\", d3Sankey.sankeyLinkHorizontal())//链接的路径设置已经被sankey封装了，这里调用之后就可以生成连线呢的路径\r\n        //下面这句生成线的宽度，//线的宽度按照线端点两端块较小者扩宽，但为啥偏移max(1, d.dy）？\r\n        // .style(\"stroke-width\", function (d) {\r\n        //   return Math.max(1, d.dy);\r\n        // })\r\n        // .attr(\"transform\", function (d) { return \"translate(\" + marge.left + \",\" + marge.top + \")\"; })\r\n        .sort(function (a, b) { return b.dy - a.dy; });//这句去掉效果一样不知为啥？\r\n      //(5)sankey设置链接提示\r\n      link.append(\"title\")\r\n        .text(function (d) { return d.source.name + \" → \" + d.target.name + \"\\n\" + d.value; });\r\n\r\n        const gradient = link.append(\"linearGradient\")\r\n        // .attr(\"id\", d => (d.uid = DOM.uid(\"link\")).id)\r\n        .attr(\"gradientUnits\", \"userSpaceOnUse\")\r\n        .attr(\"x1\", d => d.source.x1)\r\n        .attr(\"x2\", d => d.target.x0);\r\n    gradient.append(\"stop\")\r\n        .attr(\"offset\", \"0%\")\r\n        .attr(\"stop-color\", d => colorList[parseInt(d.source.category)%colorList.length]);\r\n    gradient.append(\"stop\")\r\n        .attr(\"offset\", \"100%\")\r\n        .attr(\"stop-color\", d => colorList[parseInt(d.target.category)%colorList.length]);\r\n\r\n      //(6)拖动\r\n      var node = svg.append(\"g\").selectAll(\".node\")\r\n        .data(nodes)\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"node\")\r\n        // .attr(\"transform\", function (d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\r\n\r\n        .call(d3.drag()\r\n          .on(\"drag\", dragmove));\r\n      //(7)块\r\n      node.append(\"rect\")\r\n        .attr(\"id\", \"san\")\r\n        .attr(\"x\", d => d.x0)\r\n        .attr(\"y\", d => d.y0)\r\n        .attr(\"height\", d => (d.y1 - d.y0))\r\n        .attr(\"width\", (d) =>{\r\n          let rectWidth = d.x1 - d.x0;\r\n          if(d.index<=24){\r\n            let lay =  parseInt(d.lay);\r\n           rectWidth += (rectWidth/3)*(1-lay);\r\n          }\r\n          return rectWidth})\r\n        // .text(d => `${d.name}\\n${d.value.toLocaleString()}`)\r\n        // .attr(\"height\", function (d) { return d.dy; })\r\n        // .attr(\"width\", sankey.nodeWidth())//刚才设置的块的宽度  \r\n        // .attr(\"transform\", function (d) { return \"translate(\" + marge.left + \",\" + marge.top + \")\"; })\r\n        .style(\"fill\", function (d) {\r\n          let colorIndex =parseInt(d.index-25)%colorList.length;\r\n          if(d.index<=24){\r\n            colorIndex = parseInt(d.rootFatherIndex);\r\n          }\r\n          // na = d.name.substr(0, d.name.length - 1)\r\n          // if (na == 'ori') {\r\n          //   return mcolor[parseInt(d.name.substr(3)) - 1];\r\n          // }\r\n          // else {\r\n            return colorList[colorIndex];\r\n          // }\r\n        }\r\n        )\r\n        // .style(\"stroke\", function (d) { \r\n        //   if(d.index<=24)\r\n        //   return d3.rgb(d.color).darker(0.1); })//较深\r\n        .append(\"title\")\r\n        .text(function (d) { return d.name + \"\\n\" + d.value; });\r\n      //(8)文字\r\n      node.append(\"text\")\r\n        .attr(\"x\", function (d) { \r\n          let rectWidth = d.x1 - d.x0;\r\n          if(d.index<=24){\r\n            let lay =  parseInt(d.lay);\r\n           rectWidth += (rectWidth/3)*(1-lay);\r\n          }\r\n          return d.x0+rectWidth; })\r\n        .attr(\"y\", function (d) { return d.y0+(d.y1 - d.y0)/2; })\r\n        .attr(\"dy\", \".35em\")\r\n        .attr(\"id\", \"san\")\r\n        .attr(\"text-anchor\", \"end\")//文字在左边（中轴右边的）\r\n        .attr(\"transform\", null)\r\n        .text(function (d) { return d.name; })\r\n        // .filter(function (d) { return d.x < width / 2; })//除去在中轴左边的 \r\n        // .attr(\"x\", 6 + sankey.nodeWidth())\r\n        .attr(\"text-anchor\", \"start\")//文字在右边\r\n        // .attr(\"transform\", function (d) { return \"translate(\" + marge.left + \",\" + marge.top + \")\"; })\r\n      // (9)拖动\r\n      function dragmove(d) {\r\n        d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" +\r\n          (d.y = //下面的纵坐标调整值是怎么计算的？\r\n            Math.max(0,\r\n              Math.min(\r\n                height - d.dy,\r\n                d3.event.y\r\n              ))) + \")\");\r\n        sankey.relayout();//重新布局,线上下的位置调整\r\n        link.attr(\"d\", path);//更新路径\r\n      }\r\n\r\n\r\n\r\n    },\r\n    updataAll() {\r\n      var _this = this;\r\n      let margin = _this.margin\r\n      let width = _this.$refs.proConSankeyDiv.offsetWidth - margin.left - margin.right;\r\n      let height = _this.$refs.proConSankeyDiv.offsetHeight - margin.top - margin.bottom;\r\n      _this.width = width;\r\n      _this.height = height;\r\n      d3.select(\"#proConSankeyCantain\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#proConSankeyCantain\").append(\"svg\")\r\n        .attr(\"width\", width - 0)\r\n        .attr(\"height\", height - 0)\r\n        .attr('transform', 'translate(0,0)')\r\n        .style(\"position\", \"absolute\");\r\n\r\n      let entG = svg.append(\"g\").attr(\"id\", \"entG\").attr(\"width\", width).attr(\"height\", height);\r\n      let sonG = svg.append(\"g\").attr(\"id\", \"sonG\").attr(\"width\", width).attr(\"height\", height);\r\n      _this.rootSvg = svg;\r\n      _this.drawProConSankey(svg);\r\n      // });\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    d3.select(\".scatterTooltip\").classed(\"hidden\", true);\r\n    d3.select(\".chartTooltip\").classed(\"hidden\", true);\r\n    this.$bus.$on('ConceptTree', (val) => {\r\n      _this.conceptTree = val;\r\n    });\r\n    this.$bus.$on('allProblems', (val) => {\r\n      _this.allProblems = val;\r\n    });\r\n    this.$bus.$on('allConcepts', (val) => {\r\n      _this.allConcepts = val;\r\n      _this.getAllSankeyData();\r\n      _this.updataAll();\r\n    });\r\n    this.$bus.$on('ConceptOri', (val) => {\r\n      _this.ConceptOri = val;\r\n    });\r\n    this.$bus.$on('attrColorlist', (val) => {\r\n      _this.attrColorlist = val;\r\n    });\r\n    this.$bus.$on('curPaperSankeyData', (val) => {\r\n      console.log(\"curPaperSankeyData\",val)\r\n      _this.curPaperSankeyData = val[0].link;\r\n      _this.sankeyLinkData = _this.curPaperSankeyData;\r\n      _this.updataAll();\r\n    });\r\n\r\n    // this.$refs.moveproConSankeyLeft.addEventListener(\"mouseover\", _this.moveproConSankeyLeft); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"],"sourceRoot":"src/components/proConSankey"}]}