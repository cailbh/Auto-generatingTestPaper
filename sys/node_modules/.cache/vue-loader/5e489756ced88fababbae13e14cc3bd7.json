{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\src\\pages\\Home\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\src\\pages\\Home\\index.vue","mtime":1684101908213},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\video2Graph\\MOOCChinaVis\\MOOC_ChinaVis\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgSGVhZCBmcm9tICJAL2NvbXBvbmVudHMvSGVhZGVyL2luZGV4LnZ1ZSI7DQppbXBvcnQgR3JhcGggZnJvbSAnQC9jb21wb25lbnRzL0dyYXBoL2luZGV4LnZ1ZSc7DQppbXBvcnQgU2NhdHRlciBmcm9tICdAL2NvbXBvbmVudHMvU2NhdHRlci9pbmRleC52dWUnOw0KaW1wb3J0IFByb2NQYW5lbCBmcm9tICdAL2NvbXBvbmVudHMvUHJvYmxlbUNvbnRlbnRQYW5lbC9pbmRleC52dWUnOw0KDQppbXBvcnQgQ29udHJvbFBhbmVsIGZyb20gJ0AvY29tcG9uZW50cy9Db250cm9sUGFuZWwvaW5kZXgudnVlJw0KaW1wb3J0IE5ldFBQYW5lbCBmcm9tICdAL2NvbXBvbmVudHMvTmV0UHJvYmxlbVBhbmVsL2luZGV4LnZ1ZSc7DQppbXBvcnQgR3JvdXBKc29uIGZyb20gIkAvYXNzZXRzL2pzb24vZ3JvdXAuanNvbiI7DQppbXBvcnQgU2V0SnNvbiBmcm9tICJAL2Fzc2V0cy9qc29uL3F1ei5qc29uIjsNCmltcG9ydCB0b29scyBmcm9tICJAL3V0aWxzL3Rvb2xzLmpzIjsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogeyBIZWFkLCBHcmFwaCwgU2NhdHRlciwgUHJvY1BhbmVsLCBOZXRQUGFuZWwsIENvbnRyb2xQYW5lbCB9LA0KICAvKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqLw0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBwcm9ibGVtc0RhdGE6IFtdLA0KICAgICAgc3VibWlzc2lvbnNEYXRhOiBbXSwNCiAgICAgIGdyb3VwRGF0YTogR3JvdXBKc29uLA0KICAgICAgc2V0VGltZURhdGE6IFNldEpzb24sDQogICAgICBuZXREYXRhOiBbXSwNCiAgICAgIHByb2JsZW1SZWxCeUNvbmNlcHQ6IFtdLA0KICAgICAgcHJvYmxlbUxpc3RCeUNvbmNlcHQ6IFtdLA0KICAgICAgc3R1ZGVudHNEYXRhOiBbXSwNCiAgICAgIGNvbmNlcHRzRGF0YTogW10sDQogICAgICBTZWxlY3RTdHVkZW50TGlzdDogW10sDQogICAgICBjb25jZXB0VHJlZTogW10sDQogICAgICBwcm9TZXREYXRhOiBbXSwNCiAgICAgIHByb2JsZW1Db25jZXB0RGF0YTogW10sDQogICAgICB1c2VyUHJvYmxlbURhdGE6IFtdLA0KICAgICAgdG9vbHNTdGF0ZToge30sDQogICAgICB0aW1lcjogbnVsbCwNCiAgICAgIHNob3dWaWRlbzogdHJ1ZSwNCiAgICAgIHNob3dHcmFwaDogdHJ1ZSwNCiAgICAgIHNob3dFZGl0OiBmYWxzZSwNCiAgICAgIHNlbGVjdEVudElkOiAiMCIsDQogICAgICBzZWxlY3RFbnQ6ICIwIiwNCiAgICAgIHRvb2xTdGF0ZToge30sDQogICAgICB0aW1lRHVyOiAiIiwNCiAgICAgIHZpZGVvVGltZTogMCwNCiAgICAgIHdpbmRvd1dpZHRoOiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsIC8v5a6e5pe25bGP5bmV5a695bqmDQogICAgICB3aW5kb3dIZWlnaHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsIC8v5a6e5pe25bGP5bmV6auY5bqmDQogICAgICBhdHRyQ29sb3JMaXN0OlsNCiAgICAgICAgInJnYigyNTQsIDMzLCA3OSkiLA0KICAgICAgICAicmdiKDExNSwgMjMwLCAxNjMpIiwNCiAgICAgICAgInJnYigyNTAsIDIxMCwgNTApIiwNCiAgICAgICAgInJnYigyNTUsIDEyMCwgOTApIiwNCiAgICAgICAgInJnYigyNTUsIDE1OSwgMjgpIiwNCiAgICAgICAgInJnYig2LCAyMTQsIDE2MCkiLA0KICAgICAgICAicmdiKDEyNSwgOTgsIDIxMSkiLA0KICAgICAgXSwNCiAgICAgIC8vIGF0dHJDb2xvckxpc3Q6Ww0KICAgICAgLy8gICAicmdiKDI1MywgMTc0LCAxMzQpIiwNCiAgICAgIC8vICAgInJnYigxMTUsIDIzMCwgMTYzKSIsDQogICAgICAvLyAgICJyZ2IoMjU1LCAyMzMsIDE0MSkiLA0KICAgICAgLy8gICAicmdiKDU2LCAxOTEsIDIwMSkiLA0KICAgICAgLy8gICAicmdiKDI1NSwgMTIyLCAxMjUpIiwNCiAgICAgIC8vICAgInJnYigyMjQsIDIwNywgMjQzKSIsDQogICAgICAvLyBdLA0KICAgICAgYXR0ckNvbG9yTGlnaHRMaXN0OlsNCiAgICAgICAgInJnYigyNTMsIDE3NCwgMTM0KSIsDQogICAgICAgICJyZ2IoMjU1LCAxODQsIDI0MCkiLA0KICAgICAgICAicmdiKDI1NSwgMTczLCAxNTkpIiwNCiAgICAgICAgInJnYigyNTUsIDIwOCwgMTMzKSIsDQogICAgICAgICJyZ2IoMTQ1LCAyMjYsIDE5OSkiLA0KICAgICAgICAicmdiKDE2NywgMTU4LCAyMjEpIiwNCiAgICAgIF0sDQogICAgICBzdHVDb2xvckxpc3Q6Ww0KICAgICAgICAicmdiKDI1MywgMTc0LCAxMzQpIiwNCiAgICAgICAgInJnYigyMDMsIDY0LCAxNTYpIiwNCiAgICAgICAgInJnYig4NSwgNiwgMTM0KSIsDQogICAgICAgICJyZ2IoMjUyLCAxNzEsIDEpIiwNCiAgICAgICAgInJnYig3MywgMTc4LCAxMDEpIiwNCiAgICAgIF0sDQogICAgICAvLyBzdHVDb2xvckxpc3Q6Ww0KICAgICAgLy8gICAicmdiKDI1NCwgMzMsIDc5KSIsDQogICAgICAvLyAgICJyZ2IoMjUyLCAxNzEsIDEpIiwNCiAgICAgIC8vICAgInJnYig4NSwgNiwgMTM0KSIsDQogICAgICAvLyAgICJyZ2IoMjAzLCA2NCwgMTU2KSIsDQogICAgICAvLyAgICJyZ2IoNzMsIDE3OCwgMTAxKSIsDQogICAgICAvLyBdLA0KICAgICAgbWNvbG9yOiBbDQogICAgICAgICJyZ2IoMjU1LDYwLDYwKSIsDQogICAgICAgICJyZ2IoMTU1LDIwLDEwMCkiLA0KICAgICAgICAicmdiKDI1NSw4MywyNTUpIiwNCiAgICAgICAgInJnYigyMDAsMTAwLDUwKSIsDQogICAgICAgICJyZ2IoMjM1LDEzNSwxNjIpIiwNCiAgICAgICAgInJnYigyMDAsMjAwLDEwMikiLA0KICAgICAgICAicmdiKDI1NSwxNzgsMTAxKSIsDQogICAgICAgICJyZ2IoNjMsMTUxLDEzNCkiLA0KICAgICAgICAicmdiKDgzLDE1NSwyNTUpIiwNCiAgICAgICAgInJnYig1MCwyMDAsMTIwKSIsDQogICAgICAgICJyZ2IoMiw1MCwyMDApIiwNCiAgICAgICAgInJnYigwLDEyMiwyNDQpIiwNCiAgICAgICAgInJnYigxNTAsMTIyLDI0NCkiLA0KICAgICAgICAicmdiKDE2OCwxNjgsMjU1KSIsDQogICAgICAgICJyZ2IoMjAwLDIwMCwyMDApIiwNCiAgICAgIF0sDQogICAgICBtTGlnbnRjb2xvcjogWw0KICAgICAgICAiI2ZmOWM5YyIsDQogICAgICAgICIjY2M4OGIwIiwNCiAgICAgICAgIiNmZmE4ZmYiLA0KICAgICAgICAiI2UzYjA5NyIsDQogICAgICAgICIjZjRjM2QwIiwNCiAgICAgICAgIiNmNGY0ZDAiLA0KICAgICAgICAiI2ZmZDhiMSIsDQogICAgICAgICIjOWVjYWMyIiwNCiAgICAgICAgIiNhOGNjZmYiLA0KICAgICAgICAiIzk3ZTNiYSIsDQogICAgICAgICIjNmY4YmUwIiwNCiAgICAgICAgInJnYigwLDEyMiwyNDQpIiwNCiAgICAgICAgIiNiNmEyZjciLA0KICAgICAgICAicmdiKDE2OCwxNjgsMjU1KSIsDQogICAgICAgICJyZ2IoMjAwLDIwMCwyMDApIiwNCiAgICAgIF0sDQogICAgICBtYXJnZTogew0KICAgICAgICB0b3A6IDYsDQogICAgICAgIHJpZ2h0OiAxMCwNCiAgICAgICAgYm90dG9tOiAxNiwNCiAgICAgICAgbGVmdDogNiwNCiAgICAgIH0sDQogICAgICBiYXJUeXBlOiAiVGVhY2hpbmciLA0KICAgIH07DQogIH0sDQogIHdhdGNoOiB7DQogICAgdG9vbFN0YXRlKHZhbCkgew0KICAgICAgaWYgKHZhbCA9PSAnZWRpdCcpDQogICAgICAgIHRoaXMuc2hvd0VkaXQgPSB0cnVlOw0KICAgICAgZWxzZQ0KICAgICAgICB0aGlzLnNob3dFZGl0ID0gZmFsc2U7DQogICAgfSwNCiAgICBzZWxlY3RFbnQodmFsKSB7DQogICAgICB0aGlzLnNlbGVjdEVudElkID0gdmFsOw0KICAgIH0sDQogICAgdGltZUR1cigpIHsNCiAgICB9LA0KICAgIGN1YmVfZGF0YSgpIHsNCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsgfSk7DQogICAgfSwNCiAgICBjbHVEYXRhKCkgew0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgfSk7DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGdldFByb2JsZW1zKCkgew0KICAgICAgY29uc3QgX3RoaXMgPSB0aGlzOw0KICAgICAgbGV0IGRhdGEgPSBbXTsNCiAgICAgIHRoaXMuJGh0dHANCiAgICAgICAgLy8gLmdldCgiL2FwaS9wcm9ibGVtL2FsbFByb2JsZW0iLCB7IHBhcmFtczogeyBuYW1lOiAiMTIzNDUiIH0gfSwge30pDQogICAgICAgIC5nZXQoIi9hcGkvcHJvYmxlbS9hbGxQcm9ibGVtIiwge30sIHt9KQ0KICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICBfdGhpcy5wcm9ibGVtc0RhdGEgPSByZXNwb25zZS5ib2R5Ow0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIGdldENvbmNlcHQoKSB7DQogICAgICBjb25zdCBfdGhpcyA9IHRoaXM7DQogICAgICB0aGlzLiRodHRwDQogICAgICAgIC5nZXQoIi9hcGkvY29uY2VwdC9hbGxDb25jZXB0Iiwge30sIHt9KQ0KICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICBfdGhpcy5jb25jZXB0c0RhdGEgPSByZXNwb25zZS5ib2R5Ow0KICAgICAgICAgIF90aGlzLiRidXMuJGVtaXQoIkNvbmNlcHQiLCBfdGhpcy5jb25jZXB0c0RhdGEpOw0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIGdldENvbmNlcHRUcmVlKCkgew0KICAgICAgY29uc3QgX3RoaXMgPSB0aGlzOw0KICAgICAgdGhpcy4kaHR0cA0KICAgICAgICAuZ2V0KCIvYXBpL2NvbmNlcHQvY29uY2VwdFRyZWUiLCB7fSwge30pDQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gew0KICAgICAgICAgIF90aGlzLmNvbmNlcHRUcmVlID0gcmVzcG9uc2UuYm9keTsNCiAgICAgICAgICBfdGhpcy4kYnVzLiRlbWl0KCJDb25jZXB0VHJlZSIsIF90aGlzLmNvbmNlcHRUcmVlKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICBnZXRTdWJtaXNzaW9ucygpIHsNCiAgICAgIGNvbnN0IF90aGlzID0gdGhpczsNCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCIvYXBpL1N1Ym1pc3Npb24vYWxsTG9nIiwge30sIHt9KQ0KICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICBfdGhpcy5zdWJtaXNzaW9uc0RhdGEgPSByZXNwb25zZS5ib2R5Ow0KICAgICAgICAgIF90aGlzLiRidXMuJGVtaXQoIlN1Ym1pc3Npb24iLCBfdGhpcy5zdWJtaXNzaW9uc0RhdGEpOw0KICAgICAgICAgIF90aGlzLmNhbFN0dWRlbnQoKTsNCiAgICAgICAgICBfdGhpcy5jYWxjTmV0RGF0YSgpOw0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIGdldFByb2JsZW1Db25jZXB0KCkgew0KICAgICAgY29uc3QgX3RoaXMgPSB0aGlzOw0KICAgICAgdGhpcy4kaHR0cC5nZXQoIi9hcGkvY29uY2VwdFByb2JsZW0vYWxsUmVsIiwge30sIHt9KQ0KICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICBfdGhpcy5wcm9ibGVtQ29uY2VwdERhdGEgPSByZXNwb25zZS5ib2R5Ow0KICAgICAgICAgIF90aGlzLiRidXMuJGVtaXQoIlByb19Db24iLCBfdGhpcy5wcm9ibGVtQ29uY2VwdERhdGEpOw0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIGdldFN0dWRlbnRzKCkgew0KICAgICAgY29uc3QgX3RoaXMgPSB0aGlzOw0KICAgICAgdGhpcy4kaHR0cC5nZXQoIi9hcGkvc3R1ZGVudC9hbGxTdHVkZW50Iiwge30sIHt9KQ0KICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICBfdGhpcy5zdHVkZW50c0RhdGEgPSByZXNwb25zZS5ib2R5Ow0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIGNhbFN0dWRlbnQoKSB7DQogICAgICBjb25zdCBfdGhpcyA9IHRoaXM7DQogICAgICBsZXQgZW50U3R1ZGVudCA9IFtdOw0KICAgICAgbGV0IGVudENvbmNlcHQgPSBbXTsNCiAgICAgIGxldCBlbnRQcm9ibGVtID0gW107DQogICAgICBsZXQgZW50UHJvU2V0ID0gW107DQoNCiAgICAgIGxldCBTZWxlY3RTdHVkZW50TGlzdCA9IF90aGlzLlNlbGVjdFN0dWRlbnRMaXN0Ow0KICAgICAgbGV0IHNldFRpbWVEYXRhID0gX3RoaXMuc2V0VGltZURhdGE7DQoNCiAgICAgIGxldCBjb25jZXB0VHJlZSA9IHRvb2xzLmRlZXBDbG9uZShfdGhpcy5jb25jZXB0VHJlZSk7DQogICAgICBsZXQgcHJvYmxlbXNEYXRhID0gdG9vbHMuZGVlcENsb25lKF90aGlzLnByb2JsZW1zRGF0YSk7DQogICAgICBsZXQgc3VibWlzc2lvbnNEYXRhID0gdG9vbHMuZGVlcENsb25lKF90aGlzLnN1Ym1pc3Npb25zRGF0YSk7DQogICAgICBsZXQgcHJvYmxlbUNvbmNlcHREYXRhID0gdG9vbHMuZGVlcENsb25lKF90aGlzLnByb2JsZW1Db25jZXB0RGF0YSk7DQogICAgICANCiAgICAgIGxldCBncm91cERhdGEgPSBfdGhpcy5ncm91cERhdGE7DQoNCiAgICAgIGNvbnNvbGUubG9nKFNlbGVjdFN0dWRlbnRMaXN0KTsNCg0KICAgICAgbGV0IHZhbGV0ZW1wID0gew0KICAgICAgICAndG90YWxUaW1lRHVyJzowLA0KICAgICAgICAndGltZUR1cic6MCwNCiAgICAgICAgJ3RvdGFsQXR0ZW1wdHMnOjAsDQogICAgICAgICdhY2NlcHRlZEF0dGVtcHRzJzowLA0KICAgICAgICAndG90YWxBdHRlbXB0c1Blb3BsZSc6MCwNCiAgICAgICAgJ2FjY2VwdGVkQXR0ZW1wdHNQZW9wbGUnOjAsDQogICAgICAgICd0b3RhbFNjb3JlJzowLA0KICAgICAgICAnYWNjdXJhY3knOjAsDQogICAgICAgICdjb25Db3VudCc6MCwNCiAgICAgICAgJ2d2amcnOi0xLA0KICAgICAgICAnY29uTGlzdCc6W10sDQogICAgICAgICdzY29yaW5nUmF0ZSc6MCwNCiAgICAgICAgJ3N0dSc6W10NCiAgICAgIH0NCiAgICAgICAgbGV0IHRlbXBTdHVkZW50ID0gW107DQogICAgICAgIGxldCB0ZW1wQWxsU3R1ZGVudCA9IHt9Ow0KICAgICAgICBsZXQgU3R1ZGVudE1hcCA9IHt9Ow0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBncm91cERhdGEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbGV0IHVpZCA9IGdyb3VwRGF0YVtpXVsnaWQnXTsNCiAgICAgICAgbGV0IHRwID0gdG9vbHMuZGVlcENsb25lKHZhbGV0ZW1wKTsNCiAgICAgICAgdHBbJ2lkJ10gPSB1aWQ7DQogICAgICAgIHRlbXBBbGxTdHVkZW50W3VpZF0gPSAodHApOw0KICAgICAgfQ0KICAgICAgdmFsZXRlbXBbJ3N0dURhdGEnXT0gdG9vbHMuZGVlcENsb25lKHRlbXBBbGxTdHVkZW50KTsNCiAgICAgIHNldFRpbWVEYXRhLmZvckVhY2goc2V0PT57DQogICAgICAgIHNldFsndGltZVN0J10gPSB0b29scy50aW1lMm1rdGltZShzZXRbJ3RpbWUnXSk7DQogICAgICB9KQ0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBTZWxlY3RTdHVkZW50TGlzdC5sZW5ndGg7IGkrKykgew0KICAgICAgICAgIGZvcihsZXQgaj0wO2o8U2VsZWN0U3R1ZGVudExpc3RbaV0ubGVuZ3RoO2orKyl7DQogICAgICAgICAgICAgIFN0dWRlbnRNYXBbU2VsZWN0U3R1ZGVudExpc3RbaV1bal1dID0gaTsNCiAgICAgICAgICB9DQogICAgICAgICAgdGVtcFN0dWRlbnQucHVzaCh0b29scy5kZWVwQ2xvbmUodmFsZXRlbXApKTsNCiAgICAgIH0NCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvYmxlbXNEYXRhLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIC8vIGxldCBpZCA9IHByb2JsZW1zRGF0YVtpXVsnaWQnXTsNCiAgICAgICAgLy8gcHJvYmxlbXNEYXRhW2ldID0gdG9vbHMuZGVlcENsb25lKHZhbGV0ZW1wKTsNCiAgICAgICAgLy8gcHJvYmxlbXNEYXRhW2ldWydpZCddID0gaWQ7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsndG90YWxUaW1lRHVyJ10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3RpbWVEdXInXSA9IDA7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsndG90YWxBdHRlbXB0cyddID0gMDsNCiAgICAgICAgcHJvYmxlbXNEYXRhW2ldWydhY2NlcHRlZEF0dGVtcHRzJ10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3RvdGFsQXR0ZW1wdHNQZW9wbGUnXSA9IDA7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsnYWNjZXB0ZWRBdHRlbXB0c1Blb3BsZSddID0gMDsNCiAgICAgICAgcHJvYmxlbXNEYXRhW2ldWyd0b3RhbFNjb3JlJ10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ2FjY3VyYWN5J10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ2NvbkNvdW50J10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ2Nvbkxpc3QnXSA9IFtdOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3Njb3JpbmdSYXRlJ10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ2dyb3VwVmFsJ10gPSB0b29scy5kZWVwQ2xvbmUodGVtcFN0dWRlbnQpOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3N0dSddID0gW107DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsnc3R1RGF0YSddID0gdG9vbHMuZGVlcENsb25lKHRlbXBBbGxTdHVkZW50KTsNCiAgICAgICAgbGV0IHByb1NldElkID0gcHJvYmxlbXNEYXRhW2ldWydwcm9ibGVtU2V0SWQnXTsNCg0KICAgICAgICBsZXQgcHJvdGltZSA9IHNldFRpbWVEYXRhLmZpbmQoZnVuY3Rpb24ocyl7cmV0dXJuIHNbJ3Byb2JsZW1TZXRJZCddID09IHByb1NldElkfSlbJ3RpbWVTdCddOw0KDQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsndGltZVNwJ10gPSBwcm90aW1lOw0KICAgICAgICANCiAgICAgICAgaWYgKGVudFByb1NldC5maW5kKGZ1bmN0aW9uIChlcykgeyByZXR1cm4gZXNbJ2lkJ10gPT0gcHJvU2V0SWQ7IH0pID09IHVuZGVmaW5lZCkgew0KICAgICAgICAgIGVudFByb1NldC5wdXNoKHsNCiAgICAgICAgICAgICJpZCI6IHByb1NldElkLA0KICAgICAgICAgICAgInBybyI6IFtdLA0KICAgICAgICAgICAgJ3RvdGFsU2NvcmUnOiAwLA0KICAgICAgICAgIH0pDQogICAgICAgIH0NCiAgICAgICAgbGV0IGVQUyA9IGVudFByb1NldC5maW5kKGZ1bmN0aW9uIChlcykgeyByZXR1cm4gZXNbJ2lkJ10gPT0gcHJvU2V0SWQ7IH0pOw0KICAgICAgICBlUFNbJ3BybyddLnB1c2gocHJvYmxlbXNEYXRhW2ldKTsNCiAgICAgICAgZVBTWyd0b3RhbFNjb3JlJ10gKz0gcHJvYmxlbXNEYXRhW2ldWydzY29yZSddOw0KICAgICAgfQ0KICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCBjb25jZXB0VHJlZS5sZW5ndGg7IGMrKykgew0KICAgICAgICBjb25jZXB0VHJlZVtjXVsndGltZUR1ciddID0gMDsNCiAgICAgICAgY29uY2VwdFRyZWVbY11bJ3RvdGFsQXR0ZW1wdHMnXSA9IDA7DQogICAgICAgIGNvbmNlcHRUcmVlW2NdWydhY2NlcHRlZEF0dGVtcHRzJ10gPSAwOw0KICAgICAgICBjb25jZXB0VHJlZVtjXVsndG90YWxTY29yZSddID0gMDsNCiAgICAgICAgY29uY2VwdFRyZWVbY11bJ2FjY3VyYWN5J10gPSAwOw0KICAgICAgICBjb25jZXB0VHJlZVtjXVsncHJvQ291bnQnXSA9IDA7DQogICAgICAgIGNvbmNlcHRUcmVlW2NdWydzY29yaW5nUmF0ZSddID0gMDsNCiAgICAgICAgY29uY2VwdFRyZWVbY11bJ2dyb3VwVmFsJ10gPSB0b29scy5kZWVwQ2xvbmUodGVtcFN0dWRlbnQpOw0KDQogICAgICB9DQogICAgICBmb3IgKGxldCBsID0gMDsgbCA8IHN1Ym1pc3Npb25zRGF0YS5sZW5ndGg7IGwrKykgew0KICAgICAgICBsZXQgdXNlcklkID0gc3VibWlzc2lvbnNEYXRhW2xdWyd1c2VyJ11bJ3VzZXInXVsnaWQnXTsNCg0KICAgICAgICAvLyBpZiAoU2VsZWN0U3R1ZGVudExpc3QuaW5kZXhPZih1c2VySWQpIT0tMSl7DQogICAgICAgICAgaWYgKGVudFN0dWRlbnQuZmluZChmdW5jdGlvbiAoZVMpIHsgcmV0dXJuIGVTWydpZCddID09IHVzZXJJZDsgfSkgPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICBlbnRTdHVkZW50LnB1c2goeyAnaWQnOiB1c2VySWQsICJwcm8iOiBbXSB9KTsNCiAgICAgICAgICB9DQogICAgICAgICAgbGV0IGVudFN0dSA9IGVudFN0dWRlbnQuZmluZChmdW5jdGlvbiAoZVMpIHsgcmV0dXJuIGVTWydpZCddID09IHVzZXJJZDsgfSk7DQogICAgICAgICAgbGV0IGphZ2VQcm9ibGVtQ29udGVudHMgPSBzdWJtaXNzaW9uc0RhdGFbbF1bJ2p1ZGdlUmVzcG9uc2VDb250ZW50cyddOw0KICAgICAgICAgIGxldCBzdWJtaXRBdCA9IHN1Ym1pc3Npb25zRGF0YVtsXVsnc3VibWl0QXQnXTsNCiAgICAgICAgICANCiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGphZ2VQcm9ibGVtQ29udGVudHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIGxldCBwcm9ibGVtSWQgPSBqYWdlUHJvYmxlbUNvbnRlbnRzW2ldWydwcm9ibGVtU2V0UHJvYmxlbUlkJ107DQogICAgICAgICAgICBsZXQgc2NvcmUgPSBqYWdlUHJvYmxlbUNvbnRlbnRzW2ldWydzY29yZSddOw0KICAgICAgICAgICAgbGV0IHByb1N0YXR1cyA9IGphZ2VQcm9ibGVtQ29udGVudHNbaV1bJ3N0YXR1cyddOw0KDQogICAgICAgICAgICBpZiAoZW50U3R1Wydwcm8nXS5maW5kKGZ1bmN0aW9uIChwKSB7IHJldHVybiBwWydpZCddID09IHByb2JsZW1JZDsgfSkgPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgIGVudFN0dVsncHJvJ10ucHVzaCh7ICJpZCI6IHByb2JsZW1JZCwgJ2xvZyc6IFtdLCAnYmVzdCc6IGphZ2VQcm9ibGVtQ29udGVudHNbaV0sICJ0b3RhbEF0dGVtcHRzIjogMCwgInRvdGFsU2NvcmUiOiAwIH0pDQogICAgICAgICAgICB9DQogICAgICAgICAgICANCiAgICAgICAgICAgIGxldCBlU1AgPSBlbnRTdHVbJ3BybyddLmZpbmQoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHBbJ2lkJ10gPT0gcHJvYmxlbUlkOyB9KQ0KICAgICAgICAgICAgLy8gZVNQWydsb2cnXS5wdXNoKGphZ2VQcm9ibGVtQ29udGVudHNbaV0pOw0KDQogICAgICAgICAgICBpZiAoZVNQWydiZXN0J11bJ3Njb3JlJ10gPCBzY29yZSkgew0KICAgICAgICAgICAgICBlU1BbJ2Jlc3QnXSA9IGphZ2VQcm9ibGVtQ29udGVudHNbaV07DQogICAgICAgICAgICB9DQogICAgICAgICAgICBsZXQgcHJvID0gcHJvYmxlbXNEYXRhLmZpbmQoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHBbJ2lkJ10gPT0gcHJvYmxlbUlkOyB9KQ0KICAgICAgICAgICAgaWYgKHBybyAhPSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgbGV0IHRpbWVTcCA9IHByb1sndGltZVNwJ10NCiAgICAgICAgICAgICAgLy8gaWYgKFNlbGVjdFN0dWRlbnRMaXN0LmluZGV4T2YodXNlcklkKSE9LTEpew0KICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFN0dWRlbnRNYXBbdXNlcklkXSxwcm9bJ2dyb3VwVmFsJ10pDQogICAgICAgICAgICAgIGlmKFN0dWRlbnRNYXBbdXNlcklkXSE9dW5kZWZpbmVkKXsNCiAgICAgICAgICAgICAgICBwcm9bJ2dyb3VwVmFsJ11bU3R1ZGVudE1hcFt1c2VySWRdXVsnc3R1RGF0YSddW3VzZXJJZF1bJ3RvdGFsQXR0ZW1wdHMnXSArPSAxOw0KICAgICAgICAgICAgICAgIHByb1snZ3JvdXBWYWwnXVtTdHVkZW50TWFwW3VzZXJJZF1dWydzdHVEYXRhJ11bdXNlcklkXVsnZ3ZqZyddID0gMTsNCiAgICAgICAgICAgICAgICBwcm9bJ2dyb3VwVmFsJ11bU3R1ZGVudE1hcFt1c2VySWRdXVsnc3R1J11bdXNlcklkXSA9IDA7DQogICAgICAgICAgICAgICAgcHJvWydncm91cFZhbCddW1N0dWRlbnRNYXBbdXNlcklkXV1bJ3RvdGFsQXR0ZW1wdHMnXSArPTE7DQogICAgICAgICAgICAgICAgcHJvWydncm91cFZhbCddW1N0dWRlbnRNYXBbdXNlcklkXV1bJ3RvdGFsVGltZUR1ciddICs9IHRvb2xzLnRpbWUybWt0aW1lKHN1Ym1pdEF0KSAtIHRpbWVTcDsNCiAgICAgICAgICAgICAgICBpZiAocHJvU3RhdHVzID09ICdBQ0NFUFRFRCcpew0KICAgICAgICAgICAgICAgICAgcHJvWydncm91cFZhbCddW1N0dWRlbnRNYXBbdXNlcklkXV1bJ2FjY2VwdGVkQXR0ZW1wdHMnXSArPSAxOw0KICAgICAgICAgICAgICAgICAgcHJvWydncm91cFZhbCddW1N0dWRlbnRNYXBbdXNlcklkXV1bJ3N0dURhdGEnXVt1c2VySWRdWydhY2NlcHRlZEF0dGVtcHRzJ10gKz0gMTsNCiAgICAgICAgICAgICAgICAgIHByb1snZ3JvdXBWYWwnXVtTdHVkZW50TWFwW3VzZXJJZF1dWydzdHUnXVt1c2VySWRdID0gMTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcHJvWydncm91cFZhbCddW1N0dWRlbnRNYXBbdXNlcklkXV1bJ3RvdGFsU2NvcmUnXSArPSBzY29yZSAvIHByb1snc2NvcmUnXTsNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBwcm9bJ2dyb3VwVmFsJ11bU3R1ZGVudE1hcFt1c2VySWRdXVsnc3R1RGF0YSddW3VzZXJJZF1bJ3RvdGFsU2NvcmUnXSArPSBzY29yZSAvIHByb1snc2NvcmUnXTsNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICBwcm9bJ3N0dURhdGEnXVt1c2VySWRdWyd0b3RhbEF0dGVtcHRzJ10gKz0gMTsNCiAgICAgICAgICAgICAgcHJvWydzdHVEYXRhJ11bdXNlcklkXVsndG90YWxUaW1lRHVyJ10gKz0gdG9vbHMudGltZTJta3RpbWUoc3VibWl0QXQpIC0gdGltZVNwOw0KDQogICAgICAgICAgICAgIHByb1snc3R1J11bdXNlcklkXSA9MDsNCiAgICAgICAgICAgICAgcHJvWyd0b3RhbEF0dGVtcHRzJ10gKz0gMTsNCiAgICAgICAgICAgICAgcHJvWyd0b3RhbFRpbWVEdXInXSArPSB0b29scy50aW1lMm1rdGltZShzdWJtaXRBdCkgLSB0aW1lU3A7DQoNCiAgICAgICAgICAgICAgZVNQWyd0b3RhbEF0dGVtcHRzJ10gKz0gMTsNCiAgICAgICAgICAgICAgaWYgKHByb1N0YXR1cyA9PSAnQUNDRVBURUQnKXsNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBwcm9bJ2FjY2VwdGVkQXR0ZW1wdHMnXSArPSAxOw0KICAgICAgICAgICAgICAgIHByb1snc3R1J11bdXNlcklkXSA9IDE7DQoNCiAgICAgICAgICAgICAgICBwcm9bJ3N0dURhdGEnXVt1c2VySWRdWydhY2NlcHRlZEF0dGVtcHRzJ10gKz0gMTsNCg0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIHByb1sndG90YWxTY29yZSddICs9IHNjb3JlIC8gcHJvWydzY29yZSddOw0KICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgcHJvWydzdHVEYXRhJ11bdXNlcklkXVsndG90YWxTY29yZSddICs9IHNjb3JlIC8gcHJvWydzY29yZSddOw0KICAgICAgICAgICAgICAvLyB9DQogICAgICAgICAgICAgIGVTUFsndG90YWxTY29yZSddICs9IHNjb3JlIC8gcHJvWydzY29yZSddOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgLy8gfQ0KICAgICAgfQ0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9ibGVtQ29uY2VwdERhdGEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbGV0IGNvbmNlcHRJZCA9IHByb2JsZW1Db25jZXB0RGF0YVtpXVsnY29uY2VwdElkJ107DQogICAgICAgIGxldCBwcm9ibGVtSWQgPSBwcm9ibGVtQ29uY2VwdERhdGFbaV1bJ3Byb2JsZW0nXTsNCiAgICAgICAgbGV0IFBybyA9IHByb2JsZW1zRGF0YS5maW5kKGZ1bmN0aW9uIChwKSB7IHJldHVybiBwWydpZCddID09IHByb2JsZW1JZDsgfSk7DQogICAgICAgIFByb1snY29uQ291bnQnXSsrOw0KICAgICAgICBQcm9bJ2Nvbkxpc3QnXS5wdXNoKGNvbmNlcHRJZCk7DQogICAgICB9DQoNCg0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9ibGVtc0RhdGEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgaWYgKHByb2JsZW1zRGF0YVtpXVsndG90YWxBdHRlbXB0cyddICE9IDApIHsNCiAgICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3Njb3JpbmdSYXRlJ10gPSBwcm9ibGVtc0RhdGFbaV1bJ3RvdGFsU2NvcmUnXSAvIHByb2JsZW1zRGF0YVtpXVsndG90YWxBdHRlbXB0cyddOw0KICAgICAgICAgIHByb2JsZW1zRGF0YVtpXVsnYWNjZXB0ZWRSYXRlJ10gPSBwcm9ibGVtc0RhdGFbaV1bJ2FjY2VwdGVkQXR0ZW1wdHMnXSAvIHByb2JsZW1zRGF0YVtpXVsndG90YWxBdHRlbXB0cyddOw0KICAgICAgICAgIHByb2JsZW1zRGF0YVtpXVsndGltZUR1ciddID0gcHJvYmxlbXNEYXRhW2ldWyd0b3RhbFRpbWVEdXInXSAvIHByb2JsZW1zRGF0YVtpXVsndG90YWxBdHRlbXB0cyddOw0KICAgICAgICB9DQogICAgICAgIGxldCBncm91cFZhbCA9IHByb2JsZW1zRGF0YVtpXVsnZ3JvdXBWYWwnXTsNCiAgICAgICAgDQogICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgZ3JvdXBWYWwubGVuZ3RoOyBqKyspIHsNCiAgICAgICAgICBpZiAoZ3JvdXBWYWxbal1bJ3RvdGFsQXR0ZW1wdHMnXSAhPSAwKSB7DQogICAgICAgICAgICBncm91cFZhbFtqXVsnc2NvcmluZ1JhdGUnXSA9IGdyb3VwVmFsW2pdWyd0b3RhbFNjb3JlJ10gLyBncm91cFZhbFtqXVsndG90YWxBdHRlbXB0cyddOw0KICAgICAgICAgICAgZ3JvdXBWYWxbal1bJ2FjY2VwdGVkUmF0ZSddID0gZ3JvdXBWYWxbal1bJ2FjY2VwdGVkQXR0ZW1wdHMnXSAvIGdyb3VwVmFsW2pdWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgICBncm91cFZhbFtqXVsndGltZUR1ciddID0gZ3JvdXBWYWxbal1bJ3RvdGFsVGltZUR1ciddIC8gZ3JvdXBWYWxbal1bJ3RvdGFsQXR0ZW1wdHMnXTsNCg0KICAgICAgICAgICAgbGV0IHN0dURhdGEgPSBncm91cFZhbFtqXVsnc3R1RGF0YSddOw0KICAgICAgICAgICAgT2JqZWN0LmtleXMoc3R1RGF0YSkuZm9yRWFjaCgocykgPT4gew0KDQogICAgICAgICAgICAgIGlmIChzdHVEYXRhW3NdWyd0b3RhbEF0dGVtcHRzJ10gIT0gMCkgew0KICAgICAgICAgICAgICAgIHN0dURhdGFbc11bJ3Njb3JpbmdSYXRlJ10gPSBzdHVEYXRhW3NdWyd0b3RhbFNjb3JlJ10gLyBzdHVEYXRhW3NdWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgICAgICAgc3R1RGF0YVtzXVsnYWNjZXB0ZWRSYXRlJ10gPSBzdHVEYXRhW3NdWydhY2NlcHRlZEF0dGVtcHRzJ10gLyBzdHVEYXRhW3NdWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgICAgICAgLy8gc3R1RGF0YVtzXVsndGltZUR1ciddID0gc3R1RGF0YVtzXVsndG90YWxUaW1lRHVyJ10gLyBzdHVEYXRhW3NdWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgbGV0IHN0dURhdGEgPSBwcm9ibGVtc0RhdGFbaV1bJ3N0dURhdGEnXTsNCiAgICAgICAgT2JqZWN0LmtleXMoc3R1RGF0YSkuZm9yRWFjaCgocyk9PnsNCiAgICAgICAgICAgIA0KICAgICAgICAgIGlmIChzdHVEYXRhW3NdWyd0b3RhbEF0dGVtcHRzJ10gIT0gMCkgew0KICAgICAgICAgICAgc3R1RGF0YVtzXVsnc2NvcmluZ1JhdGUnXSA9IHN0dURhdGFbc11bJ3RvdGFsU2NvcmUnXSAvIHN0dURhdGFbc11bJ3RvdGFsQXR0ZW1wdHMnXTsNCiAgICAgICAgICAgIHN0dURhdGFbc11bJ2FjY2VwdGVkUmF0ZSddID0gc3R1RGF0YVtzXVsnYWNjZXB0ZWRBdHRlbXB0cyddIC8gc3R1RGF0YVtzXVsndG90YWxBdHRlbXB0cyddOw0KICAgICAgICAgICAgc3R1RGF0YVtzXVsndGltZUR1ciddID0gc3R1RGF0YVtzXVsndG90YWxUaW1lRHVyJ10gLyBzdHVEYXRhW3NdWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgICANCiAgICAgICAgbGV0IG51bSA9IDA7DQogICAgICAgIGxldCBjdXIgPSAwOw0KICAgICAgICBsZXQgc3R1ID0gcHJvYmxlbXNEYXRhW2ldWydzdHUnXTsNCiAgICAgICAgT2JqZWN0LmtleXMoc3R1KS5mb3JFYWNoKChzKT0+ew0KICAgICAgICAgIGlmKHN0dVtzXT09MSl7DQogICAgICAgICAgICBudW0rKzsNCiAgICAgICAgICAgIGN1cisrOw0KICAgICAgICAgIH0NCiAgICAgICAgICBpZihzdHVbc109PTApew0KICAgICAgICAgICAgbnVtKys7DQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgICAvLyBmb3IgbCBpbiBlcFsnbG9nJ106DQogICAgICAgIC8vICAgICBudW0gKz0gMQ0KICAgICAgICAvLyAgICAgaWYgZXBbJ2xvZyddW2xdWzBdID09IGVwWydzY29yZSddOg0KICAgICAgICAvLyAgICAgICAgIGN1ciArPSAxDQogICAgICAgIC8vIGlmIGN1ciAhPSAwOg0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3RvdGFsQXR0ZW1wdHNQZW9wbGUnXSA9IG51bTsNCiAgICAgICAgcHJvYmxlbXNEYXRhW2ldWydhY2NlcHRlZEF0dGVtcHRzUGVvcGxlJ10gPSBjdXI7DQogICAgICB9DQogICAgICBmb3IgKGxldCBjID0gMDsgYyA8IGNvbmNlcHRUcmVlLmxlbmd0aDsgYysrKSB7DQogICAgICAgIGxldCBwY291bnQgPSAwOw0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2JsZW1Db25jZXB0RGF0YS5sZW5ndGg7IGkrKykgew0KICAgICAgICAgIGxldCBjb25jZXB0SWQgPSBwcm9ibGVtQ29uY2VwdERhdGFbaV1bJ2NvbmNlcHRJZCddOw0KICAgICAgICAgIGlmIChjb25jZXB0SWQgPT0gY29uY2VwdFRyZWVbY11bJ2lkJ10pIHsNCiAgICAgICAgICAgIHBjb3VudCsrOw0KICAgICAgICAgICAgbGV0IHByb2JsZW1JZCA9IHByb2JsZW1Db25jZXB0RGF0YVtpXVsncHJvYmxlbSddOw0KICAgICAgICAgICAgbGV0IFByb0J5Y29uID0gcHJvYmxlbXNEYXRhLmZpbmQoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHBbJ2lkJ10gPT0gcHJvYmxlbUlkOyB9KTsNCiAgICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydwcm9Db3VudCddICs9IDE7DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsndG90YWxBdHRlbXB0cyddICs9IFByb0J5Y29uWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRBdHRlbXB0cyddICs9IFByb0J5Y29uWydhY2NlcHRlZEF0dGVtcHRzJ107DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnc2NvcmluZ1JhdGUnXSArPSBQcm9CeWNvblsnc2NvcmluZ1JhdGUnXTsNCiAgICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydhY2N1cmFjeSddICs9IFByb0J5Y29uWydhY2N1cmFjeSddOw0KICAgICAgICAgICAgY29uY2VwdFRyZWVbY11bJ3RvdGFsQXR0ZW1wdHNQZW9wbGUnXSA9IFByb0J5Y29uWyd0b3RhbEF0dGVtcHRzUGVvcGxlJ107DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRBdHRlbXB0c1Blb3BsZSddID0gUHJvQnljb25bJ2FjY2VwdGVkQXR0ZW1wdHNQZW9wbGUnXTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgaWYgKGNvbmNlcHRUcmVlW2NdWyd0b3RhbEF0dGVtcHRzJ10gIT0gMCkNCiAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRSYXRlJ10gPSBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRBdHRlbXB0cyddIC8gY29uY2VwdFRyZWVbY11bJ3RvdGFsQXR0ZW1wdHMnXTsNCiAgICAgICAgZWxzZQ0KICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydhY2NlcHRlZFJhdGUnXSA9IDA7DQogICAgICAgIGlmIChwY291bnQgIT0gMCkgew0KICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydzY29yaW5nUmF0ZSddID0gY29uY2VwdFRyZWVbY11bJ3Njb3JpbmdSYXRlJ10gLyBwY291bnQ7DQogICAgICAgICAgY29uY2VwdFRyZWVbY11bJ2FjY3VyYWN5J10gPSBjb25jZXB0VHJlZVtjXVsnYWNjdXJhY3knXSAvIHBjb3VudDsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgbGV0IGxvZ0xlbiA9IDA7DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVudFN0dWRlbnQubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbGV0IHRlbXBQcm9TZXRTY29yZSA9IFtdOw0KICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGVudFByb1NldC5sZW5ndGg7IGorKykgew0KICAgICAgICAgIHRlbXBQcm9TZXRTY29yZS5wdXNoKHsNCiAgICAgICAgICAgICJpZCI6IGVudFByb1NldFtqXVsnaWQnXSwNCiAgICAgICAgICAgICJ0b3RhbFNjb3JlIjogZW50UHJvU2V0W2pdWyd0b3RhbFNjb3JlJ10sDQogICAgICAgICAgICAic2NvcmUiOiAwDQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgICBmb3IgKGxldCBsID0gMDsgbCA8IGVudFN0dWRlbnRbaV1bJ3BybyddLmxlbmd0aDsgbCsrKSB7DQogICAgICAgICAgbGV0IHByb0lkID0gZW50U3R1ZGVudFtpXVsncHJvJ11bbF1bJ2lkJ107DQogICAgICAgICAgbGV0IHByb1NldERhID0gcHJvYmxlbXNEYXRhLmZpbmQoZnVuY3Rpb24gKGVwKSB7IHJldHVybiBlcFsnaWQnXSA9PSBwcm9JZCB9KQ0KICAgICAgICAgIGlmIChwcm9TZXREYSAhPSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgIGxldCBwcm9TZXRJZCA9IHByb1NldERhWydwcm9ibGVtU2V0SWQnXTsNCiAgICAgICAgICAgIGxldCBiZXN0U2NvcmUgPSBlbnRTdHVkZW50W2ldWydwcm8nXVtsXVsnYmVzdCddWydzY29yZSddOw0KICAgICAgICAgICAgaWYgKGJlc3RTY29yZSA9PSBOYU4pIHsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0ZW1wUHJvU2V0U2NvcmUuZmluZChmdW5jdGlvbiAodHBzcykgeyByZXR1cm4gdHBzc1snaWQnXSA9PSBwcm9TZXRJZCB9KVsnc2NvcmUnXSArPSBiZXN0U2NvcmU7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVudFN0dWRlbnRbaV1bJ3Byb1NldFNjb3JlJ10gPSB0ZW1wUHJvU2V0U2NvcmU7DQogICAgICB9DQogICAgICBjb25zb2xlLmxvZyhwcm9ibGVtc0RhdGEsZW50UHJvU2V0LGVudFN0dWRlbnQpDQogICAgICBfdGhpcy5zdHVkZW50c0RhdGEgPSBlbnRTdHVkZW50Ow0KICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgiU3R1ZGVudCIsIF90aGlzLnN0dWRlbnRzRGF0YSk7DQogICAgICBfdGhpcy5wcm9TZXREYXRhID0gZW50UHJvU2V0Ow0KICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgicHJvU2V0IiwgX3RoaXMucHJvU2V0RGF0YSk7DQogICAgICBfdGhpcy5jb25jZXB0VHJlZSA9IGNvbmNlcHRUcmVlOw0KICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgiQ29uY2VwdFRyZWUiLCBfdGhpcy5jb25jZXB0VHJlZSk7DQogICAgICBfdGhpcy5wcm9ibGVtc0RhdGEgPSBwcm9ibGVtc0RhdGE7DQogICAgICBfdGhpcy4kYnVzLiRlbWl0KCJhbGxQcm9ibGVtIiwgX3RoaXMucHJvYmxlbXNEYXRhKTsNCiAgICAgIF90aGlzLmNhbGNOZXREYXRhKCk7DQogICAgfSwNCiAgICBjYWxTdHVkZW50YnlHcm91cCgpIHsNCiAgICAgIGNvbnN0IF90aGlzID0gdGhpczsNCiAgICAgIGxldCBlbnRTdHVkZW50ID0gW107DQogICAgICBsZXQgZW50Q29uY2VwdCA9IFtdOw0KICAgICAgbGV0IGVudFByb2JsZW0gPSBbXTsNCiAgICAgIGxldCBlbnRQcm9TZXQgPSBbXTsNCg0KICAgICAgbGV0IFNlbGVjdFN0dWRlbnRMaXN0ID0gX3RoaXMuU2VsZWN0U3R1ZGVudExpc3Q7DQoNCiAgICAgIGxldCBjb25jZXB0VHJlZSA9IHRvb2xzLmRlZXBDbG9uZShfdGhpcy5jb25jZXB0VHJlZSk7DQogICAgICBsZXQgcHJvYmxlbXNEYXRhID0gdG9vbHMuZGVlcENsb25lKF90aGlzLnByb2JsZW1zRGF0YSk7DQogICAgICBsZXQgc3VibWlzc2lvbnNEYXRhID0gdG9vbHMuZGVlcENsb25lKF90aGlzLnN1Ym1pc3Npb25zRGF0YSk7DQogICAgICBsZXQgcHJvYmxlbUNvbmNlcHREYXRhID0gdG9vbHMuZGVlcENsb25lKF90aGlzLnByb2JsZW1Db25jZXB0RGF0YSk7DQoNCiAgICAgIGNvbnNvbGUubG9nKFNlbGVjdFN0dWRlbnRMaXN0KTsNCiAgICAgIGxldCB0ZW1wU3R1ZGVudCA9IFtdOw0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBTZWxlY3RTdHVkZW50TGlzdC5sZW5ndGg7IGkrKykgew0KICAgICAgICBsZXQgY3Vybm9kZWxpc3QgPSBTZWxlY3RTdHVkZW50TGlzdFtpXTsNCiAgICAgICAgdGVtcFN0dWRlbnQucHVzaChbXSkNCiAgICAgIH0NCiAgICAgIA0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9ibGVtc0RhdGEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgcHJvYmxlbXNEYXRhW2ldWyd0b3RhbEF0dGVtcHRzJ10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ2FjY2VwdGVkQXR0ZW1wdHMnXSA9IDA7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsndG90YWxBdHRlbXB0c1Blb3BsZSddID0gMDsNCiAgICAgICAgcHJvYmxlbXNEYXRhW2ldWydhY2NlcHRlZEF0dGVtcHRzUGVvcGxlJ10gPSAwOw0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3RvdGFsU2NvcmUnXSA9IDA7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsnYWNjdXJhY3knXSA9IDA7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsnY29uQ291bnQnXSA9IDA7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsnY29uTGlzdCddID0gW107DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsnc2NvcmluZ1JhdGUnXSA9IDA7DQogICAgICAgIHByb2JsZW1zRGF0YVtpXVsnc3R1J10gPSB0b29scy5kZWVwQ2xvbmUodGVtcFN0dWRlbnQpOw0KICAgICAgICBsZXQgcHJvU2V0SWQgPSBwcm9ibGVtc0RhdGFbaV1bJ3Byb2JsZW1TZXRJZCddOw0KICAgICAgICBpZiAoZW50UHJvU2V0LmZpbmQoZnVuY3Rpb24gKGVzKSB7IHJldHVybiBlc1snaWQnXSA9PSBwcm9TZXRJZDsgfSkgPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgZW50UHJvU2V0LnB1c2goew0KICAgICAgICAgICAgImlkIjogcHJvU2V0SWQsDQogICAgICAgICAgICAicHJvIjogW10sDQogICAgICAgICAgICAndG90YWxTY29yZSc6IDAsDQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgICBsZXQgZVBTID0gZW50UHJvU2V0LmZpbmQoZnVuY3Rpb24gKGVzKSB7IHJldHVybiBlc1snaWQnXSA9PSBwcm9TZXRJZDsgfSk7DQogICAgICAgIGVQU1sncHJvJ10ucHVzaChwcm9ibGVtc0RhdGFbaV0pOw0KICAgICAgICBlUFNbJ3RvdGFsU2NvcmUnXSArPSBwcm9ibGVtc0RhdGFbaV1bJ3Njb3JlJ107DQogICAgICB9DQogICAgICBmb3IgKGxldCBjID0gMDsgYyA8IGNvbmNlcHRUcmVlLmxlbmd0aDsgYysrKSB7DQogICAgICAgIGNvbmNlcHRUcmVlW2NdWyd0b3RhbEF0dGVtcHRzJ10gPSAwOw0KICAgICAgICBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRBdHRlbXB0cyddID0gMDsNCiAgICAgICAgY29uY2VwdFRyZWVbY11bJ3RvdGFsU2NvcmUnXSA9IDA7DQogICAgICAgIGNvbmNlcHRUcmVlW2NdWydhY2N1cmFjeSddID0gMDsNCiAgICAgICAgY29uY2VwdFRyZWVbY11bJ3Byb0NvdW50J10gPSAwOw0KICAgICAgICBjb25jZXB0VHJlZVtjXVsnc2NvcmluZ1JhdGUnXSA9IDA7DQoNCiAgICAgIH0NCiAgICAgIGZvciAobGV0IGwgPSAwOyBsIDwgc3VibWlzc2lvbnNEYXRhLmxlbmd0aDsgbCsrKSB7DQogICAgICAgIGxldCB1c2VySWQgPSBzdWJtaXNzaW9uc0RhdGFbbF1bJ3VzZXInXVsndXNlciddWydpZCddOw0KDQogICAgICAgIC8vIGlmIChTZWxlY3RTdHVkZW50TGlzdC5pbmRleE9mKHVzZXJJZCkhPS0xKXsNCiAgICAgICAgICBpZiAoZW50U3R1ZGVudC5maW5kKGZ1bmN0aW9uIChlUykgeyByZXR1cm4gZVNbJ2lkJ10gPT0gdXNlcklkOyB9KSA9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgIGVudFN0dWRlbnQucHVzaCh7ICdpZCc6IHVzZXJJZCwgInBybyI6IFtdIH0pOw0KICAgICAgICAgIH0NCiAgICAgICAgICBsZXQgZW50U3R1ID0gZW50U3R1ZGVudC5maW5kKGZ1bmN0aW9uIChlUykgeyByZXR1cm4gZVNbJ2lkJ10gPT0gdXNlcklkOyB9KTsNCiAgICAgICAgICBsZXQgamFnZVByb2JsZW1Db250ZW50cyA9IHN1Ym1pc3Npb25zRGF0YVtsXVsnanVkZ2VSZXNwb25zZUNvbnRlbnRzJ107DQogICAgICAgICAgbGV0IHN1Ym1pdEF0ID0gc3VibWlzc2lvbnNEYXRhW2xdWydzdWJtaXRBdCddOw0KICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgamFnZVByb2JsZW1Db250ZW50cy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgbGV0IHByb2JsZW1JZCA9IGphZ2VQcm9ibGVtQ29udGVudHNbaV1bJ3Byb2JsZW1TZXRQcm9ibGVtSWQnXTsNCiAgICAgICAgICAgIGxldCBzY29yZSA9IGphZ2VQcm9ibGVtQ29udGVudHNbaV1bJ3Njb3JlJ107DQogICAgICAgICAgICBsZXQgcHJvU3RhdHVzID0gamFnZVByb2JsZW1Db250ZW50c1tpXVsnc3RhdHVzJ107DQoNCiAgICAgICAgICAgIGlmIChlbnRTdHVbJ3BybyddLmZpbmQoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHBbJ2lkJ10gPT0gcHJvYmxlbUlkOyB9KSA9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgZW50U3R1Wydwcm8nXS5wdXNoKHsgImlkIjogcHJvYmxlbUlkLCAnbG9nJzogW10sICdiZXN0JzogamFnZVByb2JsZW1Db250ZW50c1tpXSwgInRvdGFsQXR0ZW1wdHMiOiAwLCAidG90YWxTY29yZSI6IDAgfSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgbGV0IGVTUCA9IGVudFN0dVsncHJvJ10uZmluZChmdW5jdGlvbiAocCkgeyByZXR1cm4gcFsnaWQnXSA9PSBwcm9ibGVtSWQ7IH0pDQogICAgICAgICAgICAvLyBlU1BbJ2xvZyddLnB1c2goamFnZVByb2JsZW1Db250ZW50c1tpXSk7DQoNCiAgICAgICAgICAgIGlmIChlU1BbJ2Jlc3QnXVsnc2NvcmUnXSA8IHNjb3JlKSB7DQogICAgICAgICAgICAgIGVTUFsnYmVzdCddID0gamFnZVByb2JsZW1Db250ZW50c1tpXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGxldCBwcm8gPSBwcm9ibGVtc0RhdGEuZmluZChmdW5jdGlvbiAocCkgeyByZXR1cm4gcFsnaWQnXSA9PSBwcm9ibGVtSWQ7IH0pDQogICAgICAgICAgICBpZiAocHJvICE9IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAvLyBpZiAoU2VsZWN0U3R1ZGVudExpc3QuaW5kZXhPZih1c2VySWQpIT0tMSl7DQogICAgICAgICAgICAgIHByb1snc3R1J11bdXNlcklkXSA9MDsNCiAgICAgICAgICAgICAgcHJvWyd0b3RhbEF0dGVtcHRzJ10gKz0gMTsNCiAgICAgICAgICAgICAgZVNQWyd0b3RhbEF0dGVtcHRzJ10gKz0gMTsNCiAgICAgICAgICAgICAgaWYgKHByb1N0YXR1cyA9PSAnQUNDRVBURUQnKXsNCiAgICAgICAgICAgICAgICBwcm9bJ2FjY2VwdGVkQXR0ZW1wdHMnXSArPSAxOw0KICAgICAgICAgICAgICAgIHByb1snc3R1J11bdXNlcklkXSA9IDE7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgcHJvWyd0b3RhbFNjb3JlJ10gKz0gc2NvcmUgLyBwcm9bJ3Njb3JlJ107DQogICAgICAgICAgICAgIC8vIH0NCiAgICAgICAgICAgICAgZVNQWyd0b3RhbFNjb3JlJ10gKz0gc2NvcmUgLyBwcm9bJ3Njb3JlJ107DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICAvLyB9DQogICAgICB9DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2JsZW1Db25jZXB0RGF0YS5sZW5ndGg7IGkrKykgew0KICAgICAgICBsZXQgY29uY2VwdElkID0gcHJvYmxlbUNvbmNlcHREYXRhW2ldWydjb25jZXB0SWQnXTsNCiAgICAgICAgbGV0IHByb2JsZW1JZCA9IHByb2JsZW1Db25jZXB0RGF0YVtpXVsncHJvYmxlbSddOw0KICAgICAgICBsZXQgUHJvID0gcHJvYmxlbXNEYXRhLmZpbmQoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHBbJ2lkJ10gPT0gcHJvYmxlbUlkOyB9KTsNCiAgICAgICAgUHJvWydjb25Db3VudCddKys7DQogICAgICAgIFByb1snY29uTGlzdCddLnB1c2goY29uY2VwdElkKTsNCiAgICAgIH0NCg0KDQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2JsZW1zRGF0YS5sZW5ndGg7IGkrKykgew0KICAgICAgICBpZiAocHJvYmxlbXNEYXRhW2ldWyd0b3RhbEF0dGVtcHRzJ10gIT0gMCkgew0KICAgICAgICAgIHByb2JsZW1zRGF0YVtpXVsnc2NvcmluZ1JhdGUnXSA9IHByb2JsZW1zRGF0YVtpXVsndG90YWxTY29yZSddIC8gcHJvYmxlbXNEYXRhW2ldWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgcHJvYmxlbXNEYXRhW2ldWydhY2NlcHRlZFJhdGUnXSA9IHByb2JsZW1zRGF0YVtpXVsnYWNjZXB0ZWRBdHRlbXB0cyddIC8gcHJvYmxlbXNEYXRhW2ldWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgIH0NCiAgICAgICAgbGV0IG51bSA9IDA7DQogICAgICAgIGxldCBjdXIgPSAwOw0KICAgICAgICBsZXQgc3R1ID0gcHJvYmxlbXNEYXRhW2ldWydzdHUnXTsNCiAgICAgICAgT2JqZWN0LmtleXMoc3R1KS5mb3JFYWNoKChzKT0+ew0KICAgICAgICAgIGlmKHN0dVtzXT09MSl7DQogICAgICAgICAgICBudW0rKzsNCiAgICAgICAgICAgIGN1cisrOw0KICAgICAgICAgIH0NCiAgICAgICAgICBpZihzdHVbc109PTApew0KICAgICAgICAgICAgbnVtKys7DQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgICAvLyBmb3IgbCBpbiBlcFsnbG9nJ106DQogICAgICAgIC8vICAgICBudW0gKz0gMQ0KICAgICAgICAvLyAgICAgaWYgZXBbJ2xvZyddW2xdWzBdID09IGVwWydzY29yZSddOg0KICAgICAgICAvLyAgICAgICAgIGN1ciArPSAxDQogICAgICAgIC8vIGlmIGN1ciAhPSAwOg0KICAgICAgICBwcm9ibGVtc0RhdGFbaV1bJ3RvdGFsQXR0ZW1wdHNQZW9wbGUnXSA9IG51bTsNCiAgICAgICAgcHJvYmxlbXNEYXRhW2ldWydhY2NlcHRlZEF0dGVtcHRzUGVvcGxlJ10gPSBjdXI7DQogICAgICB9DQogICAgICBmb3IgKGxldCBjID0gMDsgYyA8IGNvbmNlcHRUcmVlLmxlbmd0aDsgYysrKSB7DQogICAgICAgIGxldCBwY291bnQgPSAwOw0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2JsZW1Db25jZXB0RGF0YS5sZW5ndGg7IGkrKykgew0KICAgICAgICAgIGxldCBjb25jZXB0SWQgPSBwcm9ibGVtQ29uY2VwdERhdGFbaV1bJ2NvbmNlcHRJZCddOw0KICAgICAgICAgIGlmIChjb25jZXB0SWQgPT0gY29uY2VwdFRyZWVbY11bJ2lkJ10pIHsNCiAgICAgICAgICAgIHBjb3VudCsrOw0KICAgICAgICAgICAgbGV0IHByb2JsZW1JZCA9IHByb2JsZW1Db25jZXB0RGF0YVtpXVsncHJvYmxlbSddOw0KICAgICAgICAgICAgbGV0IFByb0J5Y29uID0gcHJvYmxlbXNEYXRhLmZpbmQoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHBbJ2lkJ10gPT0gcHJvYmxlbUlkOyB9KTsNCiAgICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydwcm9Db3VudCddICs9IDE7DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsndG90YWxBdHRlbXB0cyddICs9IFByb0J5Y29uWyd0b3RhbEF0dGVtcHRzJ107DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRBdHRlbXB0cyddICs9IFByb0J5Y29uWydhY2NlcHRlZEF0dGVtcHRzJ107DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnc2NvcmluZ1JhdGUnXSArPSBQcm9CeWNvblsnc2NvcmluZ1JhdGUnXTsNCiAgICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydhY2N1cmFjeSddICs9IFByb0J5Y29uWydhY2N1cmFjeSddOw0KICAgICAgICAgICAgY29uY2VwdFRyZWVbY11bJ3RvdGFsQXR0ZW1wdHNQZW9wbGUnXSA9IFByb0J5Y29uWyd0b3RhbEF0dGVtcHRzUGVvcGxlJ107DQogICAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRBdHRlbXB0c1Blb3BsZSddID0gUHJvQnljb25bJ2FjY2VwdGVkQXR0ZW1wdHNQZW9wbGUnXTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgaWYgKGNvbmNlcHRUcmVlW2NdWyd0b3RhbEF0dGVtcHRzJ10gIT0gMCkNCiAgICAgICAgICBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRSYXRlJ10gPSBjb25jZXB0VHJlZVtjXVsnYWNjZXB0ZWRBdHRlbXB0cyddIC8gY29uY2VwdFRyZWVbY11bJ3RvdGFsQXR0ZW1wdHMnXTsNCiAgICAgICAgZWxzZQ0KICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydhY2NlcHRlZFJhdGUnXSA9IDA7DQogICAgICAgIGlmIChwY291bnQgIT0gMCkgew0KICAgICAgICAgIGNvbmNlcHRUcmVlW2NdWydzY29yaW5nUmF0ZSddID0gY29uY2VwdFRyZWVbY11bJ3Njb3JpbmdSYXRlJ10gLyBwY291bnQ7DQogICAgICAgICAgY29uY2VwdFRyZWVbY11bJ2FjY3VyYWN5J10gPSBjb25jZXB0VHJlZVtjXVsnYWNjdXJhY3knXSAvIHBjb3VudDsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgbGV0IGxvZ0xlbiA9IDA7DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVudFN0dWRlbnQubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbGV0IHRlbXBQcm9TZXRTY29yZSA9IFtdOw0KICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGVudFByb1NldC5sZW5ndGg7IGorKykgew0KICAgICAgICAgIHRlbXBQcm9TZXRTY29yZS5wdXNoKHsNCiAgICAgICAgICAgICJpZCI6IGVudFByb1NldFtqXVsnaWQnXSwNCiAgICAgICAgICAgICJ0b3RhbFNjb3JlIjogZW50UHJvU2V0W2pdWyd0b3RhbFNjb3JlJ10sDQogICAgICAgICAgICAic2NvcmUiOiAwDQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgICBmb3IgKGxldCBsID0gMDsgbCA8IGVudFN0dWRlbnRbaV1bJ3BybyddLmxlbmd0aDsgbCsrKSB7DQogICAgICAgICAgbGV0IHByb0lkID0gZW50U3R1ZGVudFtpXVsncHJvJ11bbF1bJ2lkJ107DQogICAgICAgICAgbGV0IHByb1NldERhID0gcHJvYmxlbXNEYXRhLmZpbmQoZnVuY3Rpb24gKGVwKSB7IHJldHVybiBlcFsnaWQnXSA9PSBwcm9JZCB9KQ0KICAgICAgICAgIGlmIChwcm9TZXREYSAhPSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgIGxldCBwcm9TZXRJZCA9IHByb1NldERhWydwcm9ibGVtU2V0SWQnXTsNCiAgICAgICAgICAgIGxldCBiZXN0U2NvcmUgPSBlbnRTdHVkZW50W2ldWydwcm8nXVtsXVsnYmVzdCddWydzY29yZSddOw0KICAgICAgICAgICAgaWYgKGJlc3RTY29yZSA9PSBOYU4pIHsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0ZW1wUHJvU2V0U2NvcmUuZmluZChmdW5jdGlvbiAodHBzcykgeyByZXR1cm4gdHBzc1snaWQnXSA9PSBwcm9TZXRJZCB9KVsnc2NvcmUnXSArPSBiZXN0U2NvcmU7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVudFN0dWRlbnRbaV1bJ3Byb1NldFNjb3JlJ10gPSB0ZW1wUHJvU2V0U2NvcmU7DQogICAgICB9DQogICAgICBfdGhpcy5zdHVkZW50c0RhdGEgPSBlbnRTdHVkZW50Ow0KICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgiU3R1ZGVudCIsIF90aGlzLnN0dWRlbnRzRGF0YSk7DQogICAgICBfdGhpcy5wcm9TZXREYXRhID0gZW50UHJvU2V0Ow0KICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgicHJvU2V0IiwgX3RoaXMucHJvU2V0RGF0YSk7DQogICAgICBfdGhpcy5jb25jZXB0VHJlZSA9IGNvbmNlcHRUcmVlOw0KICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgiQ29uY2VwdFRyZWUiLCBfdGhpcy5jb25jZXB0VHJlZSk7DQogICAgICBfdGhpcy5wcm9ibGVtc0RhdGEgPSBwcm9ibGVtc0RhdGE7DQogICAgICBfdGhpcy4kYnVzLiRlbWl0KCJhbGxQcm9ibGVtIiwgX3RoaXMucHJvYmxlbXNEYXRhKTsNCiAgICAgIF90aGlzLmNhbGNOZXREYXRhKCk7DQogICAgfSwNCiAgICBjYWxjTmV0RGF0YSgpIHsNCiAgICAgIGNvbnN0IF90aGlzID0gdGhpczsNCiAgICAgIGxldCBwcm9ibGVtRGF0YSA9IF90aGlzLnByb2JsZW1zRGF0YTsNCiAgICAgIGxldCBzdWJtaXNzaW9uc0RhdGEgPSBfdGhpcy5zdWJtaXNzaW9uc0RhdGE7DQogICAgICBsZXQgc3R1ZGVudHNEYXRhID0gX3RoaXMuc3R1ZGVudHNEYXRhOw0KICAgICAgbGV0IG1pblN1cHBvcnQgPSAwLjE7DQogICAgICBsZXQgbWluQ29uZmlkZW5jZSA9IDAuMTsNCiAgICAgIGxldCBmcmVxdWVudEl0ZW1zZXQyID0ge307DQogICAgICBsZXQgZnJlcXVlbnRJdGVtc2V0MSA9IHt9Ow0KICAgICAgbGV0IG5ldERhdGEgPSB7fTsNCiAgICAgIGxldCBzdHVkUHJvID0ge307DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2JsZW1EYXRhLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIGxldCBwcm9ibGVtSWQgPSBwcm9ibGVtRGF0YVtpXVsnaWQnXTsNCiAgICAgICAgZnJlcXVlbnRJdGVtc2V0MVtgJHtwcm9ibGVtSWR9YF0gPSAwOw0KICAgICAgICBzdHVkZW50c0RhdGEuZm9yRWFjaCgocykgPT4gew0KICAgICAgICAgIC8vIGlmKHN0dWRlbnRMb2cuZmluZChmdW5jdGlvbihzZCl7cmV0dXJuIHNkWydpZCddID09IHNbJ2lkJ107fSkpew0KICAgICAgICAgIC8vICAgc3R1ZGVudExvZy5wdXNoKHsiaWQiOnNbJ2lkJ10sInBybyI6W119KTsNCiAgICAgICAgICAvLyB9DQogICAgICAgICAgaWYoc3R1ZFByb1tzWydpZCddXSA9PSB1bmRlZmluZWQpew0KICAgICAgICAgICAgc3R1ZFByb1tzWydpZCddXSA9IHt9DQogICAgICAgICAgfQ0KICAgICAgICAgIC8vIGxldCBzdCA9IHN0dWRlbnRMb2cuZmluZChmdW5jdGlvbihzZCl7cmV0dXJuIHNkWydpZCddID09IHNbJ2lkJ107fSk7DQogICAgICAgICAgbGV0IHByb2JsZW1JID0gc1sncHJvJ10uZmluZChmdW5jdGlvbiAocHJvKSB7IHJldHVybiBwcm9bJ2lkJ10gPT0gcHJvYmxlbUlkIH0pOw0KICAgICAgICAgIGlmIChwcm9ibGVtSSA9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgZnJlcXVlbnRJdGVtc2V0MVtgJHtwcm9ibGVtSWR9YF0rKzsNCiAgICAgICAgICAgICAgc3R1ZFByb1tzWydpZCddXVtwcm9ibGVtSWRdID0gJzAnOw0KICAgICAgICAgICAgICBzWydwcm8nXS5wdXNoKHsNCiAgICAgICAgICAgICAgICAiaWQiOnByb2JsZW1JZCwNCiAgICAgICAgICAgICAgICAibG9nIjpbXSwiYmVzdCI6eyJzdGF0dXMiOiJub25lIiwic2NvcmUiOjB9DQogICAgICAgICAgICAgIH0pDQogICAgICAgICAgfQ0KICAgICAgICAgIGVsc2V7DQogICAgICAgICAgICBzdHVkUHJvW3NbJ2lkJ11dW3Byb2JsZW1JZF0gPSBwcm9ibGVtSVsnYmVzdCddWydzY29yZSddOw0KICAgICAgICAgICAgaWYgKHByb2JsZW1JWydzdGF0dXMnXSAhPSAnQUNDRVBURUQnKSB7DQogICAgICAgICAgICAgIGZyZXF1ZW50SXRlbXNldDFbYCR7cHJvYmxlbUlkfWBdKys7DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgfQ0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9ibGVtRGF0YS5sZW5ndGggLSAxOyBpKyspIHsNCiAgICAgICAgbGV0IHByb2JsZW1JSWQgPSBwcm9ibGVtRGF0YVtpXVsnaWQnXTsNCiAgICAgICAgbGV0IHByb2JsZW1TY29yZSA9IHByb2JsZW1EYXRhW2ldWydzY29yZSddDQogICAgICAgIGlmIChmcmVxdWVudEl0ZW1zZXQxW2Ake3Byb2JsZW1JSWR9YF0gPiAwKSB7DQogICAgICAgICAgZm9yIChsZXQgaiA9IGkgKyAxOyBqIDwgcHJvYmxlbURhdGEubGVuZ3RoOyBqKyspIHsNCiAgICAgICAgICAgIGxldCBwcm9ibGVtSklkID0gcHJvYmxlbURhdGFbal1bJ2lkJ107DQogICAgICAgICAgICBmcmVxdWVudEl0ZW1zZXQyW2Ake3Byb2JsZW1JSWR9XyR7cHJvYmxlbUpJZH1gXSA9IDA7DQogICAgICAgICAgICBmcmVxdWVudEl0ZW1zZXQyW2Ake3Byb2JsZW1KSWR9XyR7cHJvYmxlbUlJZH1gXSA9IDA7DQogICAgICAgICAgICBsZXQgc3VwcG9ydENvdW50ID0gMDsNCiAgICAgICAgICAgIGlmIChmcmVxdWVudEl0ZW1zZXQxW2Ake3Byb2JsZW1KSWR9YF0gPiAwKSB7DQogICAgICAgICAgICAgIHN0dWRlbnRzRGF0YS5mb3JFYWNoKChzKSA9PiB7DQogICAgICAgICAgICAgICAgbGV0IHByb2JsZW1JID0gc3R1ZFByb1tzWydpZCddXVtwcm9ibGVtSUlkXTsNCiAgICAgICAgICAgICAgICBsZXQgcHJvYmxlbUogPSBzdHVkUHJvW3NbJ2lkJ11dW3Byb2JsZW1KSWRdOw0KICAgICAgICAgICAgICAgIGlmICgocHJvYmxlbUk8cHJvYmxlbVNjb3JlKSAmJiAocHJvYmxlbUogPHByb2JsZW1TY29yZSkpIHsNCiAgICAgICAgICAgICAgICAgIGZyZXF1ZW50SXRlbXNldDJbYCR7cHJvYmxlbUlJZH1fJHtwcm9ibGVtSklkfWBdKys7DQogICAgICAgICAgICAgICAgICBmcmVxdWVudEl0ZW1zZXQyW2Ake3Byb2JsZW1KSWR9XyR7cHJvYmxlbUlJZH1gXSsrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgbmV0RGF0YVtgJHtwcm9ibGVtSUlkfV8ke3Byb2JsZW1KSWR9YF0gPSBmcmVxdWVudEl0ZW1zZXQyW2Ake3Byb2JsZW1JSWR9XyR7cHJvYmxlbUpJZH1gXSAvIGZyZXF1ZW50SXRlbXNldDFbYCR7cHJvYmxlbUlJZH1gXTsNCiAgICAgICAgICAgICAgbmV0RGF0YVtgJHtwcm9ibGVtSklkfV8ke3Byb2JsZW1JSWR9YF0gPSBmcmVxdWVudEl0ZW1zZXQyW2Ake3Byb2JsZW1KSWR9XyR7cHJvYmxlbUlJZH1gXSAvIGZyZXF1ZW50SXRlbXNldDFbYCR7cHJvYmxlbUpJZH1gXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIF90aGlzLm5ldERhdGEgPSBuZXREYXRhOw0KICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgibmV0RGF0YSIsbmV0RGF0YSk7DQogICAgfSwNCiAgICBnZXRBbGxEYXRhKCkgew0KICAgICAgY29uc3QgX3RoaXMgPSB0aGlzOw0KICAgICAgdGhpcy5nZXRDb25jZXB0VHJlZSgpOw0KICAgICAgdGhpcy5nZXRQcm9ibGVtcygpOw0KICAgICAgdGhpcy5nZXRQcm9ibGVtQ29uY2VwdCgpOw0KICAgICAgdGhpcy5nZXRTdWJtaXNzaW9ucygpOw0KICAgIH0sDQogICAgZ2V0U2VsZWN0RW50KHZhbCkgew0KICAgICAgdGhpcy5zZWxlY3RFbnRJZCA9IHZhbDsNCiAgICB9LA0KICAgIGdldFRpbWVEdXIodmFsdWUpIHsNCiAgICAgIHRoaXMudGltZUR1ciA9IHZhbHVlDQogICAgfSwNCiAgICBnZXRUb29sU3RhdGUodmFsKSB7DQogICAgICB0aGlzLnRvb2xzU3RhdGUgPSB2YWw7DQogICAgfSwNCiAgICAvLyBnZXRUb29sU3RhdGU6ew0KICAgIC8vICAgZGVlcDp0cnVlLA0KICAgIC8vICAgaGFuZGxlcih2YWwpIHsNCiAgICAvLyAgICAgY29uc29sZS5sb2codmFsKQ0KICAgIC8vICAgdGhpcy50b29sc1N0YXRlID0gdmFsOw0KICAgIC8vIH0NCiAgICAvLyB9LA0KICAgIGdldFNob3dMYWJlbFN0YXRlKHZhbHVlKSB7DQogICAgICB0aGlzLnNob3dMYWJlbFN0YXRlID0gdmFsdWUNCiAgICB9DQogICAgLA0KDQogICAgY2xpY2tIYW5kbGVyKCkgew0KICAgICAgY29uc29sZS5sb2coMTExMTExKTsNCiAgICB9LA0KICB9LA0KICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7DQogICAgdmFyIF90aGlzID0gdGhpczsNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICBjb25zdCBfdGhpcyA9IHRoaXM7DQogICAgdGhpcy4kZWwuc3R5bGUuc2V0UHJvcGVydHkoIi0taGVpZ2h0U3R5bGUiLCB0aGlzLndpbmRvd0hlaWdodCArICJweCIpOw0KICAgIHRoaXMuc2hvd1ZpZGVvID0gdHJ1ZTsNCiAgICB0aGlzLiRidXMuJGVtaXQoImF0dHJDb2xvckxpc3QiLCBfdGhpcy5hdHRyQ29sb3JMaXN0KTsNCiAgICB0aGlzLiRidXMuJGVtaXQoImF0dHJDb2xvckxpZ2h0TGlzdCIsIF90aGlzLmF0dHJDb2xvckxpZ2h0TGlzdCk7DQogICAgdGhpcy4kYnVzLiRlbWl0KCJzdHVDb2xvckxpc3QiLCBfdGhpcy5zdHVDb2xvckxpc3QpOw0KICAgIHRoaXMuJGJ1cy4kZW1pdCgiZ3JvdXBEYXRhIiwgX3RoaXMuZ3JvdXBEYXRhKTsNCiAgICB0aGlzLnRvb2xTdGF0ZSA9IHsNCiAgICAgICJhZGRSZWwiOiBmYWxzZSwNCiAgICAgICJhZGRSZWxNYWluIjogZmFsc2UsDQogICAgICAiZGVsUmVsIjpmYWxzZSwNCiAgICB9DQogICAgdGhpcy5nZXRBbGxEYXRhKCk7DQogICAgdGhpcy4kYnVzLiRvbignVXBkYXRhX1Byb19Db24nLCAodmFsKSA9PiB7DQogICAgICBfdGhpcy5wcm9ibGVtQ29uY2VwdERhdGEgPSB2YWw7DQogICAgICBfdGhpcy5jYWxTdHVkZW50KCk7DQogICAgfSk7DQoNCiAgICB0aGlzLiRidXMuJG9uKCdyZW5ldycsICh2YWwpID0+IHsNCiAgICAgIGlmKHZhbCl7DQogICAgICAgIF90aGlzLmdldFByb2JsZW1Db25jZXB0KCk7DQogICAgICAgICAgX3RoaXMuY2FsU3R1ZGVudCgpOw0KICAgICAgfQ0KICAgIH0pOw0KICAgIHRoaXMuJGJ1cy4kb24oJ1NlbGVjdGVkU3R1JywgKHZhbCkgPT4gew0KICAgICAgX3RoaXMuU2VsZWN0U3R1ZGVudExpc3QgPSB2YWw7DQogICAgICAvLyBfdGhpcy5jYWxTdHVkZW50YnlHcm91cCgpOw0KICAgICAgX3RoaXMuY2FsU3R1ZGVudCgpOw0KICAgIH0pOw0KICAgIC8vIHRoaXMuZ2V0RGF0YSgpOw0KICB9LA0KICBiZWZvcmVEZXN0cm95KCkgew0KICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTsNCiAgfQ0KfTsNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/Home","sourcesContent":["<template>\r\n  <div id=\"root\">\r\n    <!-- <button1 ref=\"button1\"></button1>\r\n    <button v-on:click=\"clickHandler\">按钮</button> -->\r\n    <!-- <svg width=\"1200\" height=\"1000\"></svg> -->\r\n\r\n    <div id=\"Container\">\r\n      <!-- <div id=\"Container-back\"></div> -->\r\n      <div id=\"head\">\r\n\r\n        <!-- <Head></Head> -->\r\n      </div>\r\n      <div id=\"allBody\">\r\n        <div id=\"controlPanel\" class=\"panel\">\r\n          <ControlPanel @getToolState=\"getToolState\"></ControlPanel>\r\n        </div>\r\n        <div id=\"procPanel\" class=\"panel\">\r\n          <ProcPanel></ProcPanel>\r\n        </div>\r\n        <div id=\"graphContainer\" v-show=\"showGraph\" class=\"panel\">\r\n          <Graph :toolsState=\"toolsState\"></Graph>\r\n        </div>\r\n        <!-- <div id=\"overviewPanel\" class=\"panel\">\r\n          <OverviewPanel></OverviewPanel>\r\n        </div> -->\r\n        <!-- <transition name=\"sceneTran\"> -->\r\n\r\n        <!-- <div id=\"editPanel\" class=\"panel\"  v-if='showEdit==true'>\r\n          <EditPanel></EditPanel>\r\n        </div> -->\r\n        <div id=\"scatterPanel\" class=\"panel\">\r\n          <Scatter></Scatter>\r\n        </div>\r\n        <div id=\"netPPanel\" class=\"panel\">\r\n          <NetPPanel></NetPPanel>\r\n        </div>\r\n        <!-- </transition> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Head from \"@/components/Header/index.vue\";\r\nimport Graph from '@/components/Graph/index.vue';\r\nimport Scatter from '@/components/Scatter/index.vue';\r\nimport ProcPanel from '@/components/ProblemContentPanel/index.vue';\r\n\r\nimport ControlPanel from '@/components/ControlPanel/index.vue'\r\nimport NetPPanel from '@/components/NetProblemPanel/index.vue';\r\nimport GroupJson from \"@/assets/json/group.json\";\r\nimport SetJson from \"@/assets/json/quz.json\";\r\nimport tools from \"@/utils/tools.js\";\r\nexport default {\r\n  components: { Head, Graph, Scatter, ProcPanel, NetPPanel, ControlPanel },\r\n  /* eslint-disable no-unused-vars */\r\n  data() {\r\n    return {\r\n      problemsData: [],\r\n      submissionsData: [],\r\n      groupData: GroupJson,\r\n      setTimeData: SetJson,\r\n      netData: [],\r\n      problemRelByConcept: [],\r\n      problemListByConcept: [],\r\n      studentsData: [],\r\n      conceptsData: [],\r\n      SelectStudentList: [],\r\n      conceptTree: [],\r\n      proSetData: [],\r\n      problemConceptData: [],\r\n      userProblemData: [],\r\n      toolsState: {},\r\n      timer: null,\r\n      showVideo: true,\r\n      showGraph: true,\r\n      showEdit: false,\r\n      selectEntId: \"0\",\r\n      selectEnt: \"0\",\r\n      toolState: {},\r\n      timeDur: \"\",\r\n      videoTime: 0,\r\n      windowWidth: document.documentElement.clientWidth, //实时屏幕宽度\r\n      windowHeight: document.documentElement.clientHeight, //实时屏幕高度\r\n      attrColorList:[\r\n        \"rgb(254, 33, 79)\",\r\n        \"rgb(115, 230, 163)\",\r\n        \"rgb(250, 210, 50)\",\r\n        \"rgb(255, 120, 90)\",\r\n        \"rgb(255, 159, 28)\",\r\n        \"rgb(6, 214, 160)\",\r\n        \"rgb(125, 98, 211)\",\r\n      ],\r\n      // attrColorList:[\r\n      //   \"rgb(253, 174, 134)\",\r\n      //   \"rgb(115, 230, 163)\",\r\n      //   \"rgb(255, 233, 141)\",\r\n      //   \"rgb(56, 191, 201)\",\r\n      //   \"rgb(255, 122, 125)\",\r\n      //   \"rgb(224, 207, 243)\",\r\n      // ],\r\n      attrColorLightList:[\r\n        \"rgb(253, 174, 134)\",\r\n        \"rgb(255, 184, 240)\",\r\n        \"rgb(255, 173, 159)\",\r\n        \"rgb(255, 208, 133)\",\r\n        \"rgb(145, 226, 199)\",\r\n        \"rgb(167, 158, 221)\",\r\n      ],\r\n      stuColorList:[\r\n        \"rgb(253, 174, 134)\",\r\n        \"rgb(203, 64, 156)\",\r\n        \"rgb(85, 6, 134)\",\r\n        \"rgb(252, 171, 1)\",\r\n        \"rgb(73, 178, 101)\",\r\n      ],\r\n      // stuColorList:[\r\n      //   \"rgb(254, 33, 79)\",\r\n      //   \"rgb(252, 171, 1)\",\r\n      //   \"rgb(85, 6, 134)\",\r\n      //   \"rgb(203, 64, 156)\",\r\n      //   \"rgb(73, 178, 101)\",\r\n      // ],\r\n      mcolor: [\r\n        \"rgb(255,60,60)\",\r\n        \"rgb(155,20,100)\",\r\n        \"rgb(255,83,255)\",\r\n        \"rgb(200,100,50)\",\r\n        \"rgb(235,135,162)\",\r\n        \"rgb(200,200,102)\",\r\n        \"rgb(255,178,101)\",\r\n        \"rgb(63,151,134)\",\r\n        \"rgb(83,155,255)\",\r\n        \"rgb(50,200,120)\",\r\n        \"rgb(2,50,200)\",\r\n        \"rgb(0,122,244)\",\r\n        \"rgb(150,122,244)\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      mLigntcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      marge: {\r\n        top: 6,\r\n        right: 10,\r\n        bottom: 16,\r\n        left: 6,\r\n      },\r\n      barType: \"Teaching\",\r\n    };\r\n  },\r\n  watch: {\r\n    toolState(val) {\r\n      if (val == 'edit')\r\n        this.showEdit = true;\r\n      else\r\n        this.showEdit = false;\r\n    },\r\n    selectEnt(val) {\r\n      this.selectEntId = val;\r\n    },\r\n    timeDur() {\r\n    },\r\n    cube_data() {\r\n      this.$nextTick(() => { });\r\n    },\r\n    cluData() {\r\n      this.$nextTick(() => {\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    getProblems() {\r\n      const _this = this;\r\n      let data = [];\r\n      this.$http\r\n        // .get(\"/api/problem/allProblem\", { params: { name: \"12345\" } }, {})\r\n        .get(\"/api/problem/allProblem\", {}, {})\r\n        .then((response) => {\r\n          _this.problemsData = response.body;\r\n        });\r\n    },\r\n    getConcept() {\r\n      const _this = this;\r\n      this.$http\r\n        .get(\"/api/concept/allConcept\", {}, {})\r\n        .then((response) => {\r\n          _this.conceptsData = response.body;\r\n          _this.$bus.$emit(\"Concept\", _this.conceptsData);\r\n        });\r\n    },\r\n    getConceptTree() {\r\n      const _this = this;\r\n      this.$http\r\n        .get(\"/api/concept/conceptTree\", {}, {})\r\n        .then((response) => {\r\n          _this.conceptTree = response.body;\r\n          _this.$bus.$emit(\"ConceptTree\", _this.conceptTree);\r\n        });\r\n    },\r\n    getSubmissions() {\r\n      const _this = this;\r\n      this.$http.get(\"/api/Submission/allLog\", {}, {})\r\n        .then((response) => {\r\n          _this.submissionsData = response.body;\r\n          _this.$bus.$emit(\"Submission\", _this.submissionsData);\r\n          _this.calStudent();\r\n          _this.calcNetData();\r\n        });\r\n    },\r\n    getProblemConcept() {\r\n      const _this = this;\r\n      this.$http.get(\"/api/conceptProblem/allRel\", {}, {})\r\n        .then((response) => {\r\n          _this.problemConceptData = response.body;\r\n          _this.$bus.$emit(\"Pro_Con\", _this.problemConceptData);\r\n        });\r\n    },\r\n    getStudents() {\r\n      const _this = this;\r\n      this.$http.get(\"/api/student/allStudent\", {}, {})\r\n        .then((response) => {\r\n          _this.studentsData = response.body;\r\n        });\r\n    },\r\n    calStudent() {\r\n      const _this = this;\r\n      let entStudent = [];\r\n      let entConcept = [];\r\n      let entProblem = [];\r\n      let entProSet = [];\r\n\r\n      let SelectStudentList = _this.SelectStudentList;\r\n      let setTimeData = _this.setTimeData;\r\n\r\n      let conceptTree = tools.deepClone(_this.conceptTree);\r\n      let problemsData = tools.deepClone(_this.problemsData);\r\n      let submissionsData = tools.deepClone(_this.submissionsData);\r\n      let problemConceptData = tools.deepClone(_this.problemConceptData);\r\n      \r\n      let groupData = _this.groupData;\r\n\r\n      console.log(SelectStudentList);\r\n\r\n      let valetemp = {\r\n        'totalTimeDur':0,\r\n        'timeDur':0,\r\n        'totalAttempts':0,\r\n        'acceptedAttempts':0,\r\n        'totalAttemptsPeople':0,\r\n        'acceptedAttemptsPeople':0,\r\n        'totalScore':0,\r\n        'accuracy':0,\r\n        'conCount':0,\r\n        'gvjg':-1,\r\n        'conList':[],\r\n        'scoringRate':0,\r\n        'stu':[]\r\n      }\r\n        let tempStudent = [];\r\n        let tempAllStudent = {};\r\n        let StudentMap = {};\r\n      for (let i = 0; i < groupData.length; i++) {\r\n        let uid = groupData[i]['id'];\r\n        let tp = tools.deepClone(valetemp);\r\n        tp['id'] = uid;\r\n        tempAllStudent[uid] = (tp);\r\n      }\r\n      valetemp['stuData']= tools.deepClone(tempAllStudent);\r\n      setTimeData.forEach(set=>{\r\n        set['timeSt'] = tools.time2mktime(set['time']);\r\n      })\r\n      for (let i = 0; i < SelectStudentList.length; i++) {\r\n          for(let j=0;j<SelectStudentList[i].length;j++){\r\n              StudentMap[SelectStudentList[i][j]] = i;\r\n          }\r\n          tempStudent.push(tools.deepClone(valetemp));\r\n      }\r\n      for (let i = 0; i < problemsData.length; i++) {\r\n        // let id = problemsData[i]['id'];\r\n        // problemsData[i] = tools.deepClone(valetemp);\r\n        // problemsData[i]['id'] = id;\r\n        problemsData[i]['totalTimeDur'] = 0;\r\n        problemsData[i]['timeDur'] = 0;\r\n        problemsData[i]['totalAttempts'] = 0;\r\n        problemsData[i]['acceptedAttempts'] = 0;\r\n        problemsData[i]['totalAttemptsPeople'] = 0;\r\n        problemsData[i]['acceptedAttemptsPeople'] = 0;\r\n        problemsData[i]['totalScore'] = 0;\r\n        problemsData[i]['accuracy'] = 0;\r\n        problemsData[i]['conCount'] = 0;\r\n        problemsData[i]['conList'] = [];\r\n        problemsData[i]['scoringRate'] = 0;\r\n        problemsData[i]['groupVal'] = tools.deepClone(tempStudent);\r\n        problemsData[i]['stu'] = [];\r\n        problemsData[i]['stuData'] = tools.deepClone(tempAllStudent);\r\n        let proSetId = problemsData[i]['problemSetId'];\r\n\r\n        let protime = setTimeData.find(function(s){return s['problemSetId'] == proSetId})['timeSt'];\r\n\r\n        problemsData[i]['timeSp'] = protime;\r\n        \r\n        if (entProSet.find(function (es) { return es['id'] == proSetId; }) == undefined) {\r\n          entProSet.push({\r\n            \"id\": proSetId,\r\n            \"pro\": [],\r\n            'totalScore': 0,\r\n          })\r\n        }\r\n        let ePS = entProSet.find(function (es) { return es['id'] == proSetId; });\r\n        ePS['pro'].push(problemsData[i]);\r\n        ePS['totalScore'] += problemsData[i]['score'];\r\n      }\r\n      for (let c = 0; c < conceptTree.length; c++) {\r\n        conceptTree[c]['timeDur'] = 0;\r\n        conceptTree[c]['totalAttempts'] = 0;\r\n        conceptTree[c]['acceptedAttempts'] = 0;\r\n        conceptTree[c]['totalScore'] = 0;\r\n        conceptTree[c]['accuracy'] = 0;\r\n        conceptTree[c]['proCount'] = 0;\r\n        conceptTree[c]['scoringRate'] = 0;\r\n        conceptTree[c]['groupVal'] = tools.deepClone(tempStudent);\r\n\r\n      }\r\n      for (let l = 0; l < submissionsData.length; l++) {\r\n        let userId = submissionsData[l]['user']['user']['id'];\r\n\r\n        // if (SelectStudentList.indexOf(userId)!=-1){\r\n          if (entStudent.find(function (eS) { return eS['id'] == userId; }) == undefined) {\r\n            entStudent.push({ 'id': userId, \"pro\": [] });\r\n          }\r\n          let entStu = entStudent.find(function (eS) { return eS['id'] == userId; });\r\n          let jageProblemContents = submissionsData[l]['judgeResponseContents'];\r\n          let submitAt = submissionsData[l]['submitAt'];\r\n          \r\n          for (let i = 0; i < jageProblemContents.length; i++) {\r\n            let problemId = jageProblemContents[i]['problemSetProblemId'];\r\n            let score = jageProblemContents[i]['score'];\r\n            let proStatus = jageProblemContents[i]['status'];\r\n\r\n            if (entStu['pro'].find(function (p) { return p['id'] == problemId; }) == undefined) {\r\n              entStu['pro'].push({ \"id\": problemId, 'log': [], 'best': jageProblemContents[i], \"totalAttempts\": 0, \"totalScore\": 0 })\r\n            }\r\n            \r\n            let eSP = entStu['pro'].find(function (p) { return p['id'] == problemId; })\r\n            // eSP['log'].push(jageProblemContents[i]);\r\n\r\n            if (eSP['best']['score'] < score) {\r\n              eSP['best'] = jageProblemContents[i];\r\n            }\r\n            let pro = problemsData.find(function (p) { return p['id'] == problemId; })\r\n            if (pro != undefined) {\r\n              let timeSp = pro['timeSp']\r\n              // if (SelectStudentList.indexOf(userId)!=-1){\r\n                // console.log(StudentMap[userId],pro['groupVal'])\r\n              if(StudentMap[userId]!=undefined){\r\n                pro['groupVal'][StudentMap[userId]]['stuData'][userId]['totalAttempts'] += 1;\r\n                pro['groupVal'][StudentMap[userId]]['stuData'][userId]['gvjg'] = 1;\r\n                pro['groupVal'][StudentMap[userId]]['stu'][userId] = 0;\r\n                pro['groupVal'][StudentMap[userId]]['totalAttempts'] +=1;\r\n                pro['groupVal'][StudentMap[userId]]['totalTimeDur'] += tools.time2mktime(submitAt) - timeSp;\r\n                if (proStatus == 'ACCEPTED'){\r\n                  pro['groupVal'][StudentMap[userId]]['acceptedAttempts'] += 1;\r\n                  pro['groupVal'][StudentMap[userId]]['stuData'][userId]['acceptedAttempts'] += 1;\r\n                  pro['groupVal'][StudentMap[userId]]['stu'][userId] = 1;\r\n                }\r\n                pro['groupVal'][StudentMap[userId]]['totalScore'] += score / pro['score'];\r\n                \r\n                pro['groupVal'][StudentMap[userId]]['stuData'][userId]['totalScore'] += score / pro['score'];\r\n              }\r\n              pro['stuData'][userId]['totalAttempts'] += 1;\r\n              pro['stuData'][userId]['totalTimeDur'] += tools.time2mktime(submitAt) - timeSp;\r\n\r\n              pro['stu'][userId] =0;\r\n              pro['totalAttempts'] += 1;\r\n              pro['totalTimeDur'] += tools.time2mktime(submitAt) - timeSp;\r\n\r\n              eSP['totalAttempts'] += 1;\r\n              if (proStatus == 'ACCEPTED'){\r\n                \r\n                pro['acceptedAttempts'] += 1;\r\n                pro['stu'][userId] = 1;\r\n\r\n                pro['stuData'][userId]['acceptedAttempts'] += 1;\r\n\r\n              }\r\n              pro['totalScore'] += score / pro['score'];\r\n              \r\n              pro['stuData'][userId]['totalScore'] += score / pro['score'];\r\n              // }\r\n              eSP['totalScore'] += score / pro['score'];\r\n            }\r\n          }\r\n        // }\r\n      }\r\n      for (let i = 0; i < problemConceptData.length; i++) {\r\n        let conceptId = problemConceptData[i]['conceptId'];\r\n        let problemId = problemConceptData[i]['problem'];\r\n        let Pro = problemsData.find(function (p) { return p['id'] == problemId; });\r\n        Pro['conCount']++;\r\n        Pro['conList'].push(conceptId);\r\n      }\r\n\r\n\r\n      for (let i = 0; i < problemsData.length; i++) {\r\n        if (problemsData[i]['totalAttempts'] != 0) {\r\n          problemsData[i]['scoringRate'] = problemsData[i]['totalScore'] / problemsData[i]['totalAttempts'];\r\n          problemsData[i]['acceptedRate'] = problemsData[i]['acceptedAttempts'] / problemsData[i]['totalAttempts'];\r\n          problemsData[i]['timeDur'] = problemsData[i]['totalTimeDur'] / problemsData[i]['totalAttempts'];\r\n        }\r\n        let groupVal = problemsData[i]['groupVal'];\r\n        \r\n        for (let j = 0; j < groupVal.length; j++) {\r\n          if (groupVal[j]['totalAttempts'] != 0) {\r\n            groupVal[j]['scoringRate'] = groupVal[j]['totalScore'] / groupVal[j]['totalAttempts'];\r\n            groupVal[j]['acceptedRate'] = groupVal[j]['acceptedAttempts'] / groupVal[j]['totalAttempts'];\r\n            groupVal[j]['timeDur'] = groupVal[j]['totalTimeDur'] / groupVal[j]['totalAttempts'];\r\n\r\n            let stuData = groupVal[j]['stuData'];\r\n            Object.keys(stuData).forEach((s) => {\r\n\r\n              if (stuData[s]['totalAttempts'] != 0) {\r\n                stuData[s]['scoringRate'] = stuData[s]['totalScore'] / stuData[s]['totalAttempts'];\r\n                stuData[s]['acceptedRate'] = stuData[s]['acceptedAttempts'] / stuData[s]['totalAttempts'];\r\n                // stuData[s]['timeDur'] = stuData[s]['totalTimeDur'] / stuData[s]['totalAttempts'];\r\n              }\r\n            })\r\n          }\r\n        }\r\n\r\n        let stuData = problemsData[i]['stuData'];\r\n        Object.keys(stuData).forEach((s)=>{\r\n            \r\n          if (stuData[s]['totalAttempts'] != 0) {\r\n            stuData[s]['scoringRate'] = stuData[s]['totalScore'] / stuData[s]['totalAttempts'];\r\n            stuData[s]['acceptedRate'] = stuData[s]['acceptedAttempts'] / stuData[s]['totalAttempts'];\r\n            stuData[s]['timeDur'] = stuData[s]['totalTimeDur'] / stuData[s]['totalAttempts'];\r\n          }\r\n        })\r\n        \r\n        let num = 0;\r\n        let cur = 0;\r\n        let stu = problemsData[i]['stu'];\r\n        Object.keys(stu).forEach((s)=>{\r\n          if(stu[s]==1){\r\n            num++;\r\n            cur++;\r\n          }\r\n          if(stu[s]==0){\r\n            num++;\r\n          }\r\n        })\r\n        // for l in ep['log']:\r\n        //     num += 1\r\n        //     if ep['log'][l][0] == ep['score']:\r\n        //         cur += 1\r\n        // if cur != 0:\r\n        problemsData[i]['totalAttemptsPeople'] = num;\r\n        problemsData[i]['acceptedAttemptsPeople'] = cur;\r\n      }\r\n      for (let c = 0; c < conceptTree.length; c++) {\r\n        let pcount = 0;\r\n        for (let i = 0; i < problemConceptData.length; i++) {\r\n          let conceptId = problemConceptData[i]['conceptId'];\r\n          if (conceptId == conceptTree[c]['id']) {\r\n            pcount++;\r\n            let problemId = problemConceptData[i]['problem'];\r\n            let ProBycon = problemsData.find(function (p) { return p['id'] == problemId; });\r\n            conceptTree[c]['proCount'] += 1;\r\n            conceptTree[c]['totalAttempts'] += ProBycon['totalAttempts'];\r\n            conceptTree[c]['acceptedAttempts'] += ProBycon['acceptedAttempts'];\r\n            conceptTree[c]['scoringRate'] += ProBycon['scoringRate'];\r\n            conceptTree[c]['accuracy'] += ProBycon['accuracy'];\r\n            conceptTree[c]['totalAttemptsPeople'] = ProBycon['totalAttemptsPeople'];\r\n            conceptTree[c]['acceptedAttemptsPeople'] = ProBycon['acceptedAttemptsPeople'];\r\n          }\r\n        }\r\n        if (conceptTree[c]['totalAttempts'] != 0)\r\n          conceptTree[c]['acceptedRate'] = conceptTree[c]['acceptedAttempts'] / conceptTree[c]['totalAttempts'];\r\n        else\r\n          conceptTree[c]['acceptedRate'] = 0;\r\n        if (pcount != 0) {\r\n          conceptTree[c]['scoringRate'] = conceptTree[c]['scoringRate'] / pcount;\r\n          conceptTree[c]['accuracy'] = conceptTree[c]['accuracy'] / pcount;\r\n        }\r\n      }\r\n      let logLen = 0;\r\n      for (let i = 0; i < entStudent.length; i++) {\r\n        let tempProSetScore = [];\r\n        for (let j = 0; j < entProSet.length; j++) {\r\n          tempProSetScore.push({\r\n            \"id\": entProSet[j]['id'],\r\n            \"totalScore\": entProSet[j]['totalScore'],\r\n            \"score\": 0\r\n          })\r\n        }\r\n        for (let l = 0; l < entStudent[i]['pro'].length; l++) {\r\n          let proId = entStudent[i]['pro'][l]['id'];\r\n          let proSetDa = problemsData.find(function (ep) { return ep['id'] == proId })\r\n          if (proSetDa != undefined) {\r\n            let proSetId = proSetDa['problemSetId'];\r\n            let bestScore = entStudent[i]['pro'][l]['best']['score'];\r\n            if (bestScore == NaN) {\r\n\r\n            }\r\n\r\n            tempProSetScore.find(function (tpss) { return tpss['id'] == proSetId })['score'] += bestScore;\r\n          }\r\n        }\r\n        entStudent[i]['proSetScore'] = tempProSetScore;\r\n      }\r\n      console.log(problemsData,entProSet,entStudent)\r\n      _this.studentsData = entStudent;\r\n      _this.$bus.$emit(\"Student\", _this.studentsData);\r\n      _this.proSetData = entProSet;\r\n      _this.$bus.$emit(\"proSet\", _this.proSetData);\r\n      _this.conceptTree = conceptTree;\r\n      _this.$bus.$emit(\"ConceptTree\", _this.conceptTree);\r\n      _this.problemsData = problemsData;\r\n      _this.$bus.$emit(\"allProblem\", _this.problemsData);\r\n      _this.calcNetData();\r\n    },\r\n    calStudentbyGroup() {\r\n      const _this = this;\r\n      let entStudent = [];\r\n      let entConcept = [];\r\n      let entProblem = [];\r\n      let entProSet = [];\r\n\r\n      let SelectStudentList = _this.SelectStudentList;\r\n\r\n      let conceptTree = tools.deepClone(_this.conceptTree);\r\n      let problemsData = tools.deepClone(_this.problemsData);\r\n      let submissionsData = tools.deepClone(_this.submissionsData);\r\n      let problemConceptData = tools.deepClone(_this.problemConceptData);\r\n\r\n      console.log(SelectStudentList);\r\n      let tempStudent = [];\r\n      for (let i = 0; i < SelectStudentList.length; i++) {\r\n        let curnodelist = SelectStudentList[i];\r\n        tempStudent.push([])\r\n      }\r\n      \r\n      for (let i = 0; i < problemsData.length; i++) {\r\n        problemsData[i]['totalAttempts'] = 0;\r\n        problemsData[i]['acceptedAttempts'] = 0;\r\n        problemsData[i]['totalAttemptsPeople'] = 0;\r\n        problemsData[i]['acceptedAttemptsPeople'] = 0;\r\n        problemsData[i]['totalScore'] = 0;\r\n        problemsData[i]['accuracy'] = 0;\r\n        problemsData[i]['conCount'] = 0;\r\n        problemsData[i]['conList'] = [];\r\n        problemsData[i]['scoringRate'] = 0;\r\n        problemsData[i]['stu'] = tools.deepClone(tempStudent);\r\n        let proSetId = problemsData[i]['problemSetId'];\r\n        if (entProSet.find(function (es) { return es['id'] == proSetId; }) == undefined) {\r\n          entProSet.push({\r\n            \"id\": proSetId,\r\n            \"pro\": [],\r\n            'totalScore': 0,\r\n          })\r\n        }\r\n        let ePS = entProSet.find(function (es) { return es['id'] == proSetId; });\r\n        ePS['pro'].push(problemsData[i]);\r\n        ePS['totalScore'] += problemsData[i]['score'];\r\n      }\r\n      for (let c = 0; c < conceptTree.length; c++) {\r\n        conceptTree[c]['totalAttempts'] = 0;\r\n        conceptTree[c]['acceptedAttempts'] = 0;\r\n        conceptTree[c]['totalScore'] = 0;\r\n        conceptTree[c]['accuracy'] = 0;\r\n        conceptTree[c]['proCount'] = 0;\r\n        conceptTree[c]['scoringRate'] = 0;\r\n\r\n      }\r\n      for (let l = 0; l < submissionsData.length; l++) {\r\n        let userId = submissionsData[l]['user']['user']['id'];\r\n\r\n        // if (SelectStudentList.indexOf(userId)!=-1){\r\n          if (entStudent.find(function (eS) { return eS['id'] == userId; }) == undefined) {\r\n            entStudent.push({ 'id': userId, \"pro\": [] });\r\n          }\r\n          let entStu = entStudent.find(function (eS) { return eS['id'] == userId; });\r\n          let jageProblemContents = submissionsData[l]['judgeResponseContents'];\r\n          let submitAt = submissionsData[l]['submitAt'];\r\n          for (let i = 0; i < jageProblemContents.length; i++) {\r\n            let problemId = jageProblemContents[i]['problemSetProblemId'];\r\n            let score = jageProblemContents[i]['score'];\r\n            let proStatus = jageProblemContents[i]['status'];\r\n\r\n            if (entStu['pro'].find(function (p) { return p['id'] == problemId; }) == undefined) {\r\n              entStu['pro'].push({ \"id\": problemId, 'log': [], 'best': jageProblemContents[i], \"totalAttempts\": 0, \"totalScore\": 0 })\r\n            }\r\n            \r\n            let eSP = entStu['pro'].find(function (p) { return p['id'] == problemId; })\r\n            // eSP['log'].push(jageProblemContents[i]);\r\n\r\n            if (eSP['best']['score'] < score) {\r\n              eSP['best'] = jageProblemContents[i];\r\n            }\r\n            let pro = problemsData.find(function (p) { return p['id'] == problemId; })\r\n            if (pro != undefined) {\r\n              // if (SelectStudentList.indexOf(userId)!=-1){\r\n              pro['stu'][userId] =0;\r\n              pro['totalAttempts'] += 1;\r\n              eSP['totalAttempts'] += 1;\r\n              if (proStatus == 'ACCEPTED'){\r\n                pro['acceptedAttempts'] += 1;\r\n                pro['stu'][userId] = 1;\r\n              }\r\n              pro['totalScore'] += score / pro['score'];\r\n              // }\r\n              eSP['totalScore'] += score / pro['score'];\r\n            }\r\n          }\r\n        // }\r\n      }\r\n      for (let i = 0; i < problemConceptData.length; i++) {\r\n        let conceptId = problemConceptData[i]['conceptId'];\r\n        let problemId = problemConceptData[i]['problem'];\r\n        let Pro = problemsData.find(function (p) { return p['id'] == problemId; });\r\n        Pro['conCount']++;\r\n        Pro['conList'].push(conceptId);\r\n      }\r\n\r\n\r\n      for (let i = 0; i < problemsData.length; i++) {\r\n        if (problemsData[i]['totalAttempts'] != 0) {\r\n          problemsData[i]['scoringRate'] = problemsData[i]['totalScore'] / problemsData[i]['totalAttempts'];\r\n          problemsData[i]['acceptedRate'] = problemsData[i]['acceptedAttempts'] / problemsData[i]['totalAttempts'];\r\n        }\r\n        let num = 0;\r\n        let cur = 0;\r\n        let stu = problemsData[i]['stu'];\r\n        Object.keys(stu).forEach((s)=>{\r\n          if(stu[s]==1){\r\n            num++;\r\n            cur++;\r\n          }\r\n          if(stu[s]==0){\r\n            num++;\r\n          }\r\n        })\r\n        // for l in ep['log']:\r\n        //     num += 1\r\n        //     if ep['log'][l][0] == ep['score']:\r\n        //         cur += 1\r\n        // if cur != 0:\r\n        problemsData[i]['totalAttemptsPeople'] = num;\r\n        problemsData[i]['acceptedAttemptsPeople'] = cur;\r\n      }\r\n      for (let c = 0; c < conceptTree.length; c++) {\r\n        let pcount = 0;\r\n        for (let i = 0; i < problemConceptData.length; i++) {\r\n          let conceptId = problemConceptData[i]['conceptId'];\r\n          if (conceptId == conceptTree[c]['id']) {\r\n            pcount++;\r\n            let problemId = problemConceptData[i]['problem'];\r\n            let ProBycon = problemsData.find(function (p) { return p['id'] == problemId; });\r\n            conceptTree[c]['proCount'] += 1;\r\n            conceptTree[c]['totalAttempts'] += ProBycon['totalAttempts'];\r\n            conceptTree[c]['acceptedAttempts'] += ProBycon['acceptedAttempts'];\r\n            conceptTree[c]['scoringRate'] += ProBycon['scoringRate'];\r\n            conceptTree[c]['accuracy'] += ProBycon['accuracy'];\r\n            conceptTree[c]['totalAttemptsPeople'] = ProBycon['totalAttemptsPeople'];\r\n            conceptTree[c]['acceptedAttemptsPeople'] = ProBycon['acceptedAttemptsPeople'];\r\n          }\r\n        }\r\n        if (conceptTree[c]['totalAttempts'] != 0)\r\n          conceptTree[c]['acceptedRate'] = conceptTree[c]['acceptedAttempts'] / conceptTree[c]['totalAttempts'];\r\n        else\r\n          conceptTree[c]['acceptedRate'] = 0;\r\n        if (pcount != 0) {\r\n          conceptTree[c]['scoringRate'] = conceptTree[c]['scoringRate'] / pcount;\r\n          conceptTree[c]['accuracy'] = conceptTree[c]['accuracy'] / pcount;\r\n        }\r\n      }\r\n      let logLen = 0;\r\n      for (let i = 0; i < entStudent.length; i++) {\r\n        let tempProSetScore = [];\r\n        for (let j = 0; j < entProSet.length; j++) {\r\n          tempProSetScore.push({\r\n            \"id\": entProSet[j]['id'],\r\n            \"totalScore\": entProSet[j]['totalScore'],\r\n            \"score\": 0\r\n          })\r\n        }\r\n        for (let l = 0; l < entStudent[i]['pro'].length; l++) {\r\n          let proId = entStudent[i]['pro'][l]['id'];\r\n          let proSetDa = problemsData.find(function (ep) { return ep['id'] == proId })\r\n          if (proSetDa != undefined) {\r\n            let proSetId = proSetDa['problemSetId'];\r\n            let bestScore = entStudent[i]['pro'][l]['best']['score'];\r\n            if (bestScore == NaN) {\r\n\r\n            }\r\n\r\n            tempProSetScore.find(function (tpss) { return tpss['id'] == proSetId })['score'] += bestScore;\r\n          }\r\n        }\r\n        entStudent[i]['proSetScore'] = tempProSetScore;\r\n      }\r\n      _this.studentsData = entStudent;\r\n      _this.$bus.$emit(\"Student\", _this.studentsData);\r\n      _this.proSetData = entProSet;\r\n      _this.$bus.$emit(\"proSet\", _this.proSetData);\r\n      _this.conceptTree = conceptTree;\r\n      _this.$bus.$emit(\"ConceptTree\", _this.conceptTree);\r\n      _this.problemsData = problemsData;\r\n      _this.$bus.$emit(\"allProblem\", _this.problemsData);\r\n      _this.calcNetData();\r\n    },\r\n    calcNetData() {\r\n      const _this = this;\r\n      let problemData = _this.problemsData;\r\n      let submissionsData = _this.submissionsData;\r\n      let studentsData = _this.studentsData;\r\n      let minSupport = 0.1;\r\n      let minConfidence = 0.1;\r\n      let frequentItemset2 = {};\r\n      let frequentItemset1 = {};\r\n      let netData = {};\r\n      let studPro = {};\r\n      for (let i = 0; i < problemData.length; i++) {\r\n        let problemId = problemData[i]['id'];\r\n        frequentItemset1[`${problemId}`] = 0;\r\n        studentsData.forEach((s) => {\r\n          // if(studentLog.find(function(sd){return sd['id'] == s['id'];})){\r\n          //   studentLog.push({\"id\":s['id'],\"pro\":[]});\r\n          // }\r\n          if(studPro[s['id']] == undefined){\r\n            studPro[s['id']] = {}\r\n          }\r\n          // let st = studentLog.find(function(sd){return sd['id'] == s['id'];});\r\n          let problemI = s['pro'].find(function (pro) { return pro['id'] == problemId });\r\n          if (problemI == undefined) {\r\n              frequentItemset1[`${problemId}`]++;\r\n              studPro[s['id']][problemId] = '0';\r\n              s['pro'].push({\r\n                \"id\":problemId,\r\n                \"log\":[],\"best\":{\"status\":\"none\",\"score\":0}\r\n              })\r\n          }\r\n          else{\r\n            studPro[s['id']][problemId] = problemI['best']['score'];\r\n            if (problemI['status'] != 'ACCEPTED') {\r\n              frequentItemset1[`${problemId}`]++;\r\n            }\r\n          }\r\n        })\r\n      }\r\n      for (let i = 0; i < problemData.length - 1; i++) {\r\n        let problemIId = problemData[i]['id'];\r\n        let problemScore = problemData[i]['score']\r\n        if (frequentItemset1[`${problemIId}`] > 0) {\r\n          for (let j = i + 1; j < problemData.length; j++) {\r\n            let problemJId = problemData[j]['id'];\r\n            frequentItemset2[`${problemIId}_${problemJId}`] = 0;\r\n            frequentItemset2[`${problemJId}_${problemIId}`] = 0;\r\n            let supportCount = 0;\r\n            if (frequentItemset1[`${problemJId}`] > 0) {\r\n              studentsData.forEach((s) => {\r\n                let problemI = studPro[s['id']][problemIId];\r\n                let problemJ = studPro[s['id']][problemJId];\r\n                if ((problemI<problemScore) && (problemJ <problemScore)) {\r\n                  frequentItemset2[`${problemIId}_${problemJId}`]++;\r\n                  frequentItemset2[`${problemJId}_${problemIId}`]++;\r\n                }\r\n              })\r\n              netData[`${problemIId}_${problemJId}`] = frequentItemset2[`${problemIId}_${problemJId}`] / frequentItemset1[`${problemIId}`];\r\n              netData[`${problemJId}_${problemIId}`] = frequentItemset2[`${problemJId}_${problemIId}`] / frequentItemset1[`${problemJId}`];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      _this.netData = netData;\r\n      _this.$bus.$emit(\"netData\",netData);\r\n    },\r\n    getAllData() {\r\n      const _this = this;\r\n      this.getConceptTree();\r\n      this.getProblems();\r\n      this.getProblemConcept();\r\n      this.getSubmissions();\r\n    },\r\n    getSelectEnt(val) {\r\n      this.selectEntId = val;\r\n    },\r\n    getTimeDur(value) {\r\n      this.timeDur = value\r\n    },\r\n    getToolState(val) {\r\n      this.toolsState = val;\r\n    },\r\n    // getToolState:{\r\n    //   deep:true,\r\n    //   handler(val) {\r\n    //     console.log(val)\r\n    //   this.toolsState = val;\r\n    // }\r\n    // },\r\n    getShowLabelState(value) {\r\n      this.showLabelState = value\r\n    }\r\n    ,\r\n\r\n    clickHandler() {\r\n      console.log(111111);\r\n    },\r\n  },\r\n  created: function () {\r\n    var _this = this;\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    this.$el.style.setProperty(\"--heightStyle\", this.windowHeight + \"px\");\r\n    this.showVideo = true;\r\n    this.$bus.$emit(\"attrColorList\", _this.attrColorList);\r\n    this.$bus.$emit(\"attrColorLightList\", _this.attrColorLightList);\r\n    this.$bus.$emit(\"stuColorList\", _this.stuColorList);\r\n    this.$bus.$emit(\"groupData\", _this.groupData);\r\n    this.toolState = {\r\n      \"addRel\": false,\r\n      \"addRelMain\": false,\r\n      \"delRel\":false,\r\n    }\r\n    this.getAllData();\r\n    this.$bus.$on('Updata_Pro_Con', (val) => {\r\n      _this.problemConceptData = val;\r\n      _this.calStudent();\r\n    });\r\n\r\n    this.$bus.$on('renew', (val) => {\r\n      if(val){\r\n        _this.getProblemConcept();\r\n          _this.calStudent();\r\n      }\r\n    });\r\n    this.$bus.$on('SelectedStu', (val) => {\r\n      _this.SelectStudentList = val;\r\n      // _this.calStudentbyGroup();\r\n      _this.calStudent();\r\n    });\r\n    // this.getData();\r\n  },\r\n  beforeDestroy() {\r\n    clearTimeout(this.timer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n@import '../../assets/style/home.css';\r\n</style>"]}]}