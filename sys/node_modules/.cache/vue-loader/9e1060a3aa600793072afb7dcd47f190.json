{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConSankey\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConSankey\\index.vue","mtime":1703081770003},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\css-loader\\dist\\cjs.js","mtime":1681618859684},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1681618860357},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\postcss-loader\\src\\index.js","mtime":1681618859950},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAnLi9pbmRleC5jc3MnOw0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyXA","file":"index.vue","sourceRoot":"src/components/proConSankey","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"proConSankey\" ref=\"proConSankeyDiv\">\r\n    <div class=\"panelHead\"></div>\r\n    <div id=\"proConSankeyCantain\" class=\"panelBody\" ref=\"proConSankeyCantain\">\r\n    </div>\r\n\r\n    <!-- <div class=\"close\" ref=\"listen\">\r\n    </div> -->\r\n    <!-- <el-button type=\"primary\" @click=\"onSubmit\">Create</el-button> -->\r\n    <!-- <div class=\"proConSankeyTooltip toolTip\">\r\n      <p>\r\n        <br /><strong class=\"name toolTipAttr\"></strong>\r\n        <br /><strong class=\"text toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr0 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr1 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr2 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr3 toolTipAttr\"></strong>\r\n        <br /><strong class=\"attr4 toolTipAttr\"></strong>\r\n      </p>\r\n    </div> -->\r\n  </div>\r\n</div></template>\r\n<script>\r\n// import { param } from 'server/api';\r\nimport * as d3 from 'd3'\r\nimport * as d3Sankey from 'd3-sankey'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\n// import TestJson from \"@/assets/json/case2_fin.json\";\r\n// import TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport Circle from '@/utils/geometry/circle';\r\nimport tools from \"@/utils/tools.js\";\r\n// import \"@/utils/sankey.js\";\r\nimport drawTools from \"@/utils/drawingTools.js\";\r\n\r\nexport default {\r\n  props: [\"toolsState\"],\r\n  data() {\r\n    return {\r\n      proName: '',\r\n      ConceptOri:'',\r\n      sankeyNodeData:'',\r\n      sankeyLinkData:'',\r\n      curPaperSankeyData:\"\",\r\n      sankeyData: '',\r\n      allProblems: '',\r\n      allConcepts: '',\r\n      allProInConGPTSankeyData: '',\r\n      allproConSankeyData: '',\r\n      proType: \"\",\r\n      select: '',\r\n      proForm: {\r\n        name: \"\",\r\n        type: \"\",\r\n        content: \"\"\r\n      },\r\n      attrColorlist: [],\r\n      rootSvg: '',\r\n      width: 0,\r\n      height: 0,\r\n      thisId: 10,\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    toolAddRel(val) {\r\n    },\r\n    toolsState: {\r\n      deep: true,\r\n      handler(val) {\r\n        console.log(val)\r\n        this.toolAddRel = val['addRel'];\r\n        this.toolAddRelMain = val['addRelMain'];\r\n        this.toolDelRel = val['delRel'];\r\n      }\r\n    },\r\n    // sankeyData: {\r\n    //   deep: true,\r\n    //   handler(val) {\r\n    //     console.log(val)\r\n    //     this.updataAll();\r\n    //   }\r\n    // },\r\n    sankeyNodeData(){\r\n      \r\n        this.updataAll();\r\n    }\r\n  },\r\n  methods: {\r\n    getAllSankeyData() {\r\n      const _this = this;\r\n    //   _this.sankeyData ={\r\n    //     \"nodes\": [\r\n    //       { \"name\": \"A\" },\r\n    //       { \"name\": \"B\" },\r\n    //       { \"name\": \"C\" },\r\n    //       { \"name\": \"D\" },\r\n    //       ],\r\n    //   \"links\": [\r\n    //     {'source':0,'target':2,'value':\"110\"},\r\n    //     {'source':0,'target':3,'value':\"5\"},\r\n    //     {'source':1,'target':2,'value':\"4\"},\r\n    //     {'source':1,'target':3,'value':\"2\"},\r\n\r\n    //   ]\r\n    // }\r\n      this.$http\r\n        .get(\"/api/sankeyData\", { params: {} }, {})\r\n        .then((response) => {\r\n          _this.sankeyLinkData = response.body;\r\n          _this.getAllSankeyNodeData();\r\n        });\r\n      // this.$http\r\n      //   .get(\"/api/concept/allproConSankeyData\", { params: {} }, {})\r\n      //   .then((response) => {\r\n      //     _this.allproConSankeyData = response.body;\r\n      //     console.log(\"allproConSankeyData\",response.body);\r\n      //     // _this.allRelationships = response.body;\r\n      //     // _this.drawnetPData();\r\n      //   });\r\n    },\r\n    \r\n    getAllSankeyNodeData() {\r\n      const _this = this;\r\n      let nodes = [];\r\n      let conOri = _this.ConceptOri;\r\n      let sankeyLinkData = _this.sankeyLinkData;\r\n      let j = 0;\r\n      let max = 0;\r\n      for(let i=0;i<conOri.length;i++){\r\n        nodes.push(conOri[i]);\r\n        j++;\r\n      }\r\n      for(let i=0;i<sankeyLinkData.length;i++){\r\n        let target = sankeyLinkData[i]['target'];\r\n        if(target>max){max=target;}\r\n      }\r\n      let i=0;\r\n      console.log(conOri, 2131313,j,max,nodes)\r\n      while(j<=max){\r\n        nodes.push({\"name\":`con${i}`});\r\n        i++;\r\n        j++\r\n      }\r\n      _this.sankeyNodeData = nodes;\r\n\r\n    },\r\n    drawProConSankey(svg) {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let psvg = svg\r\n      let width = psvg.attr(\"width\");\r\n      let height = psvg.attr(\"height\");\r\n      psvg.select(\"#netPG\").remove();\r\n      // let prog = psvg.append(\"g\").attr(\"id\", \"netPG\").attr(\"width\", width).attr(\"height\", height);\r\n      let groups = svg.append(\"g\").attr(\"id\", \"proConSankeyGroups\").attr(\"width\", width).attr(\"height\", height)\r\n      // .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      // this.groupsSvg = groups;\r\n\r\n      let backG = groups.append(\"g\").attr(\"id\", \"proConSankeybackG\").attr(\"width\", width).attr(\"height\", height);\r\n      let arcG = groups.append(\"g\").attr(\"id\", \"proConSankeyarcG\").attr(\"width\", width).attr(\"height\", height);\r\n      let relG = groups.append(\"g\").attr(\"id\", \"proConSankeyrelG\").attr(\"width\", width).attr(\"height\", height);\r\n      let entG = groups.append(\"g\").attr(\"id\", \"proConSankeyentG\").attr(\"width\", width).attr(\"height\", height);\r\n      let frontG = groups.append(\"g\").attr(\"id\", \"proConSankeyfrontG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      // let scatterData = _this.scatterData;\r\n      // let xMaxMinDR = tools.getMaxMin(scatterData, 'x');\r\n      // let yMaxMinDR = tools.getMaxMin(scatterData, 'y');\r\n      // let scatterxLinear = d3.scaleLinear().domain([xMaxMinDR[1], xMaxMinDR[0]]).range([0, width]);\r\n      // let scatteryLinear = d3.scaleLinear().domain([yMaxMinDR[1], yMaxMinDR[0]]).range([0, height / 2]);\r\n      let colorList = _this.attrColorlist;\r\n      var node = _this.sankeyNodeData\r\n      var lk = _this.sankeyLinkData;\r\n      let marge = _this.margin;\r\n\r\n      const nodeSort = function(a,b){\r\n        return 0;\r\n      }\r\n\r\n      var sankey = d3Sankey.sankey()\r\n        .nodeWidth(50)//每个资源块的水平像素宽度\r\n        .nodePadding(0)//资源块间的纵向间距\r\n        // .nodeAlign(d3Sankey.sankeyLeft) \r\n        .nodeSort(nodeSort)\r\n        .size([width, height * 0.95]);\r\n      let { nodes, links } = sankey({\r\n        nodes: node.map(d => Object.assign({}, d)),\r\n        links: lk.map(d => Object.assign({}, d))\r\n            });\r\n      // var path = sankey.link();\r\n      var link = svg.append(\"g\").selectAll(\".link\")\r\n        .data(links)\r\n        .enter().append(\"path\")\r\n        .attr(\"class\", \"link\")\r\n        .attr(\"id\", \"san\")\r\n        .attr(\"fill\",\"rgba(255, 0, 0,0)\")\r\n        .attr(\"stroke\", \"rgba(132, 132, 132,0.3)\")\r\n        .attr(\"stroke-width\", d => d.width)\r\n        .style(\"mix-blend-mode\", \"multiply\")\r\n        .attr(\"d\", d3Sankey.sankeyLinkHorizontal())//链接的路径设置已经被sankey封装了，这里调用之后就可以生成连线呢的路径\r\n        //下面这句生成线的宽度，//线的宽度按照线端点两端块较小者扩宽，但为啥偏移max(1, d.dy）？\r\n        // .style(\"stroke-width\", function (d) {\r\n        //   return Math.max(1, d.dy);\r\n        // })\r\n        // .attr(\"transform\", function (d) { return \"translate(\" + marge.left + \",\" + marge.top + \")\"; })\r\n        .sort(function (a, b) { return b.dy - a.dy; });//这句去掉效果一样不知为啥？\r\n      //(5)sankey设置链接提示\r\n      link.append(\"title\")\r\n        .text(function (d) { return d.source.name + \" → \" + d.target.name + \"\\n\" + d.value; });\r\n\r\n        const gradient = link.append(\"linearGradient\")\r\n        // .attr(\"id\", d => (d.uid = DOM.uid(\"link\")).id)\r\n        .attr(\"gradientUnits\", \"userSpaceOnUse\")\r\n        .attr(\"x1\", d => d.source.x1)\r\n        .attr(\"x2\", d => d.target.x0);\r\n    gradient.append(\"stop\")\r\n        .attr(\"offset\", \"0%\")\r\n        .attr(\"stop-color\", d => colorList[parseInt(d.source.category)%colorList.length]);\r\n    gradient.append(\"stop\")\r\n        .attr(\"offset\", \"100%\")\r\n        .attr(\"stop-color\", d => colorList[parseInt(d.target.category)%colorList.length]);\r\n\r\n      //(6)拖动\r\n      var node = svg.append(\"g\").selectAll(\".node\")\r\n        .data(nodes)\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"node\")\r\n        // .attr(\"transform\", function (d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\r\n\r\n        .call(d3.drag()\r\n          .on(\"drag\", dragmove));\r\n      //(7)块\r\n      node.append(\"rect\")\r\n        .attr(\"id\", \"san\")\r\n        .attr(\"x\", d => d.x0)\r\n        .attr(\"y\", d => d.y0)\r\n        .attr(\"height\", d => (d.y1 - d.y0))\r\n        .attr(\"width\", (d) =>{\r\n          let rectWidth = d.x1 - d.x0;\r\n          if(d.index<=24){\r\n            let lay =  parseInt(d.lay);\r\n           rectWidth += (rectWidth/3)*(1-lay);\r\n          }\r\n          return rectWidth})\r\n        // .text(d => `${d.name}\\n${d.value.toLocaleString()}`)\r\n        // .attr(\"height\", function (d) { return d.dy; })\r\n        // .attr(\"width\", sankey.nodeWidth())//刚才设置的块的宽度  \r\n        // .attr(\"transform\", function (d) { return \"translate(\" + marge.left + \",\" + marge.top + \")\"; })\r\n        .style(\"fill\", function (d) {\r\n          let colorIndex =parseInt(d.index-25)%colorList.length;\r\n          if(d.index<=24){\r\n            colorIndex = parseInt(d.rootFatherIndex);\r\n          }\r\n          // na = d.name.substr(0, d.name.length - 1)\r\n          // if (na == 'ori') {\r\n          //   return mcolor[parseInt(d.name.substr(3)) - 1];\r\n          // }\r\n          // else {\r\n            return colorList[colorIndex];\r\n          // }\r\n        }\r\n        )\r\n        // .style(\"stroke\", function (d) { \r\n        //   if(d.index<=24)\r\n        //   return d3.rgb(d.color).darker(0.1); })//较深\r\n        .append(\"title\")\r\n        .text(function (d) { return d.name + \"\\n\" + d.value; });\r\n      //(8)文字\r\n      node.append(\"text\")\r\n        .attr(\"x\", function (d) { \r\n          let rectWidth = d.x1 - d.x0;\r\n          if(d.index<=24){\r\n            let lay =  parseInt(d.lay);\r\n           rectWidth += (rectWidth/3)*(1-lay);\r\n          }\r\n          return d.x0+rectWidth; })\r\n        .attr(\"y\", function (d) { return d.y0+(d.y1 - d.y0)/2; })\r\n        .attr(\"dy\", \".35em\")\r\n        .attr(\"id\", \"san\")\r\n        .attr(\"text-anchor\", \"end\")//文字在左边（中轴右边的）\r\n        .attr(\"transform\", null)\r\n        .text(function (d) { return d.name; })\r\n        // .filter(function (d) { return d.x < width / 2; })//除去在中轴左边的 \r\n        // .attr(\"x\", 6 + sankey.nodeWidth())\r\n        .attr(\"text-anchor\", \"start\")//文字在右边\r\n        // .attr(\"transform\", function (d) { return \"translate(\" + marge.left + \",\" + marge.top + \")\"; })\r\n      // (9)拖动\r\n      function dragmove(d) {\r\n        d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" +\r\n          (d.y = //下面的纵坐标调整值是怎么计算的？\r\n            Math.max(0,\r\n              Math.min(\r\n                height - d.dy,\r\n                d3.event.y\r\n              ))) + \")\");\r\n        sankey.relayout();//重新布局,线上下的位置调整\r\n        link.attr(\"d\", path);//更新路径\r\n      }\r\n\r\n\r\n\r\n    },\r\n    updataAll() {\r\n      var _this = this;\r\n      let margin = _this.margin\r\n      let width = _this.$refs.proConSankeyDiv.offsetWidth - margin.left - margin.right;\r\n      let height = _this.$refs.proConSankeyDiv.offsetHeight - margin.top - margin.bottom;\r\n      _this.width = width;\r\n      _this.height = height;\r\n      d3.select(\"#proConSankeyCantain\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#proConSankeyCantain\").append(\"svg\")\r\n        .attr(\"width\", width - 0)\r\n        .attr(\"height\", height - 0)\r\n        .attr('transform', 'translate(0,0)')\r\n        .style(\"position\", \"absolute\");\r\n\r\n      let entG = svg.append(\"g\").attr(\"id\", \"entG\").attr(\"width\", width).attr(\"height\", height);\r\n      let sonG = svg.append(\"g\").attr(\"id\", \"sonG\").attr(\"width\", width).attr(\"height\", height);\r\n      _this.rootSvg = svg;\r\n      _this.drawProConSankey(svg);\r\n      // });\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    d3.select(\".scatterTooltip\").classed(\"hidden\", true);\r\n    d3.select(\".chartTooltip\").classed(\"hidden\", true);\r\n    this.$bus.$on('ConceptTree', (val) => {\r\n      _this.conceptTree = val;\r\n    });\r\n    this.$bus.$on('allProblems', (val) => {\r\n      _this.allProblems = val;\r\n    });\r\n    this.$bus.$on('allConcepts', (val) => {\r\n      _this.allConcepts = val;\r\n      _this.getAllSankeyData();\r\n      _this.updataAll();\r\n    });\r\n    this.$bus.$on('ConceptOri', (val) => {\r\n      _this.ConceptOri = val;\r\n    });\r\n    this.$bus.$on('attrColorlist', (val) => {\r\n      _this.attrColorlist = val;\r\n    });\r\n    this.$bus.$on('curPaperSankeyData', (val) => {\r\n      console.log(\"curPaperSankeyData\",val)\r\n      _this.curPaperSankeyData = val[0].link;\r\n      _this.sankeyLinkData = _this.curPaperSankeyData;\r\n      _this.updataAll();\r\n    });\r\n\r\n    // this.$refs.moveproConSankeyLeft.addEventListener(\"mouseover\", _this.moveproConSankeyLeft); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"]}]}