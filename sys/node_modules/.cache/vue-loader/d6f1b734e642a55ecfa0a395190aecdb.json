{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConScatter\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\proConScatter\\index.vue","mtime":1701958247746},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\babel-loader\\lib\\index.js","mtime":1681618859957},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/proConScatter","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"proConScatter\" ref=\"proConScatterDiv\">\r\n    <div class=\"panelHead\"></div>\r\n    <div id=\"proConScatterCantain\" class=\"panelBody\" ref=\"proConScatterCantain\">\r\n    </div>\r\n    \r\n    <!-- <div class=\"close\" ref=\"listen\">\r\n    </div> -->\r\n    <!-- <el-button type=\"primary\" @click=\"onSubmit\">Create</el-button> -->\r\n    <div class=\"proConScatterTooltip toolTip\">\r\n      <p>\r\n          <br /><strong class=\"name toolTipAttr\"></strong>\r\n          <br /><strong class=\"text toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr0 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr1 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr2 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr3 toolTipAttr\"></strong>\r\n          <br /><strong class=\"attr4 toolTipAttr\"></strong>\r\n        </p>\r\n    </div>\r\n  </div>\r\n</div></template>\r\n  \r\n<script>\r\n// import { param } from 'server/api';\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\n// import TestJson from \"@/assets/json/case2_fin.json\";\r\n// import TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport Circle from '@/utils/geometry/circle';\r\nimport tools from \"@/utils/tools.js\";\r\nimport drawTools from \"@/utils/drawingTools.js\";\r\n\r\nexport default {\r\n  props: [\"toolsState\"],\r\n  data() {\r\n    return {\r\n      proName: '',\r\n      scatterData:'',\r\n      allProblems:'',\r\n      allConcepts:'',\r\n      allProInConGPTScatterData:'',\r\n      allproConScatterData:'',\r\n      proType: \"\",\r\n      select: '',\r\n      proForm: {\r\n        name: \"\",\r\n        type: \"\",\r\n        content: \"\"\r\n      },\r\n      attrColorlist:[],\r\n      rootSvg:'',\r\n      width:0,\r\n      height:0,\r\n      thisId: 10,\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    toolAddRel(val) {\r\n    },\r\n    toolsState: {\r\n      deep: true,\r\n      handler(val) {\r\n        console.log(val)\r\n        this.toolAddRel = val['addRel'];\r\n        this.toolAddRelMain = val['addRelMain'];\r\n        this.toolDelRel = val['delRel'];\r\n      }\r\n    },\r\n    scatterData(val){\r\n      const _this = this;\r\n      _this.updataAll();\r\n    }\r\n  },\r\n  methods: {\r\n    getAllScatterData() {\r\n      const _this = this;\r\n      this.$http\r\n        .get(\"/api/problem/allProInConGPTScatterData\", { params: {} }, {})\r\n        .then((response) => {\r\n          _this.allProInConGPTScatterData = response.body;\r\n          console.log(\"allProInConGPTScatterData\",response.body);\r\n          _this.scatterData = _this.allProInConGPTScatterData;\r\n          // _this.allRelationships = response.body;\r\n          // _this.drawnetPData();\r\n        });\r\n      this.$http\r\n        .get(\"/api/concept/allproConScatterData\", { params: {} }, {})\r\n        .then((response) => {\r\n          _this.allproConScatterData = response.body;\r\n          console.log(\"allproConScatterData\",response.body);\r\n          // _this.allRelationships = response.body;\r\n          // _this.drawnetPData();\r\n        });\r\n    },\r\n    drawProConScatter(svg) {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let psvg = svg\r\n      let width = psvg.attr(\"width\");\r\n      let height = psvg.attr(\"height\");\r\n      psvg.select(\"#netPG\").remove();\r\n      // let prog = psvg.append(\"g\").attr(\"id\", \"netPG\").attr(\"width\", width).attr(\"height\", height);\r\n      let groups = svg.append(\"g\").attr(\"id\", \"proConScatterGroups\").attr(\"width\", width).attr(\"height\", height)\r\n      // .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      // this.groupsSvg = groups;\r\n\r\n      let backG = groups.append(\"g\").attr(\"id\", \"proConScatterbackG\").attr(\"width\", width).attr(\"height\", height);\r\n      let arcG = groups.append(\"g\").attr(\"id\", \"proConScatterarcG\").attr(\"width\", width).attr(\"height\", height);\r\n      let relG = groups.append(\"g\").attr(\"id\", \"proConScatterrelG\").attr(\"width\", width).attr(\"height\", height);\r\n      let entG = groups.append(\"g\").attr(\"id\", \"proConScatterentG\").attr(\"width\", width).attr(\"height\", height);\r\n      let frontG = groups.append(\"g\").attr(\"id\", \"proConScatterfrontG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      let scatterData = _this.scatterData;\r\n      let xMaxMinDR = tools.getMaxMin(scatterData, 'x');\r\n      let yMaxMinDR = tools.getMaxMin(scatterData, 'y');\r\n      let scatterxLinear = d3.scaleLinear().domain([xMaxMinDR[1], xMaxMinDR[0]]).range([0, width]);\r\n      let scatteryLinear = d3.scaleLinear().domain([yMaxMinDR[1], yMaxMinDR[0]]).range([0, height/2]);\r\n      let colorList = _this.attrColorlist;\r\n      const allProblems = _this.allProblems;\r\n      const allConcepts = _this.allConcepts;\r\n      for(let i=0;i<scatterData.length;i++){\r\n        let x = scatterxLinear(scatterData[i]['x']);\r\n        let y = scatteryLinear(scatterData[i]['y']);\r\n        let type = scatterData[i]['type'];\r\n        if(type == \"kp\"){\r\n          let points = drawTools.calcRegularPolygonPoints(3, x, y, 8);\r\n          let trigal = drawTools.drawPolygon(entG, points, `scatterCircle_${scatterData[i]['type']}_${scatterData[i]['id']}`, '0px', \"grey\", colorList[parseInt(scatterData[i]['kLab'])]);\r\n          // drawTools.drawCircle(entG, x, y, 5, colorList[parseInt(scatterData[i]['kLab'])], 1, 1, 1, 'scatterCircle', `scatterCircle_${scatterData[i]['type']}_${scatterData[i]['id']}`);\r\n          trigal.on(\"mousemove\", function (d) {\r\n          let ts = d3.select(this);\r\n          let tp = ts.attr(\"id\").split(\"_\")[1]\r\n          let id = ts.attr(\"id\").split(\"_\")[2];\r\n          let ent = {}\r\n          // 更新浮层内容\r\n          let attr = ['title'];\r\n          let attrN = ['title'];\r\n          if(tp == 'pro'){\r\n            ent = allProblems.find(function(p){return p['id'] == id});\r\n            attr = ['title'];\r\n            attrN = ['title'];\r\n          }\r\n          else if(tp == 'kp'){\r\n            ent = allConcepts.find(function(c){return c['sortId'] == id});\r\n            \r\n            attr = ['name'];\r\n            attrN = ['name'];\r\n          }\r\n          console.log('id',d);\r\n\r\n          let nametext = '';\r\n          // let ent = groupData.find(function (c) { return c['id'] == id });\r\n          var yPosition = d.offsetY + 2;\r\n          var xPosition = d.offsetX + 2;\r\n          \r\n          // if(d.clientX>2100){\r\n          //   xPosition = d.clientX - 210;\r\n          // }\r\n          let nameText = ent['title'];\r\n          var scatterTooltip = d3\r\n            .select(\".proConScatterTooltip\")\r\n            .style(\"left\", xPosition + \"px\")\r\n            .style(\"top\", yPosition + \"px\");\r\n          // 更新浮层内容\r\n          for (let a = 0; a < attr.length; a++) {\r\n\r\n            scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]]}`)\r\n          }\r\n          scatterTooltip.select(\".name\").text(nameText);\r\n          // 移除浮层hidden样式，展示浮层\r\n          scatterTooltip.classed(\"hidden\", false);\r\n        }).on(\"mouseleave\", function (d) {\r\n          _this.$bus.$emit(\"SelectingStu\", \"\");\r\n          d3.select(\".proConScatterTooltip\").classed(\"hidden\", true);\r\n        })\r\n        }\r\n        else{\r\n        let circle = drawTools.drawCircle(entG, x, y, 5, colorList[parseInt(scatterData[i]['kLab'])], 1, 1, 1, 'scatterCircle', `scatterCircle_${scatterData[i]['type']}_${scatterData[i]['id']}`);\r\n        circle.on(\"mousemove\", function (d) {\r\n          let ts = d3.select(this);\r\n          let tp = ts.attr(\"id\").split(\"_\")[1]\r\n          let id = ts.attr(\"id\").split(\"_\")[2];\r\n          let ent = {}\r\n          // 更新浮层内容\r\n          let attr = ['title'];\r\n          let attrN = ['title'];\r\n          if(tp == 'pro'){\r\n            ent = allProblems.find(function(p){return p['id'] == id});\r\n            attr = ['title'];\r\n            attrN = ['title'];\r\n          }\r\n          else if(tp == 'kp'){\r\n            ent = allConcepts.find(function(c){return c['sortId'] == id});\r\n            \r\n            attr = ['name'];\r\n            attrN = ['name'];\r\n          }\r\n          console.log('id',d);\r\n\r\n          let nametext = '';\r\n          // let ent = groupData.find(function (c) { return c['id'] == id });\r\n          var yPosition = d.offsetY + 2;\r\n          var xPosition = d.offsetX + 2;\r\n          \r\n          // if(d.clientX>2100){\r\n          //   xPosition = d.clientX - 210;\r\n          // }\r\n          let nameText = ent['title'];\r\n          var scatterTooltip = d3\r\n            .select(\".proConScatterTooltip\")\r\n            .style(\"left\", xPosition + \"px\")\r\n            .style(\"top\", yPosition + \"px\");\r\n          // 更新浮层内容\r\n          for (let a = 0; a < attr.length; a++) {\r\n\r\n            scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]]}`)\r\n          }\r\n          scatterTooltip.select(\".name\").text(nameText);\r\n          // 移除浮层hidden样式，展示浮层\r\n          scatterTooltip.classed(\"hidden\", false);\r\n        }).on(\"mouseleave\", function (d) {\r\n          _this.$bus.$emit(\"SelectingStu\", \"\");\r\n          d3.select(\".proConScatterTooltip\").classed(\"hidden\", true);\r\n        })\r\n      }\r\n      }\r\n\r\n\r\n      let scatterConData = _this.allproConScatterData;\r\n      let xconMaxMinDR = tools.getMaxMin(scatterConData, 'x');\r\n      let yconMaxMinDR = tools.getMaxMin(scatterConData, 'y');\r\n      let scatterConxLinear = d3.scaleLinear().domain([xconMaxMinDR[1], xconMaxMinDR[0]]).range([0, width]);\r\n      let scatterConyLinear = d3.scaleLinear().domain([yconMaxMinDR[1], yconMaxMinDR[0]]).range([height/2, height-50]);\r\n      for(let i=scatterConData.length-1;i>=0;i--){\r\n        let x = scatterConxLinear(scatterConData[i]['x']);\r\n        let y = scatterConyLinear(scatterConData[i]['y']);\r\n        let color = colorList[parseInt(scatterConData[i]['kLab'])]\r\n        if(parseInt(scatterConData[i]['id'])<19){\r\n          color = 'red';\r\n        }\r\n        console.log(scatterConData[i])\r\n        let circles = drawTools.drawCircle(entG, x, y, 5, color, 1, 1, 1, 'scatterConCircle', `scatterConCircle_${scatterConData[i]['id']}`);\r\n        circles.on(\"mousemove\", function (d) {\r\n          let ts = d3.select(this);\r\n          // let tp = ts.attr(\"id\").split(\"_\")[1]\r\n          let id = ts.attr(\"id\").split(\"_\")[1];\r\n          let ent = {}\r\n          // 更新浮层内容\r\n          let attr = ['name'];\r\n          let attrN = ['name'];\r\n          ent = scatterConData.find(function(c){return c['id'] == id});\r\n          console.log('id',ent,id);\r\n\r\n          let nametext = '';\r\n          // let ent = groupData.find(function (c) { return c['id'] == id });\r\n          var yPosition = d.offsetY + 2;\r\n          var xPosition = d.offsetX + 2;\r\n          \r\n          if(d.offsetX>200){\r\n            xPosition = d.offsetX - 210;\r\n          }\r\n          if(d.offsetY>600){\r\n            yPosition = d.offsetY - 150;\r\n          }\r\n          let nameText = ent['name'];\r\n          var scatterTooltip = d3\r\n            .select(\".proConScatterTooltip\")\r\n            .style(\"left\", xPosition + \"px\")\r\n            .style(\"top\", yPosition + \"px\");\r\n          // 更新浮层内容\r\n          for (let a = 0; a < attr.length; a++) {\r\n\r\n            scatterTooltip.select(`.attr${a}`).text(`${attrN[a]} : ${ent[attr[a]]}`)\r\n          }\r\n          scatterTooltip.select(\".name\").text(nameText);\r\n          // 移除浮层hidden样式，展示浮层\r\n          scatterTooltip.classed(\"hidden\", false);\r\n        }).on(\"mouseleave\", function (d) {\r\n          _this.$bus.$emit(\"SelectingStu\", \"\");\r\n          d3.select(\".proConScatterTooltip\").classed(\"hidden\", true);\r\n        })\r\n      }\r\n    },\r\n    updataAll() {\r\n      var _this = this;\r\n      let margin = _this.margin\r\n      let width = _this.$refs.proConScatterDiv.offsetWidth - margin.left - margin.right;\r\n      let height = _this.$refs.proConScatterDiv.offsetHeight - margin.top - margin.bottom;\r\n      _this.width = width;\r\n      _this.height = height;\r\n      d3.select(\"#proConScatterCantain\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#proConScatterCantain\").append(\"svg\")\r\n        .attr(\"width\", width - 0)\r\n        .attr(\"height\", height - 0)\r\n        .attr('transform', 'translate(0,0)')\r\n        .style(\"position\", \"absolute\");\r\n\r\n      let entG = svg.append(\"g\").attr(\"id\", \"entG\").attr(\"width\", width).attr(\"height\", height);\r\n      let sonG = svg.append(\"g\").attr(\"id\", \"sonG\").attr(\"width\", width).attr(\"height\", height);\r\n      _this.rootSvg = svg;\r\n      _this.drawProConScatter(svg);\r\n      // });\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    _this.getAllScatterData();\r\n    d3.select(\".scatterTooltip\").classed(\"hidden\", true);\r\n    d3.select(\".chartTooltip\").classed(\"hidden\", true);\r\n    this.$bus.$on('ConceptTree', (val) => {\r\n      _this.conceptTree = val;\r\n    });\r\n    this.$bus.$on('allProblems', (val) => {\r\n      _this.allProblems = val;\r\n    });\r\n    this.$bus.$on('allConcepts', (val) => {\r\n      _this.allConcepts = val;\r\n      _this.updataAll();\r\n    });\r\n    this.$bus.$on('attrColorlist', (val) => {\r\n      _this.attrColorlist = val;\r\n    });\r\n    \r\n    // this.$refs.moveproConScatterLeft.addEventListener(\"mouseover\", _this.moveproConScatterLeft); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"]}]}