{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\Indexinput\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\components\\Indexinput\\index.vue","mtime":1701694390793},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\css-loader\\dist\\cjs.js","mtime":1681618859684},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1681618860357},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\postcss-loader\\src\\index.js","mtime":1681618859950},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgJy4vaW5kZXguY3NzJzsNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAySA","file":"index.vue","sourceRoot":"src/components/Indexinput","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"indexInput\" ref=\"indexInputDiv\">\r\n    <div class=\"panelHead\">p</div>\r\n    <div id=\"indexInput\" class=\"panelBody\">\r\n      <el-tree :data=\"contentTreeData\" show-checkbox node-key=\"id\" default-expand-all :expand-on-click-node=\"false\"\r\n        :render-content=\"renderContent\">\r\n      </el-tree>\r\n      <el-divider></el-divider>\r\n      <el-form label-position='right' label-width=\"80px\">\r\n        <el-col :span=\"11\">\r\n        <el-form-item label=\"选择题\">\r\n          <el-input-number v-model=\"paperIndex.type1\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type1\"></el-input> -->\r\n        </el-form-item>\r\n        <el-form-item label=\"判断题\">\r\n          \r\n          <el-input-number v-model=\"paperIndex.type2\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type2\"></el-input> -->\r\n        </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"11\">\r\n        <el-form-item label=\"填空题\">\r\n          \r\n          <el-input-number v-model=\"paperIndex.type3\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type3\"></el-input> -->\r\n        </el-form-item>\r\n        <el-form-item label=\"编程题\">\r\n          <el-input-number v-model=\"paperIndex.type4\" :min=\"0\" ></el-input-number>\r\n          <!-- <el-input v-model=\"paperIndex.type4\"></el-input> -->\r\n        </el-form-item>\r\n        </el-col>\r\n      </el-form>\r\n      <el-button type=\"primary\" @click=\"onSubmit\">Create</el-button>\r\n    </div>\r\n  </div>\r\n  <!-- <div id=\"moveLeft\" ref=\"moveindexInputLeft\"></div>\r\n                    <div id=\"moveRight\" ref=\"moveindexInputRight\"></div> -->\r\n  <!-- <div id=\"assistindexInputPanel\" class=\"panel\">\r\n        <div class=\"panelHead\"></div>\r\n      </div> -->\r\n  <!-- <div id=\"zoomInDiv\" @click=\"zoomInLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomInUrl\">\r\n    </div>\r\n    <div id=\"zoomOutDiv\" @click=\"zoomOutLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomOutUrl\">\r\n    </div>\r\n    <div id=\"editToolDiv\" @click=\"editToolClk\">\r\n      <img class=\"icons\" :src=\"editToolUrl\">\r\n    </div> -->\r\n</div></template>\r\n  \r\n<script>\r\n// import { param } from 'server/api';\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\n// import TestJson from \"@/assets/json/case2_fin.json\";\r\n// import TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport tools from \"@/utils/tools.js\";\r\n\r\nexport default {\r\n  props: [\"toolsState\"],\r\n  data() {\r\n    return {\r\n      proName: '',\r\n      proType: \"\",\r\n      select: '',\r\n      proForm: {\r\n        name: \"\",\r\n        type: \"\",\r\n        content: \"\"\r\n      },\r\n      paperIndex:{\r\n        type1:0,\r\n        type2:0,\r\n        type3:0,\r\n        type4:0,\r\n      },\r\n      thisId: 10,\r\n      contentTreeData: [{\r\n        id: 1,\r\n        label: '基本数据类型与表达式',\r\n        indexValue: 0,\r\n        children: [{\r\n          id: 2,\r\n          label: '表达式',\r\n          indexValue: 0,\r\n          children: []\r\n        }, {\r\n          id: 3,\r\n\r\n          indexValue: 0,\r\n          label: '输入输出格式化控制',\r\n          children: []\r\n        }\r\n        ]\r\n      }, {\r\n        id: 4,\r\n\r\n        indexValue: 0,\r\n        label: '分支控制',\r\n        children: [{\r\n          id: 5,\r\n          indexValue: 0,\r\n          label: 'if-else'\r\n        }, {\r\n          id: 6,\r\n          indexValue: 0,\r\n          label: 'switch'\r\n        }]\r\n      }, {\r\n        id: 7,\r\n        indexValue: 0,\r\n        label: '循环控制',\r\n        children: [{\r\n          id: 8,\r\n          indexValue: 0,\r\n          label: 'for'\r\n        }, {\r\n          id: 9,\r\n          indexValue: 0,\r\n          label: 'while和do-while'\r\n        }, {\r\n          id: 10,\r\n          indexValue: 0,\r\n          label: '嵌套循环'\r\n        }]\r\n      }, {\r\n        id: 11,\r\n        indexValue: 0,\r\n        label: '函数与程序结构',\r\n        children: [{\r\n          id: 12,\r\n          indexValue: 0,\r\n          label: '函数定义与调用'\r\n        }, {\r\n          id: 13,\r\n          indexValue: 0,\r\n          label: '递归函数'\r\n        }, {\r\n          id: 14,\r\n          indexValue: 0,\r\n          label: '变量作用域与存储类型'\r\n        }]\r\n      }, {\r\n        id: 15,\r\n        indexValue: 0,\r\n        label: '数组',\r\n        children: [{\r\n          id: 16,\r\n          indexValue: 0,\r\n          label: '一维数组'\r\n        }, {\r\n          id: 17,\r\n          indexValue: 0,\r\n          label: '字符串'\r\n        }, {\r\n          id: 18,\r\n          indexValue: 0,\r\n          label: '二维数组'\r\n        }]\r\n      }, {\r\n        id: 19,\r\n        indexValue: 0,\r\n        label: '指针与结构',\r\n        children: [{\r\n          id: 20,\r\n          indexValue: 0,\r\n          label: '指针'\r\n        }, {\r\n          id: 21,\r\n          indexValue: 0,\r\n          label: '结构'\r\n        }, {\r\n          id: 22,\r\n          indexValue: 0,\r\n          label: '链表'\r\n        }]\r\n      }, {\r\n        id: 23,\r\n        indexValue: 0,\r\n        label: '文件',\r\n        children: [{\r\n          id: 24,\r\n          indexValue: 0,\r\n          label: '文本文件处理'\r\n        }, {\r\n          id: 25,\r\n          indexValue: 0,\r\n          label: '二进制文件处理'\r\n        }]\r\n      }]\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    toolAddRel(val) {\r\n    },\r\n    toolsState: {\r\n      deep: true,\r\n      handler(val) {\r\n        console.log(val)\r\n        this.toolAddRel = val['addRel'];\r\n        this.toolAddRelMain = val['addRelMain'];\r\n        this.toolDelRel = val['delRel'];\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n\r\n\r\n    append(data) {\r\n      const newChild = { id: this.thisId++, label: 'testtest', children: [], indexValue: 0, };\r\n      if (!data.children) {\r\n        this.$set(data, 'children', []);\r\n      }\r\n      data.children.push(newChild);\r\n    },\r\n    remove(node, data) {\r\n      const parent = node.parent;\r\n      const children = parent.data.children || parent.data;\r\n      const index = children.findIndex(d => d.id === data.id);\r\n      children.splice(index, 1);\r\n    },\r\n\r\n    renderContent(h, { node, data, store }) {\r\n      return (\r\n        // <template>\r\n        <div class=\"custom-tree-node\">\r\n          <span>{node.label}</span>\r\n\r\n          <span>\r\n            <div class=\"treeSlider\">\r\n              {/* <el-slider value={node.indexValue} on-change={(d)=>this.changTreeSlider(d,data)}></el-slider> */}\r\n            </div>\r\n            {/* <el-progress type=\"dashboard\" percentage=\"0\" width=\"40\"></el-progress> */}\r\n            <el-button size=\"mini\" type=\"text\" on-click={() => this.append(data)}>+</el-button>\r\n            <el-button size=\"mini\" type=\"text\" on-click={() => this.remove(node, data)}>-</el-button>\r\n          </span>\r\n        </div>\r\n        // </template>\r\n      );\r\n    },\r\n\r\n    onSubmit() {\r\n      const _this = this;\r\n      _this.getProblemsIds();\r\n    },\r\n    changTreeSlider(value,data) {\r\n      data.indexValue = value;\r\n      console.log(value,data)\r\n    },\r\n    getProblemsIds() {\r\n      const _this = this;\r\n      let data = [];\r\n      console.log(_this.paperIndex)\r\n      this.$http\r\n        // .get(\"/api/problem/allProblem\", { params: { name: \"12345\" } }, {})\r\n        .post(\"/api/FormPaper\", { params: _this.paperIndex }, {})\r\n        .then((response) => {\r\n          console.log(response, response.body);\r\n          _this.$bus.$emit(\"proIdList\", response.body);\r\n        });\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n\r\n    d3.select(\".chartTooltip\").classed(\"hidden\", true);\r\n    this.$bus.$on('ConceptTree', (val) => {\r\n      _this.conceptTree = val;\r\n    });\r\n    // this.$refs.moveindexInputLeft.addEventListener(\"mouseover\", _this.moveindexInputLeft); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"]}]}