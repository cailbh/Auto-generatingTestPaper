{"remainingRequest":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\pages\\Home\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\src\\pages\\Home\\index.vue","mtime":1700056531063},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\css-loader\\dist\\cjs.js","mtime":1681618859684},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1681618860357},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\postcss-loader\\src\\index.js","mtime":1681618859950},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681618859467},{"path":"D:\\Cailibuhong\\auto-generatingTestPaper\\Auto-generatingTestPaper\\sys\\node_modules\\vue-loader\\lib\\index.js","mtime":1681618860114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgJy4uLy4uL2Fzc2V0cy9zdHlsZS9ob21lLmNzcyc7DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLA","file":"index.vue","sourceRoot":"src/pages/Home","sourcesContent":["<template>\r\n  <div id=\"root\">\r\n    <!-- <button1 ref=\"button1\"></button1>\r\n    <button v-on:click=\"clickHandler\">按钮</button> -->\r\n    <!-- <svg width=\"1200\" height=\"1000\"></svg> -->\r\n\r\n    <div id=\"Container\">\r\n      <!-- <div id=\"Container-back\"></div> -->\r\n      <div id=\"head\">\r\n\r\n        <!-- <Head></Head> -->\r\n      </div>\r\n      <div id=\"allBody\">\r\n        <!-- <div id=\"controlPanel\" class=\"panel\"> -->\r\n          <!-- <ControlPanel @getToolState=\"getToolState\"></ControlPanel> -->\r\n        <!-- </div> -->\r\n        <div id=\"proListPanel\" class=\"panel\">\r\n          <ProListPanel></ProListPanel>\r\n        </div>\r\n        <div id=\"proinputPanel\" class=\"panel\">\r\n          <Proinput></Proinput> \r\n        </div>\r\n        <div id=\"procPanel\" class=\"panel\">\r\n          <ProcPanel></ProcPanel>\r\n        </div>\r\n        <!-- <div id=\"graphContainer\" v-show=\"showGraph\" class=\"panel\">\r\n          <Graph :toolsState=\"toolsState\"></Graph>\r\n        </div> -->\r\n        \r\n        <div id=\"paperContainerC\" v-show=\"showGraph\" class=\"panel\">\r\n        </div>\r\n        <div id=\"paperContainer\" v-show=\"showGraph\" class=\"panel\">\r\n          <Paper :toolsState=\"toolsState\"></Paper>\r\n        </div>\r\n        <div id=\"indexContainer\" v-show=\"showGraph\" class=\"panel\">\r\n          <!-- <Paper :toolsState=\"toolsState\"></Paper> -->\r\n          <indexInput></indexInput>\r\n        </div>\r\n        <div id=\"proModelContainer\" v-show=\"showGraph\" class=\"panel\">\r\n          <!-- <Paper :toolsState=\"toolsState\"></Paper> -->\r\n          <proModel></proModel>\r\n        </div>\r\n        <!-- <div id=\"overviewPanel\" class=\"panel\">\r\n          <OverviewPanel></OverviewPanel>\r\n        </div> -->\r\n        <!-- <transition name=\"sceneTran\"> -->\r\n\r\n        <!-- <div id=\"editPanel\" class=\"panel\"  v-if='showEdit==true'>\r\n          <EditPanel></EditPanel>\r\n        </div> -->\r\n        <div id=\"scatterPanel\" class=\"panel\">\r\n          <!-- <Scatter></Scatter> -->\r\n        </div>\r\n        <div id=\"netPPanel\" class=\"panel\">\r\n          <NetPPanel></NetPPanel>\r\n        </div>\r\n        <!-- </transition> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Head from \"@/components/Header/index.vue\";\r\nimport Graph from '@/components/Graph/index.vue';\r\nimport Paper from '@/components/PaperC/index';\r\nimport Proinput from '@/components/Proinput/index.vue';\r\nimport proModel from '@/components/proModel/index.vue';\r\nimport IndexInput from '@/components/Indexinput/index.vue';\r\n\r\nimport Scatter from '@/components/Scatter/index.vue';\r\n\r\nimport ProcPanel from '@/components/ProblemContentPanel/index.vue';\r\nimport ProListPanel from '@/components/ProblemsListContentPanel/index.vue';\r\n\r\nimport ControlPanel from '@/components/ControlPanel/index.vue'\r\nimport NetPPanel from '@/components/NetProblemPanel/index.vue';\r\nimport GroupJson from \"@/assets/json/group.json\";\r\nimport SetJson from \"@/assets/json/quz.json\";\r\nimport tools from \"@/utils/tools.js\";\r\nexport default {\r\n  components: { Head, Graph, Scatter, ProcPanel, ProListPanel, NetPPanel, ControlPanel,Proinput,Paper,IndexInput,proModel },\r\n  /* eslint-disable no-unused-vars */\r\n  data() {\r\n    return {\r\n      problemsData: [],\r\n      submissionsData: [],\r\n      groupData: GroupJson,\r\n      setTimeData: SetJson,\r\n      netData: [],\r\n      problemRelByConcept: [],\r\n      problemListByConcept: [],\r\n      studentsData: [],\r\n      conceptsData: [],\r\n      SelectStudentList: [],\r\n      conceptTree: [],\r\n      proSetData: [],\r\n      problemConceptData: [],\r\n      userProblemData: [],\r\n      toolsState: {},\r\n      timer: null,\r\n      showVideo: true,\r\n      showGraph: true,\r\n      showEdit: false,\r\n      selectEntId: \"0\",\r\n      selectEnt: \"0\",\r\n      toolState: {},\r\n      timeDur: \"\",\r\n      videoTime: 0,\r\n      windowWidth: document.documentElement.clientWidth, //实时屏幕宽度\r\n      windowHeight: document.documentElement.clientHeight, //实时屏幕高度\r\n      marge: {\r\n        top: 6,\r\n        right: 10,\r\n        bottom: 16,\r\n        left: 6,\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    toolState(val) {\r\n      if (val == 'edit')\r\n        this.showEdit = true;\r\n      else\r\n        this.showEdit = false;\r\n    },\r\n    selectEnt(val) {\r\n      this.selectEntId = val;\r\n    },\r\n    timeDur() {\r\n    },\r\n    cube_data() {\r\n      this.$nextTick(() => { });\r\n    },\r\n    cluData() {\r\n      this.$nextTick(() => {\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    // getProblems() {\r\n    //   const _this = this;\r\n    //   let data = [];\r\n    //   this.$http\r\n    //     // .get(\"/api/problem/allProblem\", { params: { name: \"12345\" } }, {})\r\n    //     .get(\"/api/test\", {}, {})\r\n    //     .then((response) => {\r\n    //       console.log(response.body);\r\n    //     });\r\n    // },\r\n   \r\n    getAllData() {\r\n      const _this = this;\r\n      // this.getProblems();\r\n    }\r\n  },\r\n  created: function () {\r\n    var _this = this;\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    this.$el.style.setProperty(\"--heightStyle\", this.windowHeight + \"px\");\r\n    // this.showVideo = true;\r\n    // this.$bus.$emit(\"groupData\", _this.groupData);\r\n    // this.toolState = {\r\n    //   \"addRel\": false,\r\n    //   \"addRelMain\": false,\r\n    //   \"delRel\":false,\r\n    // }\r\n    this.getAllData();\r\n    this.$bus.$on('SelectedStu', (val) => {\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    clearTimeout(this.timer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n@import '../../assets/style/home.css';\r\n</style>"]}]}